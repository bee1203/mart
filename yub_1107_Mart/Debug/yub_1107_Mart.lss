
yub_1107_Mart.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e4  00800100  00000ed8  00000f6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ed8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  008001e4  008001e4  00001050  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001050  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000010ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000010e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014ca  00000000  00000000  00001160  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000097d  00000000  00000000  0000262a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008dd  00000000  00000000  00002fa7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000138  00000000  00000000  00003884  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005bf  00000000  00000000  000039bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a41  00000000  00000000  00003f7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  000049bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	59 c1       	rjmp	.+690    	; 0x2f4 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ed       	ldi	r30, 0xD8	; 216
  a0:	fe e0       	ldi	r31, 0x0E	; 14
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 3e       	cpi	r26, 0xE4	; 228
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 ee       	ldi	r26, 0xE4	; 228
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 3f       	cpi	r26, 0xFC	; 252
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	7c d1       	rcall	.+760    	; 0x3bc <main>
  c4:	07 c7       	rjmp	.+3598   	; 0xed4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <_Z10init_PORTCv>:
#define ENABLE  (PORTC |= 0x04)
#define DISABLE (PORTC &= 0xFB)

void init_PORTC(void)
{
  DDRC = 0xFF;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	84 bb       	out	0x14, r24	; 20
  PORTC = 0xFF;
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	08 95       	ret

000000d0 <_Z14instrction_outh>:
}
 
void instrction_out(unsigned char b)
{
	PORTC = b&0xF0;
  d0:	98 2f       	mov	r25, r24
  d2:	90 7f       	andi	r25, 0xF0	; 240
  d4:	95 bb       	out	0x15, r25	; 21
	ENABLE;
  d6:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
  d8:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0);
  da:	20 e1       	ldi	r18, 0x10	; 16
  dc:	82 9f       	mul	r24, r18
  de:	c0 01       	movw	r24, r0
  e0:	11 24       	eor	r1, r1
  e2:	85 bb       	out	0x15, r24	; 21
	ENABLE;
  e4:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
  e6:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e8:	8f e3       	ldi	r24, 0x3F	; 63
  ea:	9f e1       	ldi	r25, 0x1F	; 31
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <_Z14instrction_outh+0x1c>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <_Z14instrction_outh+0x22>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <_Z8char_outh>:
	_delay_ms(2);
}
void char_out(unsigned char b)
{
	PORTC=(b&0xF0)|0x01;
  f6:	98 2f       	mov	r25, r24
  f8:	90 7f       	andi	r25, 0xF0	; 240
  fa:	91 60       	ori	r25, 0x01	; 1
  fc:	95 bb       	out	0x15, r25	; 21
	ENABLE;
  fe:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
 100:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0)|0x01;
 102:	20 e1       	ldi	r18, 0x10	; 16
 104:	82 9f       	mul	r24, r18
 106:	c0 01       	movw	r24, r0
 108:	11 24       	eor	r1, r1
 10a:	81 60       	ori	r24, 0x01	; 1
 10c:	85 bb       	out	0x15, r24	; 21
	ENABLE;
 10e:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
 110:	aa 98       	cbi	0x15, 2	; 21
 112:	8f e3       	ldi	r24, 0x3F	; 63
 114:	9f e1       	ldi	r25, 0x1F	; 31
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <_Z8char_outh+0x20>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <_Z8char_outh+0x26>
 11c:	00 00       	nop
 11e:	08 95       	ret

00000120 <_Z10lcd_gotoxyhh>:
}
void lcd_gotoxy(unsigned char x, unsigned char y)
{
	// 16 * 2 Character LCD  
	//  Busy();
	switch(y)
 120:	66 23       	and	r22, r22
 122:	19 f0       	breq	.+6      	; 0x12a <_Z10lcd_gotoxyhh+0xa>
 124:	61 30       	cpi	r22, 0x01	; 1
 126:	21 f0       	breq	.+8      	; 0x130 <_Z10lcd_gotoxyhh+0x10>
 128:	08 95       	ret
	{
	    case 0 : instrction_out(0x80+x); break;
 12a:	80 58       	subi	r24, 0x80	; 128
 12c:	d1 cf       	rjmp	.-94     	; 0xd0 <_Z14instrction_outh>
 12e:	08 95       	ret
	    case 1 : instrction_out(0xC0+x); break;
 130:	80 54       	subi	r24, 0x40	; 64
 132:	ce cf       	rjmp	.-100    	; 0xd0 <_Z14instrction_outh>
 134:	08 95       	ret

00000136 <_Z9lcd_putsfhhPh>:
	}
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	04 2f       	mov	r16, r20
 140:	15 2f       	mov	r17, r21
	unsigned int i=0;
	lcd_gotoxy(x,y);
 142:	ee df       	rcall	.-36     	; 0x120 <_Z10lcd_gotoxyhh>
 144:	c0 2f       	mov	r28, r16
 146:	d1 2f       	mov	r29, r17
	do
	{
		char_out(str[i]);
 148:	89 91       	ld	r24, Y+
 14a:	d5 df       	rcall	.-86     	; 0xf6 <_Z8char_outh>
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
	unsigned int i=0;
	lcd_gotoxy(x,y);
	do
 14c:	88 81       	ld	r24, Y
 14e:	81 11       	cpse	r24, r1
 150:	fb cf       	rjmp	.-10     	; 0x148 <_Z9lcd_putsfhhPh+0x12>
	{
		char_out(str[i]);
	}
	while(str[++i]!='\0');
}
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	1f 91       	pop	r17
 158:	0f 91       	pop	r16
 15a:	08 95       	ret

0000015c <_Z8lcd_initv>:
void lcd_init(void)
{
	init_PORTC();
 15c:	b5 df       	rcall	.-150    	; 0xc8 <_Z10init_PORTCv>
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	83 ec       	ldi	r24, 0xC3	; 195
 162:	99 e0       	ldi	r25, 0x09	; 9
 164:	21 50       	subi	r18, 0x01	; 1
 166:	80 40       	sbci	r24, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <_Z8lcd_initv+0x8>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <_Z8lcd_initv+0x12>
 16e:	00 00       	nop
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 170:	8f e5       	ldi	r24, 0x5F	; 95
 172:	99 e0       	ldi	r25, 0x09	; 9
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <_Z8lcd_initv+0x18>
 178:	00 c0       	rjmp	.+0      	; 0x17a <_Z8lcd_initv+0x1e>
 17a:	00 00       	nop
	_delay_ms(200);
	_delay_us(600);
	instrction_out(0x28);
 17c:	88 e2       	ldi	r24, 0x28	; 40
 17e:	a8 df       	rcall	.-176    	; 0xd0 <_Z14instrction_outh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 180:	9f ef       	ldi	r25, 0xFF	; 255
 182:	23 ec       	ldi	r18, 0xC3	; 195
 184:	89 e0       	ldi	r24, 0x09	; 9
 186:	91 50       	subi	r25, 0x01	; 1
 188:	20 40       	sbci	r18, 0x00	; 0
 18a:	80 40       	sbci	r24, 0x00	; 0
 18c:	e1 f7       	brne	.-8      	; 0x186 <_Z8lcd_initv+0x2a>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <_Z8lcd_initv+0x34>
	_delay_ms(200);
	instrction_out(0x28);
 190:	00 00       	nop
 192:	88 e2       	ldi	r24, 0x28	; 40
 194:	9d df       	rcall	.-198    	; 0xd0 <_Z14instrction_outh>
 196:	9f ef       	ldi	r25, 0xFF	; 255
 198:	23 ec       	ldi	r18, 0xC3	; 195
 19a:	89 e0       	ldi	r24, 0x09	; 9
 19c:	91 50       	subi	r25, 0x01	; 1
 19e:	20 40       	sbci	r18, 0x00	; 0
 1a0:	80 40       	sbci	r24, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <_Z8lcd_initv+0x40>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <_Z8lcd_initv+0x4a>
	_delay_ms(200);
	instrction_out(0x0C);
 1a6:	00 00       	nop
 1a8:	8c e0       	ldi	r24, 0x0C	; 12
	instrction_out(0x06);
 1aa:	92 df       	rcall	.-220    	; 0xd0 <_Z14instrction_outh>
 1ac:	86 e0       	ldi	r24, 0x06	; 6
	instrction_out(0x02);
 1ae:	90 df       	rcall	.-224    	; 0xd0 <_Z14instrction_outh>
 1b0:	82 e0       	ldi	r24, 0x02	; 2
	instrction_out(0x01);
 1b2:	8e df       	rcall	.-228    	; 0xd0 <_Z14instrction_outh>
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	8c df       	rcall	.-232    	; 0xd0 <_Z14instrction_outh>
	instrction_out(0x01);
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	8a cf       	rjmp	.-236    	; 0xd0 <_Z14instrction_outh>
 1bc:	08 95       	ret

000001be <_Z9lcd_clearv>:
 1be:	81 e0       	ldi	r24, 0x01	; 1
}
void lcd_clear(void)
{
	instrction_out(0x01);
 1c0:	87 df       	rcall	.-242    	; 0xd0 <_Z14instrction_outh>
 1c2:	8f e3       	ldi	r24, 0x3F	; 63
 1c4:	9c e9       	ldi	r25, 0x9C	; 156
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <_Z9lcd_clearv+0x8>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <_Z9lcd_clearv+0xe>
 1cc:	00 00       	nop
 1ce:	08 95       	ret

000001d0 <_Z4initv>:
#define KEY_Menu  123
#define KEY_MONEY 183
#define KEY_LOBY  119

void init()
{
 1d0:	1f 93       	push	r17
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
	DDRA = 0xff;  // 0 1 : Moter  
 1d6:	8f ef       	ldi	r24, 0xFF	; 255
 1d8:	8a bb       	out	0x1a, r24	; 26
				  // 5 6 7 : LED
	DDRD = 0x0f;  // 0 1 2 3 : Row
 1da:	8f e0       	ldi	r24, 0x0F	; 15
 1dc:	81 bb       	out	0x11, r24	; 17
				  // 4 5 6 7 : Col
				  
	TIMSK = 0x01;
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	87 bf       	out	0x37, r24	; 55
	TCCR0 = 0x07;
 1e2:	87 e0       	ldi	r24, 0x07	; 7
 1e4:	83 bf       	out	0x33, r24	; 51
 1e6:	8f e3       	ldi	r24, 0x3F	; 63
 1e8:	9f e1       	ldi	r25, 0x1F	; 31
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <_Z4initv+0x1a>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <_Z4initv+0x20>
 1f0:	00 00       	nop
	_delay_ms(2);
	
	lcd_init();
 1f2:	b4 df       	rcall	.-152    	; 0x15c <_Z8lcd_initv>
	lcd_clear();
 1f4:	e4 df       	rcall	.-56     	; 0x1be <_Z9lcd_clearv>
 1f6:	c2 e0       	ldi	r28, 0x02	; 2
 1f8:	d0 e0       	ldi	r29, 0x00	; 0
 1fa:	1f ef       	ldi	r17, 0xFF	; 255
		lcd_putsf(0,0,(unsigned char*)"     MARKET     ");
		lcd_putsf(0,1,(unsigned char*)"     SYSTEM     ");
		PORTA = 0x00;
		_delay_ms(100);
		lcd_clear();
		PORTA = 0xff;
 1fc:	44 e1       	ldi	r20, 0x14	; 20
	lcd_clear();
	
	for (int i = 0; i < 2; i++)
	{
		
		lcd_putsf(0,0,(unsigned char*)"     MARKET     ");
 1fe:	51 e0       	ldi	r21, 0x01	; 1
 200:	60 e0       	ldi	r22, 0x00	; 0
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	98 df       	rcall	.-208    	; 0x136 <_Z9lcd_putsfhhPh>
 206:	45 e2       	ldi	r20, 0x25	; 37
		lcd_putsf(0,1,(unsigned char*)"     SYSTEM     ");
 208:	51 e0       	ldi	r21, 0x01	; 1
 20a:	61 e0       	ldi	r22, 0x01	; 1
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	93 df       	rcall	.-218    	; 0x136 <_Z9lcd_putsfhhPh>
 210:	1b ba       	out	0x1b, r1	; 27
		PORTA = 0x00;
 212:	9f ef       	ldi	r25, 0xFF	; 255
 214:	21 ee       	ldi	r18, 0xE1	; 225
 216:	84 e0       	ldi	r24, 0x04	; 4
 218:	91 50       	subi	r25, 0x01	; 1
 21a:	20 40       	sbci	r18, 0x00	; 0
 21c:	80 40       	sbci	r24, 0x00	; 0
 21e:	e1 f7       	brne	.-8      	; 0x218 <_Z4initv+0x48>
 220:	00 c0       	rjmp	.+0      	; 0x222 <_Z4initv+0x52>
 222:	00 00       	nop
		_delay_ms(100);
		lcd_clear();
 224:	cc df       	rcall	.-104    	; 0x1be <_Z9lcd_clearv>
 226:	1b bb       	out	0x1b, r17	; 27
		PORTA = 0xff;
 228:	9f ef       	ldi	r25, 0xFF	; 255
 22a:	21 ee       	ldi	r18, 0xE1	; 225
 22c:	84 e0       	ldi	r24, 0x04	; 4
 22e:	91 50       	subi	r25, 0x01	; 1
 230:	20 40       	sbci	r18, 0x00	; 0
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	e1 f7       	brne	.-8      	; 0x22e <_Z4initv+0x5e>
 236:	00 c0       	rjmp	.+0      	; 0x238 <_Z4initv+0x68>
 238:	00 00       	nop
 23a:	21 97       	sbiw	r28, 0x01	; 1
 23c:	f9 f6       	brne	.-66     	; 0x1fc <_Z4initv+0x2c>
	_delay_ms(2);
	
	lcd_init();
	lcd_clear();
	
	for (int i = 0; i < 2; i++)
 23e:	78 94       	sei
		_delay_ms(100);
		lcd_clear();
		PORTA = 0xff;
		_delay_ms(100);
	}
	sei(); // Global Interrupt Enable
 240:	df 91       	pop	r29
}
 242:	cf 91       	pop	r28
 244:	1f 91       	pop	r17
 246:	08 95       	ret

00000248 <_Z13Display_Clockjjj>:
 248:	0f 93       	push	r16

void Display_Clock(unsigned int hour, unsigned int min, unsigned int sec)
{
 24a:	1f 93       	push	r17
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	cd b7       	in	r28, 0x3d	; 61
 252:	de b7       	in	r29, 0x3e	; 62
 254:	60 97       	sbiw	r28, 0x10	; 16
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	f8 94       	cli
 25a:	de bf       	out	0x3e, r29	; 62
 25c:	0f be       	out	0x3f, r0	; 63
 25e:	cd bf       	out	0x3d, r28	; 61
	char str[16];
	sprintf(str,"    %02d:%02d:%02d    ",hour, min, sec);
 260:	5f 93       	push	r21
 262:	4f 93       	push	r20
 264:	7f 93       	push	r23
 266:	6f 93       	push	r22
 268:	9f 93       	push	r25
 26a:	8f 93       	push	r24
 26c:	86 e3       	ldi	r24, 0x36	; 54
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	9f 93       	push	r25
 272:	8f 93       	push	r24
 274:	8e 01       	movw	r16, r28
 276:	0f 5f       	subi	r16, 0xFF	; 255
 278:	1f 4f       	sbci	r17, 0xFF	; 255
 27a:	1f 93       	push	r17
 27c:	0f 93       	push	r16
 27e:	4f d3       	rcall	.+1694   	; 0x91e <sprintf>
	lcd_putsf(0,1,(unsigned char *)str);
 280:	a8 01       	movw	r20, r16
 282:	61 e0       	ldi	r22, 0x01	; 1
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	57 df       	rcall	.-338    	; 0x136 <_Z9lcd_putsfhhPh>
}
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
 292:	60 96       	adiw	r28, 0x10	; 16
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	f8 94       	cli
 298:	de bf       	out	0x3e, r29	; 62
 29a:	0f be       	out	0x3f, r0	; 63
 29c:	cd bf       	out	0x3d, r28	; 61
 29e:	df 91       	pop	r29
 2a0:	cf 91       	pop	r28
 2a2:	1f 91       	pop	r17
 2a4:	0f 91       	pop	r16
 2a6:	08 95       	ret

000002a8 <_Z6getkeyv>:

unsigned int getkey()
{	
	unsigned int key = 0;
	for(int i = 0; i < 4; i++)
 2a8:	20 e0       	ldi	r18, 0x00	; 0
 2aa:	30 e0       	ldi	r19, 0x00	; 0
	{
		PORTD = ~(0x00 | 1 << i); 
 2ac:	41 e0       	ldi	r20, 0x01	; 1
 2ae:	50 e0       	ldi	r21, 0x00	; 0
 2b0:	ca 01       	movw	r24, r20
 2b2:	02 2e       	mov	r0, r18
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <_Z6getkeyv+0x12>
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	0a 94       	dec	r0
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <_Z6getkeyv+0xe>
 2be:	80 95       	com	r24
 2c0:	82 bb       	out	0x12, r24	; 18
 2c2:	8f e3       	ldi	r24, 0x3F	; 63
 2c4:	9c e9       	ldi	r25, 0x9C	; 156
 2c6:	01 97       	sbiw	r24, 0x01	; 1
 2c8:	f1 f7       	brne	.-4      	; 0x2c6 <_Z6getkeyv+0x1e>
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <_Z6getkeyv+0x24>
 2cc:	00 00       	nop
		_delay_ms(10);
		key = (~PIND & 0xf0); // key가 눌리지 않았을 때 0값을 출력하도록 함
 2ce:	80 b3       	in	r24, 0x10	; 16
		
		if (key) return PIND; // key가 눌렸다면 0이 아니므로 고유값 PIND를 반환
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	80 95       	com	r24
 2d4:	90 95       	com	r25
 2d6:	80 7f       	andi	r24, 0xF0	; 240
 2d8:	99 27       	eor	r25, r25
 2da:	89 2b       	or	r24, r25
 2dc:	19 f0       	breq	.+6      	; 0x2e4 <_Z6getkeyv+0x3c>
 2de:	80 b3       	in	r24, 0x10	; 16
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	08 95       	ret
}

unsigned int getkey()
{	
	unsigned int key = 0;
	for(int i = 0; i < 4; i++)
 2e4:	2f 5f       	subi	r18, 0xFF	; 255
 2e6:	3f 4f       	sbci	r19, 0xFF	; 255
 2e8:	24 30       	cpi	r18, 0x04	; 4
 2ea:	31 05       	cpc	r19, r1
 2ec:	09 f7       	brne	.-62     	; 0x2b0 <_Z6getkeyv+0x8>
		_delay_ms(10);
		key = (~PIND & 0xf0); // key가 눌리지 않았을 때 0값을 출력하도록 함
		
		if (key) return PIND; // key가 눌렸다면 0이 아니므로 고유값 PIND를 반환
	}
	return 0;
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	90 e0       	ldi	r25, 0x00	; 0
}
 2f2:	08 95       	ret

000002f4 <__vector_16>:
char buf1[16];
int flag = 0;
int change = 0;

ISR(TIMER0_OVF_vect)
{
 2f4:	1f 92       	push	r1
 2f6:	0f 92       	push	r0
 2f8:	0f b6       	in	r0, 0x3f	; 63
 2fa:	0f 92       	push	r0
 2fc:	11 24       	eor	r1, r1
 2fe:	8f 93       	push	r24
 300:	9f 93       	push	r25
	timer++;
 302:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <timer>
 306:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <timer+0x1>
 30a:	01 96       	adiw	r24, 0x01	; 1
 30c:	90 93 f3 01 	sts	0x01F3, r25	; 0x8001f3 <timer+0x1>
 310:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <timer>
	time_count++;
 314:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <time_count>
 318:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <time_count+0x1>
 31c:	01 96       	adiw	r24, 0x01	; 1
 31e:	90 93 fb 01 	sts	0x01FB, r25	; 0x8001fb <time_count+0x1>
 322:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <time_count>
	if (time_count >= 60)
 326:	cc 97       	sbiw	r24, 0x3c	; 60
 328:	08 f4       	brcc	.+2      	; 0x32c <__vector_16+0x38>
 32a:	41 c0       	rjmp	.+130    	; 0x3ae <__vector_16+0xba>
	{
		sec++;
 32c:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <sec>
 330:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <sec+0x1>
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <sec+0x1>
 33a:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <sec>
		if (sec > 59) {min++; sec = 0;}
 33e:	cc 97       	sbiw	r24, 0x3c	; 60
 340:	68 f0       	brcs	.+26     	; 0x35c <__vector_16+0x68>
 342:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <min>
 346:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <min+0x1>
 34a:	01 96       	adiw	r24, 0x01	; 1
 34c:	90 93 f7 01 	sts	0x01F7, r25	; 0x8001f7 <min+0x1>
 350:	80 93 f6 01 	sts	0x01F6, r24	; 0x8001f6 <min>
 354:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <sec+0x1>
 358:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <sec>
		if (min > 59) {hour++; min = 0;}
 35c:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <min>
 360:	90 91 f7 01 	lds	r25, 0x01F7	; 0x8001f7 <min+0x1>
 364:	cc 97       	sbiw	r24, 0x3c	; 60
 366:	68 f0       	brcs	.+26     	; 0x382 <__vector_16+0x8e>
 368:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <hour>
 36c:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <hour+0x1>
 370:	01 96       	adiw	r24, 0x01	; 1
 372:	90 93 f5 01 	sts	0x01F5, r25	; 0x8001f5 <hour+0x1>
 376:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <hour>
 37a:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <min+0x1>
 37e:	10 92 f6 01 	sts	0x01F6, r1	; 0x8001f6 <min>
		if (hour > 24) {hour = min = sec = 0;}
 382:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <hour>
 386:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <hour+0x1>
 38a:	49 97       	sbiw	r24, 0x19	; 25
 38c:	60 f0       	brcs	.+24     	; 0x3a6 <__vector_16+0xb2>
 38e:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <sec+0x1>
 392:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <sec>
 396:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <min+0x1>
 39a:	10 92 f6 01 	sts	0x01F6, r1	; 0x8001f6 <min>
 39e:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <hour+0x1>
 3a2:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <hour>
		time_count = 0;
 3a6:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <time_count+0x1>
 3aa:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <time_count>
	}
}
 3ae:	9f 91       	pop	r25
 3b0:	8f 91       	pop	r24
 3b2:	0f 90       	pop	r0
 3b4:	0f be       	out	0x3f, r0	; 63
 3b6:	0f 90       	pop	r0
 3b8:	1f 90       	pop	r1
 3ba:	18 95       	reti

000003bc <main>:

int main(void)
{
 3bc:	cf 93       	push	r28
 3be:	df 93       	push	r29
 3c0:	cd b7       	in	r28, 0x3d	; 61
 3c2:	de b7       	in	r29, 0x3e	; 62
 3c4:	60 97       	sbiw	r28, 0x10	; 16
 3c6:	0f b6       	in	r0, 0x3f	; 63
 3c8:	f8 94       	cli
 3ca:	de bf       	out	0x3e, r29	; 62
 3cc:	0f be       	out	0x3f, r0	; 63
 3ce:	cd bf       	out	0x3d, r28	; 61
	init();
 3d0:	ff de       	rcall	.-514    	; 0x1d0 <_Z4initv>
					break;
				}
			}
			if ((input_key == KEY_Enter) && (flag == 0))
			{
				flag = 1;
 3d2:	cc 24       	eor	r12, r12
 3d4:	c3 94       	inc	r12
 3d6:	d1 2c       	mov	r13, r1
				if (input_money >= total_money)
				{
					int future = timer + 5000;
					total_sales += total_money;					
					sprintf(buf1,"=%11d won",input_money - total_money);
 3d8:	0f 2e       	mov	r0, r31
 3da:	f1 e9       	ldi	r31, 0x91	; 145
 3dc:	af 2e       	mov	r10, r31
 3de:	f1 e0       	ldi	r31, 0x01	; 1
 3e0:	bf 2e       	mov	r11, r31
 3e2:	f0 2d       	mov	r31, r0
 3e4:	ce 01       	movw	r24, r28
 3e6:	01 96       	adiw	r24, 0x01	; 1
 3e8:	7c 01       	movw	r14, r24
			{
				if ((input_key == number[i]) && (flag == 0))
				{
					flag = 1;
					input_money = input_money * 10 + i;
					sprintf(buf1,"%d",input_money);
 3ea:	0f 2e       	mov	r0, r31
 3ec:	fb e9       	ldi	r31, 0x9B	; 155
 3ee:	8f 2e       	mov	r8, r31
 3f0:	f1 e0       	ldi	r31, 0x01	; 1
 3f2:	9f 2e       	mov	r9, r31
 3f4:	f0 2d       	mov	r31, r0
			{
				lcd_clear();
				lcd_putsf(0,0,(unsigned char *)"Total Sales     ");
				sprintf(buf1,"=%11d won",total_sales);
				lcd_putsf(0,1,(unsigned char *)buf1);
				PORTA = 0b01111111;
 3f6:	0f 2e       	mov	r0, r31
 3f8:	ff e7       	ldi	r31, 0x7F	; 127
 3fa:	6f 2e       	mov	r6, r31
 3fc:	f0 2d       	mov	r31, r0
				mode = TOTAL_MODE;
 3fe:	68 94       	set
 400:	44 24       	eor	r4, r4
 402:	42 f8       	bld	r4, 2
 404:	51 2c       	mov	r5, r1
			if (input_key == KEY_1)
			{
				lcd_clear();
				lcd_putsf(0,0,(unsigned char *)"Calculate Mode  ");
				PORTA = 0b11011111;
				mode = CALC_MODE;
 406:	68 94       	set
 408:	22 24       	eor	r2, r2
 40a:	21 f8       	bld	r2, 1
 40c:	31 2c       	mov	r3, r1
		input_key = getkey();
		if (input_key == 0) flag = 0;
		if (input_key == KEY_LOBY)
		{
			lcd_clear();
			PORTA = 0xff;
 40e:	77 24       	eor	r7, r7
	init();
	char buf1[16];
	unsigned int input_key = 0;
	while (1)
	{
		input_key = getkey();
 410:	7a 94       	dec	r7
 412:	4a df       	rcall	.-364    	; 0x2a8 <_Z6getkeyv>
 414:	8c 01       	movw	r16, r24
		if (input_key == 0) flag = 0;
 416:	00 97       	sbiw	r24, 0x00	; 0
 418:	59 f4       	brne	.+22     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 41a:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <flag+0x1>
 41e:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <flag>
		{
			lcd_clear();
			PORTA = 0xff;
			mode = NORMAL_MODE;
		}
		if (mode == NORMAL_MODE)
 422:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <mode>
 426:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <mode+0x1>
 42a:	00 97       	sbiw	r24, 0x00	; 0
 42c:	a9 f5       	brne	.+106    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 42e:	69 c2       	rjmp	.+1234   	; 0x902 <__LOCK_REGION_LENGTH__+0x502>
	unsigned int input_key = 0;
	while (1)
	{
		input_key = getkey();
		if (input_key == 0) flag = 0;
		if (input_key == KEY_LOBY)
 430:	87 37       	cpi	r24, 0x77	; 119
 432:	91 05       	cpc	r25, r1
		{
			lcd_clear();
 434:	a1 f4       	brne	.+40     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 436:	c3 de       	rcall	.-634    	; 0x1be <_Z9lcd_clearv>
			PORTA = 0xff;
 438:	7b ba       	out	0x1b, r7	; 27
			mode = NORMAL_MODE;
 43a:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <mode+0x1>
 43e:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <mode>
		}
		if (mode == NORMAL_MODE)
		{
			Display_Clock(hour, min, sec);
 442:	40 91 f8 01 	lds	r20, 0x01F8	; 0x8001f8 <sec>
 446:	50 91 f9 01 	lds	r21, 0x01F9	; 0x8001f9 <sec+0x1>
 44a:	60 91 f6 01 	lds	r22, 0x01F6	; 0x8001f6 <min>
 44e:	70 91 f7 01 	lds	r23, 0x01F7	; 0x8001f7 <min+0x1>
 452:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <hour>
 456:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <hour+0x1>
 45a:	f6 de       	rcall	.-532    	; 0x248 <_Z13Display_Clockjjj>
 45c:	da cf       	rjmp	.-76     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
		{
			lcd_clear();
			PORTA = 0xff;
			mode = NORMAL_MODE;
		}
		if (mode == NORMAL_MODE)
 45e:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <mode>
 462:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <mode+0x1>
 466:	00 97       	sbiw	r24, 0x00	; 0
 468:	b9 f4       	brne	.+46     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
		{
			Display_Clock(hour, min, sec);
 46a:	40 91 f8 01 	lds	r20, 0x01F8	; 0x8001f8 <sec>
 46e:	50 91 f9 01 	lds	r21, 0x01F9	; 0x8001f9 <sec+0x1>
 472:	60 91 f6 01 	lds	r22, 0x01F6	; 0x8001f6 <min>
 476:	70 91 f7 01 	lds	r23, 0x01F7	; 0x8001f7 <min+0x1>
 47a:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <hour>
 47e:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <hour+0x1>
 482:	e2 de       	rcall	.-572    	; 0x248 <_Z13Display_Clockjjj>
			if (input_key == KEY_Menu)
 484:	0b 37       	cpi	r16, 0x7B	; 123
 486:	11 05       	cpc	r17, r1
 488:	09 f0       	breq	.+2      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 48a:	c3 cf       	rjmp	.-122    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
			{
				lcd_clear();
 48c:	98 de       	rcall	.-720    	; 0x1be <_Z9lcd_clearv>
 48e:	d0 92 f1 01 	sts	0x01F1, r13	; 0x8001f1 <mode+0x1>
				mode = MENU_MODE;
 492:	c0 92 f0 01 	sts	0x01F0, r12	; 0x8001f0 <mode>
 496:	bd cf       	rjmp	.-134    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 498:	81 30       	cpi	r24, 0x01	; 1
			}
		}
		else if (mode == MENU_MODE)
 49a:	91 05       	cpc	r25, r1
 49c:	09 f0       	breq	.+2      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 49e:	47 c0       	rjmp	.+142    	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
		{
			lcd_putsf(0,0,(unsigned char *)"1: Calculation  ");
 4a0:	4d e4       	ldi	r20, 0x4D	; 77
 4a2:	51 e0       	ldi	r21, 0x01	; 1
 4a4:	60 e0       	ldi	r22, 0x00	; 0
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	46 de       	rcall	.-884    	; 0x136 <_Z9lcd_putsfhhPh>
			lcd_putsf(0,1,(unsigned char *)"2: Total Sales  ");
 4aa:	4e e5       	ldi	r20, 0x5E	; 94
 4ac:	51 e0       	ldi	r21, 0x01	; 1
 4ae:	61 e0       	ldi	r22, 0x01	; 1
 4b0:	80 e0       	ldi	r24, 0x00	; 0
 4b2:	41 de       	rcall	.-894    	; 0x136 <_Z9lcd_putsfhhPh>
			
			if (input_key == KEY_1)
 4b4:	0e 3e       	cpi	r16, 0xEE	; 238
 4b6:	11 05       	cpc	r17, r1
			{
				lcd_clear();
 4b8:	69 f4       	brne	.+26     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4ba:	81 de       	rcall	.-766    	; 0x1be <_Z9lcd_clearv>
				lcd_putsf(0,0,(unsigned char *)"Calculate Mode  ");
 4bc:	4f e6       	ldi	r20, 0x6F	; 111
 4be:	51 e0       	ldi	r21, 0x01	; 1
 4c0:	60 e0       	ldi	r22, 0x00	; 0
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	38 de       	rcall	.-912    	; 0x136 <_Z9lcd_putsfhhPh>
 4c6:	9f ed       	ldi	r25, 0xDF	; 223
				PORTA = 0b11011111;
 4c8:	9b bb       	out	0x1b, r25	; 27
				mode = CALC_MODE;
 4ca:	30 92 f1 01 	sts	0x01F1, r3	; 0x8001f1 <mode+0x1>
 4ce:	20 92 f0 01 	sts	0x01F0, r2	; 0x8001f0 <mode>
			}
			if (input_key == KEY_2)
 4d2:	23 c0       	rjmp	.+70     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4d4:	0e 3d       	cpi	r16, 0xDE	; 222
 4d6:	11 05       	cpc	r17, r1
			{
				lcd_clear();
 4d8:	01 f5       	brne	.+64     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4da:	71 de       	rcall	.-798    	; 0x1be <_Z9lcd_clearv>
				lcd_putsf(0,0,(unsigned char *)"Total Sales     ");
 4dc:	40 e8       	ldi	r20, 0x80	; 128
 4de:	51 e0       	ldi	r21, 0x01	; 1
 4e0:	60 e0       	ldi	r22, 0x00	; 0
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	28 de       	rcall	.-944    	; 0x136 <_Z9lcd_putsfhhPh>
				sprintf(buf1,"=%11d won",total_sales);
 4e6:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <total_sales+0x1>
 4ea:	8f 93       	push	r24
 4ec:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <total_sales>
 4f0:	8f 93       	push	r24
 4f2:	bf 92       	push	r11
 4f4:	af 92       	push	r10
 4f6:	ff 92       	push	r15
 4f8:	ef 92       	push	r14
 4fa:	11 d2       	rcall	.+1058   	; 0x91e <sprintf>
				lcd_putsf(0,1,(unsigned char *)buf1);
 4fc:	a7 01       	movw	r20, r14
 4fe:	61 e0       	ldi	r22, 0x01	; 1
 500:	80 e0       	ldi	r24, 0x00	; 0
 502:	19 de       	rcall	.-974    	; 0x136 <_Z9lcd_putsfhhPh>
 504:	6b ba       	out	0x1b, r6	; 27
				PORTA = 0b01111111;
 506:	50 92 f1 01 	sts	0x01F1, r5	; 0x8001f1 <mode+0x1>
				mode = TOTAL_MODE;
 50a:	40 92 f0 01 	sts	0x01F0, r4	; 0x8001f0 <mode>
 50e:	0f 90       	pop	r0
 510:	0f 90       	pop	r0
 512:	0f 90       	pop	r0
 514:	0f 90       	pop	r0
 516:	0f 90       	pop	r0
 518:	0f 90       	pop	r0
 51a:	2f ef       	ldi	r18, 0xFF	; 255
 51c:	80 e7       	ldi	r24, 0x70	; 112
 51e:	92 e0       	ldi	r25, 0x02	; 2
 520:	21 50       	subi	r18, 0x01	; 1
 522:	80 40       	sbci	r24, 0x00	; 0
 524:	90 40       	sbci	r25, 0x00	; 0
 526:	e1 f7       	brne	.-8      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 528:	00 c0       	rjmp	.+0      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 52a:	00 00       	nop
 52c:	72 cf       	rjmp	.-284    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 52e:	82 30       	cpi	r24, 0x02	; 2
			}
			_delay_ms(50);
		}
		else if (mode == CALC_MODE)
 530:	91 05       	cpc	r25, r1
 532:	09 f0       	breq	.+2      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 534:	2b c1       	rjmp	.+598    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
 536:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
		{		
			if (change == 0)
 53a:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <__data_end+0x1>
 53e:	89 2b       	or	r24, r25
 540:	09 f0       	breq	.+2      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 542:	0a c1       	rjmp	.+532    	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 544:	40 91 e6 01 	lds	r20, 0x01E6	; 0x8001e6 <flag>
			{
				for (int i = 0; i < 10; i++)
				{
					if ((input_key == number[i]) && (flag == 0))
 548:	50 91 e7 01 	lds	r21, 0x01E7	; 0x8001e7 <flag+0x1>
 54c:	e0 e0       	ldi	r30, 0x00	; 0
 54e:	f1 e0       	ldi	r31, 0x01	; 1
 550:	80 e0       	ldi	r24, 0x00	; 0
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	21 91       	ld	r18, Z+
 556:	31 91       	ld	r19, Z+
 558:	02 17       	cp	r16, r18
 55a:	13 07       	cpc	r17, r19
 55c:	71 f5       	brne	.+92     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 55e:	41 15       	cp	r20, r1
 560:	51 05       	cpc	r21, r1
 562:	59 f5       	brne	.+86     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 564:	d0 92 e7 01 	sts	0x01E7, r13	; 0x8001e7 <flag+0x1>
					{
						flag = 1;
 568:	c0 92 e6 01 	sts	0x01E6, r12	; 0x8001e6 <flag>
 56c:	20 91 ee 01 	lds	r18, 0x01EE	; 0x8001ee <product_price>
						product_price = product_price * 10 + i;
 570:	30 91 ef 01 	lds	r19, 0x01EF	; 0x8001ef <product_price+0x1>
 574:	a9 01       	movw	r20, r18
 576:	44 0f       	add	r20, r20
 578:	55 1f       	adc	r21, r21
 57a:	22 0f       	add	r18, r18
 57c:	33 1f       	adc	r19, r19
 57e:	22 0f       	add	r18, r18
 580:	33 1f       	adc	r19, r19
 582:	22 0f       	add	r18, r18
 584:	33 1f       	adc	r19, r19
 586:	24 0f       	add	r18, r20
 588:	35 1f       	adc	r19, r21
 58a:	82 0f       	add	r24, r18
 58c:	93 1f       	adc	r25, r19
 58e:	90 93 ef 01 	sts	0x01EF, r25	; 0x8001ef <product_price+0x1>
 592:	80 93 ee 01 	sts	0x01EE, r24	; 0x8001ee <product_price>
						sprintf(buf1,"%d",product_price);
 596:	9f 93       	push	r25
 598:	8f 93       	push	r24
 59a:	9f 92       	push	r9
 59c:	8f 92       	push	r8
 59e:	ff 92       	push	r15
 5a0:	ef 92       	push	r14
 5a2:	bd d1       	rcall	.+890    	; 0x91e <sprintf>
						lcd_putsf(0,1,(unsigned char *)buf1);
 5a4:	a7 01       	movw	r20, r14
 5a6:	61 e0       	ldi	r22, 0x01	; 1
 5a8:	80 e0       	ldi	r24, 0x00	; 0
 5aa:	c5 dd       	rcall	.-1142   	; 0x136 <_Z9lcd_putsfhhPh>
 5ac:	0f 90       	pop	r0
						break;
 5ae:	0f 90       	pop	r0
 5b0:	0f 90       	pop	r0
 5b2:	0f 90       	pop	r0
 5b4:	0f 90       	pop	r0
 5b6:	0f 90       	pop	r0
 5b8:	04 c0       	rjmp	.+8      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5ba:	01 96       	adiw	r24, 0x01	; 1
		}
		else if (mode == CALC_MODE)
		{		
			if (change == 0)
			{
				for (int i = 0; i < 10; i++)
 5bc:	8a 30       	cpi	r24, 0x0A	; 10
 5be:	91 05       	cpc	r25, r1
 5c0:	49 f6       	brne	.-110    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 5c2:	0e 37       	cpi	r16, 0x7E	; 126
						sprintf(buf1,"%d",product_price);
						lcd_putsf(0,1,(unsigned char *)buf1);
						break;
					}
				}
				if ((input_key == KEY_PLUS) && (flag == 0))
 5c4:	11 05       	cpc	r17, r1
 5c6:	09 f0       	breq	.+2      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c8:	5b c0       	rjmp	.+182    	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 5ca:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <flag>
 5ce:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <flag+0x1>
 5d2:	89 2b       	or	r24, r25
 5d4:	09 f0       	breq	.+2      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d6:	1d cf       	rjmp	.-454    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 5d8:	d0 92 e7 01 	sts	0x01E7, r13	; 0x8001e7 <flag+0x1>
				{
					flag = 1;
 5dc:	c0 92 e6 01 	sts	0x01E6, r12	; 0x8001e6 <flag>
 5e0:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <product_price>
					
					if (product_price > 20000)
 5e4:	90 91 ef 01 	lds	r25, 0x01EF	; 0x8001ef <product_price+0x1>
 5e8:	81 32       	cpi	r24, 0x21	; 33
 5ea:	9e 44       	sbci	r25, 0x4E	; 78
 5ec:	88 f1       	brcs	.+98     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
					{
						sprintf(buf1,"     ERROR!      ");
 5ee:	82 e1       	ldi	r24, 0x12	; 18
 5f0:	ee e9       	ldi	r30, 0x9E	; 158
 5f2:	f1 e0       	ldi	r31, 0x01	; 1
 5f4:	d7 01       	movw	r26, r14
 5f6:	01 90       	ld	r0, Z+
 5f8:	0d 92       	st	X+, r0
 5fa:	8a 95       	dec	r24
 5fc:	e1 f7       	brne	.-8      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5fe:	03 e0       	ldi	r16, 0x03	; 3
 600:	10 e0       	ldi	r17, 0x00	; 0
						for (int j = 0; j < 3; j++)
						{
							lcd_putsf(0,1,(unsigned char *)buf1);
 602:	a7 01       	movw	r20, r14
 604:	61 e0       	ldi	r22, 0x01	; 1
 606:	80 e0       	ldi	r24, 0x00	; 0
 608:	96 dd       	rcall	.-1236   	; 0x136 <_Z9lcd_putsfhhPh>
 60a:	8f ef       	ldi	r24, 0xFF	; 255
 60c:	91 ee       	ldi	r25, 0xE1	; 225
 60e:	24 e0       	ldi	r18, 0x04	; 4
 610:	81 50       	subi	r24, 0x01	; 1
 612:	90 40       	sbci	r25, 0x00	; 0
 614:	20 40       	sbci	r18, 0x00	; 0
 616:	e1 f7       	brne	.-8      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 618:	00 c0       	rjmp	.+0      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 61a:	00 00       	nop
							_delay_ms(100);
							lcd_putsf(0,1,(unsigned char *)"                ");
 61c:	40 eb       	ldi	r20, 0xB0	; 176
 61e:	51 e0       	ldi	r21, 0x01	; 1
 620:	61 e0       	ldi	r22, 0x01	; 1
 622:	80 e0       	ldi	r24, 0x00	; 0
 624:	88 dd       	rcall	.-1264   	; 0x136 <_Z9lcd_putsfhhPh>
 626:	8f ef       	ldi	r24, 0xFF	; 255
 628:	91 ee       	ldi	r25, 0xE1	; 225
 62a:	24 e0       	ldi	r18, 0x04	; 4
 62c:	81 50       	subi	r24, 0x01	; 1
 62e:	90 40       	sbci	r25, 0x00	; 0
 630:	20 40       	sbci	r18, 0x00	; 0
 632:	e1 f7       	brne	.-8      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 634:	00 c0       	rjmp	.+0      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 636:	00 00       	nop
 638:	01 50       	subi	r16, 0x01	; 1
 63a:	11 09       	sbc	r17, r1
					flag = 1;
					
					if (product_price > 20000)
					{
						sprintf(buf1,"     ERROR!      ");
						for (int j = 0; j < 3; j++)
 63c:	11 f7       	brne	.-60     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
							lcd_putsf(0,1,(unsigned char *)buf1);
							_delay_ms(100);
							lcd_putsf(0,1,(unsigned char *)"                ");
							_delay_ms(100);
						}
						mode = NORMAL_MODE;
 63e:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <mode+0x1>
 642:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <mode>
						total_money = 0;
 646:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <total_money+0x1>
 64a:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <total_money>
 64e:	13 c0       	rjmp	.+38     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
					}
					else
					{
						lcd_putsf(0,1,(unsigned char *)"                ");
 650:	40 eb       	ldi	r20, 0xB0	; 176
 652:	51 e0       	ldi	r21, 0x01	; 1
 654:	61 e0       	ldi	r22, 0x01	; 1
 656:	80 e0       	ldi	r24, 0x00	; 0
 658:	6e dd       	rcall	.-1316   	; 0x136 <_Z9lcd_putsfhhPh>
 65a:	20 91 ec 01 	lds	r18, 0x01EC	; 0x8001ec <total_money>
						total_money += product_price;
 65e:	30 91 ed 01 	lds	r19, 0x01ED	; 0x8001ed <total_money+0x1>
 662:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <product_price>
 666:	90 91 ef 01 	lds	r25, 0x01EF	; 0x8001ef <product_price+0x1>
 66a:	82 0f       	add	r24, r18
 66c:	93 1f       	adc	r25, r19
 66e:	90 93 ed 01 	sts	0x01ED, r25	; 0x8001ed <total_money+0x1>
 672:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <total_money>
 676:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <product_price+0x1>

					}
					product_price = 0;
 67a:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <product_price>
 67e:	c9 ce       	rjmp	.-622    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 680:	0d 37       	cpi	r16, 0x7D	; 125
				}
				if ((input_key == KEY_Enter) && (flag == 0))
 682:	11 05       	cpc	r17, r1
 684:	09 f0       	breq	.+2      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 686:	68 c0       	rjmp	.+208    	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 688:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <flag>
 68c:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <flag+0x1>
 690:	89 2b       	or	r24, r25
 692:	09 f0       	breq	.+2      	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 694:	be ce       	rjmp	.-644    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 696:	d0 92 e7 01 	sts	0x01E7, r13	; 0x8001e7 <flag+0x1>
				{
					flag = 1;
 69a:	c0 92 e6 01 	sts	0x01E6, r12	; 0x8001e6 <flag>
 69e:	20 91 ee 01 	lds	r18, 0x01EE	; 0x8001ee <product_price>
					if (product_price > 20000)
 6a2:	30 91 ef 01 	lds	r19, 0x01EF	; 0x8001ef <product_price+0x1>
 6a6:	21 32       	cpi	r18, 0x21	; 33
 6a8:	8e e4       	ldi	r24, 0x4E	; 78
 6aa:	38 07       	cpc	r19, r24
 6ac:	88 f1       	brcs	.+98     	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
					{
						sprintf(buf1,"     ERROR!     ");
 6ae:	81 e1       	ldi	r24, 0x11	; 17
 6b0:	e1 ec       	ldi	r30, 0xC1	; 193
 6b2:	f1 e0       	ldi	r31, 0x01	; 1
 6b4:	d7 01       	movw	r26, r14
 6b6:	01 90       	ld	r0, Z+
 6b8:	0d 92       	st	X+, r0
 6ba:	8a 95       	dec	r24
 6bc:	e1 f7       	brne	.-8      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6be:	03 e0       	ldi	r16, 0x03	; 3
						for (int j = 0; j < 3; j++)
						{
							lcd_putsf(0,1,(unsigned char *)buf1);
 6c0:	10 e0       	ldi	r17, 0x00	; 0
 6c2:	a7 01       	movw	r20, r14
 6c4:	61 e0       	ldi	r22, 0x01	; 1
 6c6:	80 e0       	ldi	r24, 0x00	; 0
 6c8:	36 dd       	rcall	.-1428   	; 0x136 <_Z9lcd_putsfhhPh>
 6ca:	9f ef       	ldi	r25, 0xFF	; 255
 6cc:	21 ee       	ldi	r18, 0xE1	; 225
 6ce:	84 e0       	ldi	r24, 0x04	; 4
 6d0:	91 50       	subi	r25, 0x01	; 1
 6d2:	20 40       	sbci	r18, 0x00	; 0
 6d4:	80 40       	sbci	r24, 0x00	; 0
 6d6:	e1 f7       	brne	.-8      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6d8:	00 c0       	rjmp	.+0      	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 6da:	00 00       	nop
							_delay_ms(100);
							lcd_putsf(0,1,(unsigned char *)"                ");
 6dc:	40 eb       	ldi	r20, 0xB0	; 176
 6de:	51 e0       	ldi	r21, 0x01	; 1
 6e0:	61 e0       	ldi	r22, 0x01	; 1
 6e2:	80 e0       	ldi	r24, 0x00	; 0
 6e4:	28 dd       	rcall	.-1456   	; 0x136 <_Z9lcd_putsfhhPh>
 6e6:	9f ef       	ldi	r25, 0xFF	; 255
 6e8:	21 ee       	ldi	r18, 0xE1	; 225
 6ea:	84 e0       	ldi	r24, 0x04	; 4
 6ec:	91 50       	subi	r25, 0x01	; 1
 6ee:	20 40       	sbci	r18, 0x00	; 0
 6f0:	80 40       	sbci	r24, 0x00	; 0
 6f2:	e1 f7       	brne	.-8      	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
 6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6f6:	00 00       	nop
 6f8:	01 50       	subi	r16, 0x01	; 1
 6fa:	11 09       	sbc	r17, r1
 6fc:	11 f7       	brne	.-60     	; 0x6c2 <__LOCK_REGION_LENGTH__+0x2c2>
				{
					flag = 1;
					if (product_price > 20000)
					{
						sprintf(buf1,"     ERROR!     ");
						for (int j = 0; j < 3; j++)
 6fe:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <mode+0x1>
							lcd_putsf(0,1,(unsigned char *)buf1);
							_delay_ms(100);
							lcd_putsf(0,1,(unsigned char *)"                ");
							_delay_ms(100);
						}
						mode = NORMAL_MODE;
 702:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <mode>
 706:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <total_money+0x1>
						total_money = 0;
 70a:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <total_money>
 70e:	1f c0       	rjmp	.+62     	; 0x74e <__LOCK_REGION_LENGTH__+0x34e>
					}
					else
					{
						total_money += product_price;
 710:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <total_money>
 714:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <total_money+0x1>
 718:	82 0f       	add	r24, r18
 71a:	93 1f       	adc	r25, r19
 71c:	90 93 ed 01 	sts	0x01ED, r25	; 0x8001ed <total_money+0x1>
 720:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <total_money>
						sprintf(buf1,"=%11d won",total_money);
 724:	9f 93       	push	r25
 726:	8f 93       	push	r24
 728:	bf 92       	push	r11
 72a:	af 92       	push	r10
 72c:	ff 92       	push	r15
 72e:	ef 92       	push	r14
 730:	f6 d0       	rcall	.+492    	; 0x91e <sprintf>
 732:	a7 01       	movw	r20, r14
						lcd_putsf(0,1,(unsigned char *)buf1);
 734:	61 e0       	ldi	r22, 0x01	; 1
 736:	80 e0       	ldi	r24, 0x00	; 0
 738:	fe dc       	rcall	.-1540   	; 0x136 <_Z9lcd_putsfhhPh>
 73a:	d0 92 e5 01 	sts	0x01E5, r13	; 0x8001e5 <__data_end+0x1>
						change = 1;
 73e:	c0 92 e4 01 	sts	0x01E4, r12	; 0x8001e4 <__data_end>
 742:	0f 90       	pop	r0
 744:	0f 90       	pop	r0
 746:	0f 90       	pop	r0
 748:	0f 90       	pop	r0
 74a:	0f 90       	pop	r0
 74c:	0f 90       	pop	r0
					}
					product_price = 0;
 74e:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <product_price+0x1>
 752:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <product_price>
 756:	5d ce       	rjmp	.-838    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
				}
			}
			if ((input_key == KEY_MONEY) && (change == 1))
 758:	07 3b       	cpi	r16, 0xB7	; 183
 75a:	11 05       	cpc	r17, r1
 75c:	09 f0       	breq	.+2      	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 75e:	59 ce       	rjmp	.-846    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 760:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
 764:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <__data_end+0x1>
 768:	01 97       	sbiw	r24, 0x01	; 1
 76a:	09 f0       	breq	.+2      	; 0x76e <__LOCK_REGION_LENGTH__+0x36e>
 76c:	52 ce       	rjmp	.-860    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
			{
				lcd_clear();
 76e:	27 dd       	rcall	.-1458   	; 0x1be <_Z9lcd_clearv>
 770:	42 ed       	ldi	r20, 0xD2	; 210
				lcd_putsf(0,0,(unsigned char *)"Changes Mode    ");
 772:	51 e0       	ldi	r21, 0x01	; 1
 774:	60 e0       	ldi	r22, 0x00	; 0
 776:	80 e0       	ldi	r24, 0x00	; 0
 778:	de dc       	rcall	.-1604   	; 0x136 <_Z9lcd_putsfhhPh>
 77a:	9f eb       	ldi	r25, 0xBF	; 191
 77c:	9b bb       	out	0x1b, r25	; 27
				PORTA = 0b10111111;
 77e:	83 e0       	ldi	r24, 0x03	; 3
 780:	90 e0       	ldi	r25, 0x00	; 0
				mode = CHANGES_MODE;
 782:	90 93 f1 01 	sts	0x01F1, r25	; 0x8001f1 <mode+0x1>
 786:	80 93 f0 01 	sts	0x01F0, r24	; 0x8001f0 <mode>
 78a:	43 ce       	rjmp	.-890    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 78c:	83 30       	cpi	r24, 0x03	; 3
 78e:	91 05       	cpc	r25, r1
			}
		}
		else if (mode == CHANGES_MODE)
 790:	09 f0       	breq	.+2      	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 792:	9e c0       	rjmp	.+316    	; 0x8d0 <__LOCK_REGION_LENGTH__+0x4d0>
 794:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <__data_end+0x1>
		{
			change = 0;
 798:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <__data_end>
 79c:	40 91 e6 01 	lds	r20, 0x01E6	; 0x8001e6 <flag>
			for (int i = 0; i < 10; i++)
			{
				if ((input_key == number[i]) && (flag == 0))
 7a0:	50 91 e7 01 	lds	r21, 0x01E7	; 0x8001e7 <flag+0x1>
 7a4:	e0 e0       	ldi	r30, 0x00	; 0
 7a6:	f1 e0       	ldi	r31, 0x01	; 1
 7a8:	80 e0       	ldi	r24, 0x00	; 0
 7aa:	90 e0       	ldi	r25, 0x00	; 0
			}
		}
		else if (mode == CHANGES_MODE)
		{
			change = 0;
			for (int i = 0; i < 10; i++)
 7ac:	21 91       	ld	r18, Z+
 7ae:	31 91       	ld	r19, Z+
			{
				if ((input_key == number[i]) && (flag == 0))
 7b0:	02 17       	cp	r16, r18
 7b2:	13 07       	cpc	r17, r19
 7b4:	71 f5       	brne	.+92     	; 0x812 <__LOCK_REGION_LENGTH__+0x412>
 7b6:	41 15       	cp	r20, r1
 7b8:	51 05       	cpc	r21, r1
 7ba:	59 f5       	brne	.+86     	; 0x812 <__LOCK_REGION_LENGTH__+0x412>
 7bc:	d0 92 e7 01 	sts	0x01E7, r13	; 0x8001e7 <flag+0x1>
				{
					flag = 1;
 7c0:	c0 92 e6 01 	sts	0x01E6, r12	; 0x8001e6 <flag>
 7c4:	20 91 ea 01 	lds	r18, 0x01EA	; 0x8001ea <input_money>
					input_money = input_money * 10 + i;
 7c8:	30 91 eb 01 	lds	r19, 0x01EB	; 0x8001eb <input_money+0x1>
 7cc:	a9 01       	movw	r20, r18
 7ce:	44 0f       	add	r20, r20
 7d0:	55 1f       	adc	r21, r21
 7d2:	22 0f       	add	r18, r18
 7d4:	33 1f       	adc	r19, r19
 7d6:	22 0f       	add	r18, r18
 7d8:	33 1f       	adc	r19, r19
 7da:	22 0f       	add	r18, r18
 7dc:	33 1f       	adc	r19, r19
 7de:	24 0f       	add	r18, r20
 7e0:	35 1f       	adc	r19, r21
 7e2:	82 0f       	add	r24, r18
 7e4:	93 1f       	adc	r25, r19
 7e6:	90 93 eb 01 	sts	0x01EB, r25	; 0x8001eb <input_money+0x1>
 7ea:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <input_money>
					sprintf(buf1,"%d",input_money);
 7ee:	9f 93       	push	r25
 7f0:	8f 93       	push	r24
 7f2:	9f 92       	push	r9
 7f4:	8f 92       	push	r8
 7f6:	ff 92       	push	r15
 7f8:	ef 92       	push	r14
 7fa:	91 d0       	rcall	.+290    	; 0x91e <sprintf>
 7fc:	a7 01       	movw	r20, r14
					lcd_putsf(0,1,(unsigned char *)buf1);
 7fe:	61 e0       	ldi	r22, 0x01	; 1
 800:	80 e0       	ldi	r24, 0x00	; 0
 802:	99 dc       	rcall	.-1742   	; 0x136 <_Z9lcd_putsfhhPh>
 804:	0f 90       	pop	r0
 806:	0f 90       	pop	r0
					break;
 808:	0f 90       	pop	r0
 80a:	0f 90       	pop	r0
 80c:	0f 90       	pop	r0
 80e:	0f 90       	pop	r0
 810:	04 c0       	rjmp	.+8      	; 0x81a <__LOCK_REGION_LENGTH__+0x41a>
 812:	01 96       	adiw	r24, 0x01	; 1
 814:	8a 30       	cpi	r24, 0x0A	; 10
			}
		}
		else if (mode == CHANGES_MODE)
		{
			change = 0;
			for (int i = 0; i < 10; i++)
 816:	91 05       	cpc	r25, r1
 818:	49 f6       	brne	.-110    	; 0x7ac <__LOCK_REGION_LENGTH__+0x3ac>
 81a:	0d 37       	cpi	r16, 0x7D	; 125
 81c:	11 05       	cpc	r17, r1
					sprintf(buf1,"%d",input_money);
					lcd_putsf(0,1,(unsigned char *)buf1);
					break;
				}
			}
			if ((input_key == KEY_Enter) && (flag == 0))
 81e:	09 f0       	breq	.+2      	; 0x822 <__LOCK_REGION_LENGTH__+0x422>
 820:	f8 cd       	rjmp	.-1040   	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 822:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <flag>
 826:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <flag+0x1>
 82a:	89 2b       	or	r24, r25
 82c:	09 f0       	breq	.+2      	; 0x830 <__LOCK_REGION_LENGTH__+0x430>
 82e:	f1 cd       	rjmp	.-1054   	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 830:	d0 92 e7 01 	sts	0x01E7, r13	; 0x8001e7 <flag+0x1>
			{
				flag = 1;
 834:	c0 92 e6 01 	sts	0x01E6, r12	; 0x8001e6 <flag>
 838:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <input_money>
				if (input_money >= total_money)
 83c:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <input_money+0x1>
 840:	20 91 ec 01 	lds	r18, 0x01EC	; 0x8001ec <total_money>
 844:	30 91 ed 01 	lds	r19, 0x01ED	; 0x8001ed <total_money+0x1>
 848:	82 17       	cp	r24, r18
 84a:	93 07       	cpc	r25, r19
 84c:	b8 f1       	brcs	.+110    	; 0x8bc <__LOCK_REGION_LENGTH__+0x4bc>
 84e:	00 91 f2 01 	lds	r16, 0x01F2	; 0x8001f2 <timer>
				{
					int future = timer + 5000;
 852:	10 91 f3 01 	lds	r17, 0x01F3	; 0x8001f3 <timer+0x1>
 856:	08 57       	subi	r16, 0x78	; 120
 858:	1c 4e       	sbci	r17, 0xEC	; 236
					total_sales += total_money;					
 85a:	40 91 e8 01 	lds	r20, 0x01E8	; 0x8001e8 <total_sales>
 85e:	50 91 e9 01 	lds	r21, 0x01E9	; 0x8001e9 <total_sales+0x1>
 862:	42 0f       	add	r20, r18
 864:	53 1f       	adc	r21, r19
 866:	50 93 e9 01 	sts	0x01E9, r21	; 0x8001e9 <total_sales+0x1>
 86a:	40 93 e8 01 	sts	0x01E8, r20	; 0x8001e8 <total_sales>
					sprintf(buf1,"=%11d won",input_money - total_money);
 86e:	82 1b       	sub	r24, r18
 870:	93 0b       	sbc	r25, r19
 872:	9f 93       	push	r25
 874:	8f 93       	push	r24
 876:	bf 92       	push	r11
 878:	af 92       	push	r10
 87a:	ff 92       	push	r15
 87c:	ef 92       	push	r14
 87e:	4f d0       	rcall	.+158    	; 0x91e <sprintf>
					lcd_putsf(0,1,(unsigned char *)buf1);
 880:	a7 01       	movw	r20, r14
 882:	61 e0       	ldi	r22, 0x01	; 1
 884:	80 e0       	ldi	r24, 0x00	; 0
 886:	57 dc       	rcall	.-1874   	; 0x136 <_Z9lcd_putsfhhPh>
 888:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <total_money+0x1>
					total_money = 0;
 88c:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <total_money>
 890:	0f 90       	pop	r0
 892:	0f 90       	pop	r0
 894:	0f 90       	pop	r0
 896:	0f 90       	pop	r0
 898:	0f 90       	pop	r0
 89a:	0f 90       	pop	r0
					while(1)
					{
						int break_key = getkey();
 89c:	05 dd       	rcall	.-1526   	; 0x2a8 <_Z6getkeyv>
 89e:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <timer>
						if ((timer > future) || (break_key == KEY_LOBY)) 
 8a2:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <timer+0x1>
 8a6:	02 17       	cp	r16, r18
 8a8:	13 07       	cpc	r17, r19
 8aa:	18 f0       	brcs	.+6      	; 0x8b2 <__LOCK_REGION_LENGTH__+0x4b2>
 8ac:	87 37       	cpi	r24, 0x77	; 119
 8ae:	91 05       	cpc	r25, r1
 8b0:	a9 f7       	brne	.-22     	; 0x89c <__LOCK_REGION_LENGTH__+0x49c>
						{
							mode = NORMAL_MODE;
 8b2:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <mode+0x1>
 8b6:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <mode>
 8ba:	05 c0       	rjmp	.+10     	; 0x8c6 <__LOCK_REGION_LENGTH__+0x4c6>
							break;
						}
					}					
				}
				else lcd_putsf(0,1,(unsigned char *)"                ");
 8bc:	40 eb       	ldi	r20, 0xB0	; 176
 8be:	51 e0       	ldi	r21, 0x01	; 1
 8c0:	61 e0       	ldi	r22, 0x01	; 1
 8c2:	80 e0       	ldi	r24, 0x00	; 0
 8c4:	38 dc       	rcall	.-1936   	; 0x136 <_Z9lcd_putsfhhPh>
 8c6:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <input_money+0x1>
				input_money = 0;
 8ca:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <input_money>
 8ce:	a1 cd       	rjmp	.-1214   	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 8d0:	04 97       	sbiw	r24, 0x04	; 4
			}
		}
		else if (mode == TOTAL_MODE)
 8d2:	09 f0       	breq	.+2      	; 0x8d6 <__LOCK_REGION_LENGTH__+0x4d6>
 8d4:	9e cd       	rjmp	.-1220   	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 8d6:	00 91 f2 01 	lds	r16, 0x01F2	; 0x8001f2 <timer>
		{
			while(1)
			{
				int future = timer + 5000;
 8da:	10 91 f3 01 	lds	r17, 0x01F3	; 0x8001f3 <timer+0x1>
 8de:	08 57       	subi	r16, 0x78	; 120
 8e0:	1c 4e       	sbci	r17, 0xEC	; 236
				int break_key = getkey();
 8e2:	e2 dc       	rcall	.-1596   	; 0x2a8 <_Z6getkeyv>
 8e4:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <timer>
				if ((timer > future) || (break_key == KEY_LOBY))
 8e8:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <timer+0x1>
 8ec:	02 17       	cp	r16, r18
 8ee:	13 07       	cpc	r17, r19
 8f0:	18 f0       	brcs	.+6      	; 0x8f8 <__LOCK_REGION_LENGTH__+0x4f8>
 8f2:	87 37       	cpi	r24, 0x77	; 119
 8f4:	91 05       	cpc	r25, r1
 8f6:	79 f7       	brne	.-34     	; 0x8d6 <__LOCK_REGION_LENGTH__+0x4d6>
 8f8:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <mode+0x1>
				{
					mode = NORMAL_MODE;
 8fc:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <mode>
 900:	88 cd       	rjmp	.-1264   	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 902:	40 91 f8 01 	lds	r20, 0x01F8	; 0x8001f8 <sec>
			PORTA = 0xff;
			mode = NORMAL_MODE;
		}
		if (mode == NORMAL_MODE)
		{
			Display_Clock(hour, min, sec);
 906:	50 91 f9 01 	lds	r21, 0x01F9	; 0x8001f9 <sec+0x1>
 90a:	60 91 f6 01 	lds	r22, 0x01F6	; 0x8001f6 <min>
 90e:	70 91 f7 01 	lds	r23, 0x01F7	; 0x8001f7 <min+0x1>
 912:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <hour>
 916:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <hour+0x1>
 91a:	96 dc       	rcall	.-1748   	; 0x248 <_Z13Display_Clockjjj>
 91c:	7a cd       	rjmp	.-1292   	; 0x412 <__LOCK_REGION_LENGTH__+0x12>

0000091e <sprintf>:
 91e:	0f 93       	push	r16
 920:	1f 93       	push	r17
 922:	cf 93       	push	r28
 924:	df 93       	push	r29
 926:	cd b7       	in	r28, 0x3d	; 61
 928:	de b7       	in	r29, 0x3e	; 62
 92a:	2e 97       	sbiw	r28, 0x0e	; 14
 92c:	0f b6       	in	r0, 0x3f	; 63
 92e:	f8 94       	cli
 930:	de bf       	out	0x3e, r29	; 62
 932:	0f be       	out	0x3f, r0	; 63
 934:	cd bf       	out	0x3d, r28	; 61
 936:	0d 89       	ldd	r16, Y+21	; 0x15
 938:	1e 89       	ldd	r17, Y+22	; 0x16
 93a:	86 e0       	ldi	r24, 0x06	; 6
 93c:	8c 83       	std	Y+4, r24	; 0x04
 93e:	1a 83       	std	Y+2, r17	; 0x02
 940:	09 83       	std	Y+1, r16	; 0x01
 942:	8f ef       	ldi	r24, 0xFF	; 255
 944:	9f e7       	ldi	r25, 0x7F	; 127
 946:	9e 83       	std	Y+6, r25	; 0x06
 948:	8d 83       	std	Y+5, r24	; 0x05
 94a:	ae 01       	movw	r20, r28
 94c:	47 5e       	subi	r20, 0xE7	; 231
 94e:	5f 4f       	sbci	r21, 0xFF	; 255
 950:	6f 89       	ldd	r22, Y+23	; 0x17
 952:	78 8d       	ldd	r23, Y+24	; 0x18
 954:	ce 01       	movw	r24, r28
 956:	01 96       	adiw	r24, 0x01	; 1
 958:	10 d0       	rcall	.+32     	; 0x97a <vfprintf>
 95a:	ef 81       	ldd	r30, Y+7	; 0x07
 95c:	f8 85       	ldd	r31, Y+8	; 0x08
 95e:	e0 0f       	add	r30, r16
 960:	f1 1f       	adc	r31, r17
 962:	10 82       	st	Z, r1
 964:	2e 96       	adiw	r28, 0x0e	; 14
 966:	0f b6       	in	r0, 0x3f	; 63
 968:	f8 94       	cli
 96a:	de bf       	out	0x3e, r29	; 62
 96c:	0f be       	out	0x3f, r0	; 63
 96e:	cd bf       	out	0x3d, r28	; 61
 970:	df 91       	pop	r29
 972:	cf 91       	pop	r28
 974:	1f 91       	pop	r17
 976:	0f 91       	pop	r16
 978:	08 95       	ret

0000097a <vfprintf>:
 97a:	2f 92       	push	r2
 97c:	3f 92       	push	r3
 97e:	4f 92       	push	r4
 980:	5f 92       	push	r5
 982:	6f 92       	push	r6
 984:	7f 92       	push	r7
 986:	8f 92       	push	r8
 988:	9f 92       	push	r9
 98a:	af 92       	push	r10
 98c:	bf 92       	push	r11
 98e:	cf 92       	push	r12
 990:	df 92       	push	r13
 992:	ef 92       	push	r14
 994:	ff 92       	push	r15
 996:	0f 93       	push	r16
 998:	1f 93       	push	r17
 99a:	cf 93       	push	r28
 99c:	df 93       	push	r29
 99e:	cd b7       	in	r28, 0x3d	; 61
 9a0:	de b7       	in	r29, 0x3e	; 62
 9a2:	2b 97       	sbiw	r28, 0x0b	; 11
 9a4:	0f b6       	in	r0, 0x3f	; 63
 9a6:	f8 94       	cli
 9a8:	de bf       	out	0x3e, r29	; 62
 9aa:	0f be       	out	0x3f, r0	; 63
 9ac:	cd bf       	out	0x3d, r28	; 61
 9ae:	6c 01       	movw	r12, r24
 9b0:	7b 01       	movw	r14, r22
 9b2:	8a 01       	movw	r16, r20
 9b4:	fc 01       	movw	r30, r24
 9b6:	17 82       	std	Z+7, r1	; 0x07
 9b8:	16 82       	std	Z+6, r1	; 0x06
 9ba:	83 81       	ldd	r24, Z+3	; 0x03
 9bc:	81 ff       	sbrs	r24, 1
 9be:	bf c1       	rjmp	.+894    	; 0xd3e <vfprintf+0x3c4>
 9c0:	ce 01       	movw	r24, r28
 9c2:	01 96       	adiw	r24, 0x01	; 1
 9c4:	3c 01       	movw	r6, r24
 9c6:	f6 01       	movw	r30, r12
 9c8:	93 81       	ldd	r25, Z+3	; 0x03
 9ca:	f7 01       	movw	r30, r14
 9cc:	93 fd       	sbrc	r25, 3
 9ce:	85 91       	lpm	r24, Z+
 9d0:	93 ff       	sbrs	r25, 3
 9d2:	81 91       	ld	r24, Z+
 9d4:	7f 01       	movw	r14, r30
 9d6:	88 23       	and	r24, r24
 9d8:	09 f4       	brne	.+2      	; 0x9dc <vfprintf+0x62>
 9da:	ad c1       	rjmp	.+858    	; 0xd36 <vfprintf+0x3bc>
 9dc:	85 32       	cpi	r24, 0x25	; 37
 9de:	39 f4       	brne	.+14     	; 0x9ee <vfprintf+0x74>
 9e0:	93 fd       	sbrc	r25, 3
 9e2:	85 91       	lpm	r24, Z+
 9e4:	93 ff       	sbrs	r25, 3
 9e6:	81 91       	ld	r24, Z+
 9e8:	7f 01       	movw	r14, r30
 9ea:	85 32       	cpi	r24, 0x25	; 37
 9ec:	21 f4       	brne	.+8      	; 0x9f6 <vfprintf+0x7c>
 9ee:	b6 01       	movw	r22, r12
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	d6 d1       	rcall	.+940    	; 0xda0 <fputc>
 9f4:	e8 cf       	rjmp	.-48     	; 0x9c6 <vfprintf+0x4c>
 9f6:	91 2c       	mov	r9, r1
 9f8:	21 2c       	mov	r2, r1
 9fa:	31 2c       	mov	r3, r1
 9fc:	ff e1       	ldi	r31, 0x1F	; 31
 9fe:	f3 15       	cp	r31, r3
 a00:	d8 f0       	brcs	.+54     	; 0xa38 <vfprintf+0xbe>
 a02:	8b 32       	cpi	r24, 0x2B	; 43
 a04:	79 f0       	breq	.+30     	; 0xa24 <vfprintf+0xaa>
 a06:	38 f4       	brcc	.+14     	; 0xa16 <vfprintf+0x9c>
 a08:	80 32       	cpi	r24, 0x20	; 32
 a0a:	79 f0       	breq	.+30     	; 0xa2a <vfprintf+0xb0>
 a0c:	83 32       	cpi	r24, 0x23	; 35
 a0e:	a1 f4       	brne	.+40     	; 0xa38 <vfprintf+0xbe>
 a10:	23 2d       	mov	r18, r3
 a12:	20 61       	ori	r18, 0x10	; 16
 a14:	1d c0       	rjmp	.+58     	; 0xa50 <vfprintf+0xd6>
 a16:	8d 32       	cpi	r24, 0x2D	; 45
 a18:	61 f0       	breq	.+24     	; 0xa32 <vfprintf+0xb8>
 a1a:	80 33       	cpi	r24, 0x30	; 48
 a1c:	69 f4       	brne	.+26     	; 0xa38 <vfprintf+0xbe>
 a1e:	23 2d       	mov	r18, r3
 a20:	21 60       	ori	r18, 0x01	; 1
 a22:	16 c0       	rjmp	.+44     	; 0xa50 <vfprintf+0xd6>
 a24:	83 2d       	mov	r24, r3
 a26:	82 60       	ori	r24, 0x02	; 2
 a28:	38 2e       	mov	r3, r24
 a2a:	e3 2d       	mov	r30, r3
 a2c:	e4 60       	ori	r30, 0x04	; 4
 a2e:	3e 2e       	mov	r3, r30
 a30:	2a c0       	rjmp	.+84     	; 0xa86 <vfprintf+0x10c>
 a32:	f3 2d       	mov	r31, r3
 a34:	f8 60       	ori	r31, 0x08	; 8
 a36:	1d c0       	rjmp	.+58     	; 0xa72 <vfprintf+0xf8>
 a38:	37 fc       	sbrc	r3, 7
 a3a:	2d c0       	rjmp	.+90     	; 0xa96 <vfprintf+0x11c>
 a3c:	20 ed       	ldi	r18, 0xD0	; 208
 a3e:	28 0f       	add	r18, r24
 a40:	2a 30       	cpi	r18, 0x0A	; 10
 a42:	40 f0       	brcs	.+16     	; 0xa54 <vfprintf+0xda>
 a44:	8e 32       	cpi	r24, 0x2E	; 46
 a46:	b9 f4       	brne	.+46     	; 0xa76 <vfprintf+0xfc>
 a48:	36 fc       	sbrc	r3, 6
 a4a:	75 c1       	rjmp	.+746    	; 0xd36 <vfprintf+0x3bc>
 a4c:	23 2d       	mov	r18, r3
 a4e:	20 64       	ori	r18, 0x40	; 64
 a50:	32 2e       	mov	r3, r18
 a52:	19 c0       	rjmp	.+50     	; 0xa86 <vfprintf+0x10c>
 a54:	36 fe       	sbrs	r3, 6
 a56:	06 c0       	rjmp	.+12     	; 0xa64 <vfprintf+0xea>
 a58:	8a e0       	ldi	r24, 0x0A	; 10
 a5a:	98 9e       	mul	r9, r24
 a5c:	20 0d       	add	r18, r0
 a5e:	11 24       	eor	r1, r1
 a60:	92 2e       	mov	r9, r18
 a62:	11 c0       	rjmp	.+34     	; 0xa86 <vfprintf+0x10c>
 a64:	ea e0       	ldi	r30, 0x0A	; 10
 a66:	2e 9e       	mul	r2, r30
 a68:	20 0d       	add	r18, r0
 a6a:	11 24       	eor	r1, r1
 a6c:	22 2e       	mov	r2, r18
 a6e:	f3 2d       	mov	r31, r3
 a70:	f0 62       	ori	r31, 0x20	; 32
 a72:	3f 2e       	mov	r3, r31
 a74:	08 c0       	rjmp	.+16     	; 0xa86 <vfprintf+0x10c>
 a76:	8c 36       	cpi	r24, 0x6C	; 108
 a78:	21 f4       	brne	.+8      	; 0xa82 <vfprintf+0x108>
 a7a:	83 2d       	mov	r24, r3
 a7c:	80 68       	ori	r24, 0x80	; 128
 a7e:	38 2e       	mov	r3, r24
 a80:	02 c0       	rjmp	.+4      	; 0xa86 <vfprintf+0x10c>
 a82:	88 36       	cpi	r24, 0x68	; 104
 a84:	41 f4       	brne	.+16     	; 0xa96 <vfprintf+0x11c>
 a86:	f7 01       	movw	r30, r14
 a88:	93 fd       	sbrc	r25, 3
 a8a:	85 91       	lpm	r24, Z+
 a8c:	93 ff       	sbrs	r25, 3
 a8e:	81 91       	ld	r24, Z+
 a90:	7f 01       	movw	r14, r30
 a92:	81 11       	cpse	r24, r1
 a94:	b3 cf       	rjmp	.-154    	; 0x9fc <vfprintf+0x82>
 a96:	98 2f       	mov	r25, r24
 a98:	9f 7d       	andi	r25, 0xDF	; 223
 a9a:	95 54       	subi	r25, 0x45	; 69
 a9c:	93 30       	cpi	r25, 0x03	; 3
 a9e:	28 f4       	brcc	.+10     	; 0xaaa <vfprintf+0x130>
 aa0:	0c 5f       	subi	r16, 0xFC	; 252
 aa2:	1f 4f       	sbci	r17, 0xFF	; 255
 aa4:	9f e3       	ldi	r25, 0x3F	; 63
 aa6:	99 83       	std	Y+1, r25	; 0x01
 aa8:	0d c0       	rjmp	.+26     	; 0xac4 <vfprintf+0x14a>
 aaa:	83 36       	cpi	r24, 0x63	; 99
 aac:	31 f0       	breq	.+12     	; 0xaba <vfprintf+0x140>
 aae:	83 37       	cpi	r24, 0x73	; 115
 ab0:	71 f0       	breq	.+28     	; 0xace <vfprintf+0x154>
 ab2:	83 35       	cpi	r24, 0x53	; 83
 ab4:	09 f0       	breq	.+2      	; 0xab8 <vfprintf+0x13e>
 ab6:	55 c0       	rjmp	.+170    	; 0xb62 <vfprintf+0x1e8>
 ab8:	20 c0       	rjmp	.+64     	; 0xafa <vfprintf+0x180>
 aba:	f8 01       	movw	r30, r16
 abc:	80 81       	ld	r24, Z
 abe:	89 83       	std	Y+1, r24	; 0x01
 ac0:	0e 5f       	subi	r16, 0xFE	; 254
 ac2:	1f 4f       	sbci	r17, 0xFF	; 255
 ac4:	88 24       	eor	r8, r8
 ac6:	83 94       	inc	r8
 ac8:	91 2c       	mov	r9, r1
 aca:	53 01       	movw	r10, r6
 acc:	12 c0       	rjmp	.+36     	; 0xaf2 <vfprintf+0x178>
 ace:	28 01       	movw	r4, r16
 ad0:	f2 e0       	ldi	r31, 0x02	; 2
 ad2:	4f 0e       	add	r4, r31
 ad4:	51 1c       	adc	r5, r1
 ad6:	f8 01       	movw	r30, r16
 ad8:	a0 80       	ld	r10, Z
 ada:	b1 80       	ldd	r11, Z+1	; 0x01
 adc:	36 fe       	sbrs	r3, 6
 ade:	03 c0       	rjmp	.+6      	; 0xae6 <vfprintf+0x16c>
 ae0:	69 2d       	mov	r22, r9
 ae2:	70 e0       	ldi	r23, 0x00	; 0
 ae4:	02 c0       	rjmp	.+4      	; 0xaea <vfprintf+0x170>
 ae6:	6f ef       	ldi	r22, 0xFF	; 255
 ae8:	7f ef       	ldi	r23, 0xFF	; 255
 aea:	c5 01       	movw	r24, r10
 aec:	4e d1       	rcall	.+668    	; 0xd8a <strnlen>
 aee:	4c 01       	movw	r8, r24
 af0:	82 01       	movw	r16, r4
 af2:	f3 2d       	mov	r31, r3
 af4:	ff 77       	andi	r31, 0x7F	; 127
 af6:	3f 2e       	mov	r3, r31
 af8:	15 c0       	rjmp	.+42     	; 0xb24 <vfprintf+0x1aa>
 afa:	28 01       	movw	r4, r16
 afc:	22 e0       	ldi	r18, 0x02	; 2
 afe:	42 0e       	add	r4, r18
 b00:	51 1c       	adc	r5, r1
 b02:	f8 01       	movw	r30, r16
 b04:	a0 80       	ld	r10, Z
 b06:	b1 80       	ldd	r11, Z+1	; 0x01
 b08:	36 fe       	sbrs	r3, 6
 b0a:	03 c0       	rjmp	.+6      	; 0xb12 <vfprintf+0x198>
 b0c:	69 2d       	mov	r22, r9
 b0e:	70 e0       	ldi	r23, 0x00	; 0
 b10:	02 c0       	rjmp	.+4      	; 0xb16 <vfprintf+0x19c>
 b12:	6f ef       	ldi	r22, 0xFF	; 255
 b14:	7f ef       	ldi	r23, 0xFF	; 255
 b16:	c5 01       	movw	r24, r10
 b18:	2d d1       	rcall	.+602    	; 0xd74 <strnlen_P>
 b1a:	4c 01       	movw	r8, r24
 b1c:	f3 2d       	mov	r31, r3
 b1e:	f0 68       	ori	r31, 0x80	; 128
 b20:	3f 2e       	mov	r3, r31
 b22:	82 01       	movw	r16, r4
 b24:	33 fc       	sbrc	r3, 3
 b26:	19 c0       	rjmp	.+50     	; 0xb5a <vfprintf+0x1e0>
 b28:	82 2d       	mov	r24, r2
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	88 16       	cp	r8, r24
 b2e:	99 06       	cpc	r9, r25
 b30:	a0 f4       	brcc	.+40     	; 0xb5a <vfprintf+0x1e0>
 b32:	b6 01       	movw	r22, r12
 b34:	80 e2       	ldi	r24, 0x20	; 32
 b36:	90 e0       	ldi	r25, 0x00	; 0
 b38:	33 d1       	rcall	.+614    	; 0xda0 <fputc>
 b3a:	2a 94       	dec	r2
 b3c:	f5 cf       	rjmp	.-22     	; 0xb28 <vfprintf+0x1ae>
 b3e:	f5 01       	movw	r30, r10
 b40:	37 fc       	sbrc	r3, 7
 b42:	85 91       	lpm	r24, Z+
 b44:	37 fe       	sbrs	r3, 7
 b46:	81 91       	ld	r24, Z+
 b48:	5f 01       	movw	r10, r30
 b4a:	b6 01       	movw	r22, r12
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	28 d1       	rcall	.+592    	; 0xda0 <fputc>
 b50:	21 10       	cpse	r2, r1
 b52:	2a 94       	dec	r2
 b54:	21 e0       	ldi	r18, 0x01	; 1
 b56:	82 1a       	sub	r8, r18
 b58:	91 08       	sbc	r9, r1
 b5a:	81 14       	cp	r8, r1
 b5c:	91 04       	cpc	r9, r1
 b5e:	79 f7       	brne	.-34     	; 0xb3e <vfprintf+0x1c4>
 b60:	e1 c0       	rjmp	.+450    	; 0xd24 <vfprintf+0x3aa>
 b62:	84 36       	cpi	r24, 0x64	; 100
 b64:	11 f0       	breq	.+4      	; 0xb6a <vfprintf+0x1f0>
 b66:	89 36       	cpi	r24, 0x69	; 105
 b68:	39 f5       	brne	.+78     	; 0xbb8 <vfprintf+0x23e>
 b6a:	f8 01       	movw	r30, r16
 b6c:	37 fe       	sbrs	r3, 7
 b6e:	07 c0       	rjmp	.+14     	; 0xb7e <vfprintf+0x204>
 b70:	60 81       	ld	r22, Z
 b72:	71 81       	ldd	r23, Z+1	; 0x01
 b74:	82 81       	ldd	r24, Z+2	; 0x02
 b76:	93 81       	ldd	r25, Z+3	; 0x03
 b78:	0c 5f       	subi	r16, 0xFC	; 252
 b7a:	1f 4f       	sbci	r17, 0xFF	; 255
 b7c:	08 c0       	rjmp	.+16     	; 0xb8e <vfprintf+0x214>
 b7e:	60 81       	ld	r22, Z
 b80:	71 81       	ldd	r23, Z+1	; 0x01
 b82:	07 2e       	mov	r0, r23
 b84:	00 0c       	add	r0, r0
 b86:	88 0b       	sbc	r24, r24
 b88:	99 0b       	sbc	r25, r25
 b8a:	0e 5f       	subi	r16, 0xFE	; 254
 b8c:	1f 4f       	sbci	r17, 0xFF	; 255
 b8e:	f3 2d       	mov	r31, r3
 b90:	ff 76       	andi	r31, 0x6F	; 111
 b92:	3f 2e       	mov	r3, r31
 b94:	97 ff       	sbrs	r25, 7
 b96:	09 c0       	rjmp	.+18     	; 0xbaa <vfprintf+0x230>
 b98:	90 95       	com	r25
 b9a:	80 95       	com	r24
 b9c:	70 95       	com	r23
 b9e:	61 95       	neg	r22
 ba0:	7f 4f       	sbci	r23, 0xFF	; 255
 ba2:	8f 4f       	sbci	r24, 0xFF	; 255
 ba4:	9f 4f       	sbci	r25, 0xFF	; 255
 ba6:	f0 68       	ori	r31, 0x80	; 128
 ba8:	3f 2e       	mov	r3, r31
 baa:	2a e0       	ldi	r18, 0x0A	; 10
 bac:	30 e0       	ldi	r19, 0x00	; 0
 bae:	a3 01       	movw	r20, r6
 bb0:	33 d1       	rcall	.+614    	; 0xe18 <__ultoa_invert>
 bb2:	88 2e       	mov	r8, r24
 bb4:	86 18       	sub	r8, r6
 bb6:	44 c0       	rjmp	.+136    	; 0xc40 <vfprintf+0x2c6>
 bb8:	85 37       	cpi	r24, 0x75	; 117
 bba:	31 f4       	brne	.+12     	; 0xbc8 <vfprintf+0x24e>
 bbc:	23 2d       	mov	r18, r3
 bbe:	2f 7e       	andi	r18, 0xEF	; 239
 bc0:	b2 2e       	mov	r11, r18
 bc2:	2a e0       	ldi	r18, 0x0A	; 10
 bc4:	30 e0       	ldi	r19, 0x00	; 0
 bc6:	25 c0       	rjmp	.+74     	; 0xc12 <vfprintf+0x298>
 bc8:	93 2d       	mov	r25, r3
 bca:	99 7f       	andi	r25, 0xF9	; 249
 bcc:	b9 2e       	mov	r11, r25
 bce:	8f 36       	cpi	r24, 0x6F	; 111
 bd0:	c1 f0       	breq	.+48     	; 0xc02 <vfprintf+0x288>
 bd2:	18 f4       	brcc	.+6      	; 0xbda <vfprintf+0x260>
 bd4:	88 35       	cpi	r24, 0x58	; 88
 bd6:	79 f0       	breq	.+30     	; 0xbf6 <vfprintf+0x27c>
 bd8:	ae c0       	rjmp	.+348    	; 0xd36 <vfprintf+0x3bc>
 bda:	80 37       	cpi	r24, 0x70	; 112
 bdc:	19 f0       	breq	.+6      	; 0xbe4 <vfprintf+0x26a>
 bde:	88 37       	cpi	r24, 0x78	; 120
 be0:	21 f0       	breq	.+8      	; 0xbea <vfprintf+0x270>
 be2:	a9 c0       	rjmp	.+338    	; 0xd36 <vfprintf+0x3bc>
 be4:	e9 2f       	mov	r30, r25
 be6:	e0 61       	ori	r30, 0x10	; 16
 be8:	be 2e       	mov	r11, r30
 bea:	b4 fe       	sbrs	r11, 4
 bec:	0d c0       	rjmp	.+26     	; 0xc08 <vfprintf+0x28e>
 bee:	fb 2d       	mov	r31, r11
 bf0:	f4 60       	ori	r31, 0x04	; 4
 bf2:	bf 2e       	mov	r11, r31
 bf4:	09 c0       	rjmp	.+18     	; 0xc08 <vfprintf+0x28e>
 bf6:	34 fe       	sbrs	r3, 4
 bf8:	0a c0       	rjmp	.+20     	; 0xc0e <vfprintf+0x294>
 bfa:	29 2f       	mov	r18, r25
 bfc:	26 60       	ori	r18, 0x06	; 6
 bfe:	b2 2e       	mov	r11, r18
 c00:	06 c0       	rjmp	.+12     	; 0xc0e <vfprintf+0x294>
 c02:	28 e0       	ldi	r18, 0x08	; 8
 c04:	30 e0       	ldi	r19, 0x00	; 0
 c06:	05 c0       	rjmp	.+10     	; 0xc12 <vfprintf+0x298>
 c08:	20 e1       	ldi	r18, 0x10	; 16
 c0a:	30 e0       	ldi	r19, 0x00	; 0
 c0c:	02 c0       	rjmp	.+4      	; 0xc12 <vfprintf+0x298>
 c0e:	20 e1       	ldi	r18, 0x10	; 16
 c10:	32 e0       	ldi	r19, 0x02	; 2
 c12:	f8 01       	movw	r30, r16
 c14:	b7 fe       	sbrs	r11, 7
 c16:	07 c0       	rjmp	.+14     	; 0xc26 <vfprintf+0x2ac>
 c18:	60 81       	ld	r22, Z
 c1a:	71 81       	ldd	r23, Z+1	; 0x01
 c1c:	82 81       	ldd	r24, Z+2	; 0x02
 c1e:	93 81       	ldd	r25, Z+3	; 0x03
 c20:	0c 5f       	subi	r16, 0xFC	; 252
 c22:	1f 4f       	sbci	r17, 0xFF	; 255
 c24:	06 c0       	rjmp	.+12     	; 0xc32 <vfprintf+0x2b8>
 c26:	60 81       	ld	r22, Z
 c28:	71 81       	ldd	r23, Z+1	; 0x01
 c2a:	80 e0       	ldi	r24, 0x00	; 0
 c2c:	90 e0       	ldi	r25, 0x00	; 0
 c2e:	0e 5f       	subi	r16, 0xFE	; 254
 c30:	1f 4f       	sbci	r17, 0xFF	; 255
 c32:	a3 01       	movw	r20, r6
 c34:	f1 d0       	rcall	.+482    	; 0xe18 <__ultoa_invert>
 c36:	88 2e       	mov	r8, r24
 c38:	86 18       	sub	r8, r6
 c3a:	fb 2d       	mov	r31, r11
 c3c:	ff 77       	andi	r31, 0x7F	; 127
 c3e:	3f 2e       	mov	r3, r31
 c40:	36 fe       	sbrs	r3, 6
 c42:	0d c0       	rjmp	.+26     	; 0xc5e <vfprintf+0x2e4>
 c44:	23 2d       	mov	r18, r3
 c46:	2e 7f       	andi	r18, 0xFE	; 254
 c48:	a2 2e       	mov	r10, r18
 c4a:	89 14       	cp	r8, r9
 c4c:	58 f4       	brcc	.+22     	; 0xc64 <vfprintf+0x2ea>
 c4e:	34 fe       	sbrs	r3, 4
 c50:	0b c0       	rjmp	.+22     	; 0xc68 <vfprintf+0x2ee>
 c52:	32 fc       	sbrc	r3, 2
 c54:	09 c0       	rjmp	.+18     	; 0xc68 <vfprintf+0x2ee>
 c56:	83 2d       	mov	r24, r3
 c58:	8e 7e       	andi	r24, 0xEE	; 238
 c5a:	a8 2e       	mov	r10, r24
 c5c:	05 c0       	rjmp	.+10     	; 0xc68 <vfprintf+0x2ee>
 c5e:	b8 2c       	mov	r11, r8
 c60:	a3 2c       	mov	r10, r3
 c62:	03 c0       	rjmp	.+6      	; 0xc6a <vfprintf+0x2f0>
 c64:	b8 2c       	mov	r11, r8
 c66:	01 c0       	rjmp	.+2      	; 0xc6a <vfprintf+0x2f0>
 c68:	b9 2c       	mov	r11, r9
 c6a:	a4 fe       	sbrs	r10, 4
 c6c:	0f c0       	rjmp	.+30     	; 0xc8c <vfprintf+0x312>
 c6e:	fe 01       	movw	r30, r28
 c70:	e8 0d       	add	r30, r8
 c72:	f1 1d       	adc	r31, r1
 c74:	80 81       	ld	r24, Z
 c76:	80 33       	cpi	r24, 0x30	; 48
 c78:	21 f4       	brne	.+8      	; 0xc82 <vfprintf+0x308>
 c7a:	9a 2d       	mov	r25, r10
 c7c:	99 7e       	andi	r25, 0xE9	; 233
 c7e:	a9 2e       	mov	r10, r25
 c80:	09 c0       	rjmp	.+18     	; 0xc94 <vfprintf+0x31a>
 c82:	a2 fe       	sbrs	r10, 2
 c84:	06 c0       	rjmp	.+12     	; 0xc92 <vfprintf+0x318>
 c86:	b3 94       	inc	r11
 c88:	b3 94       	inc	r11
 c8a:	04 c0       	rjmp	.+8      	; 0xc94 <vfprintf+0x31a>
 c8c:	8a 2d       	mov	r24, r10
 c8e:	86 78       	andi	r24, 0x86	; 134
 c90:	09 f0       	breq	.+2      	; 0xc94 <vfprintf+0x31a>
 c92:	b3 94       	inc	r11
 c94:	a3 fc       	sbrc	r10, 3
 c96:	10 c0       	rjmp	.+32     	; 0xcb8 <vfprintf+0x33e>
 c98:	a0 fe       	sbrs	r10, 0
 c9a:	06 c0       	rjmp	.+12     	; 0xca8 <vfprintf+0x32e>
 c9c:	b2 14       	cp	r11, r2
 c9e:	80 f4       	brcc	.+32     	; 0xcc0 <vfprintf+0x346>
 ca0:	28 0c       	add	r2, r8
 ca2:	92 2c       	mov	r9, r2
 ca4:	9b 18       	sub	r9, r11
 ca6:	0d c0       	rjmp	.+26     	; 0xcc2 <vfprintf+0x348>
 ca8:	b2 14       	cp	r11, r2
 caa:	58 f4       	brcc	.+22     	; 0xcc2 <vfprintf+0x348>
 cac:	b6 01       	movw	r22, r12
 cae:	80 e2       	ldi	r24, 0x20	; 32
 cb0:	90 e0       	ldi	r25, 0x00	; 0
 cb2:	76 d0       	rcall	.+236    	; 0xda0 <fputc>
 cb4:	b3 94       	inc	r11
 cb6:	f8 cf       	rjmp	.-16     	; 0xca8 <vfprintf+0x32e>
 cb8:	b2 14       	cp	r11, r2
 cba:	18 f4       	brcc	.+6      	; 0xcc2 <vfprintf+0x348>
 cbc:	2b 18       	sub	r2, r11
 cbe:	02 c0       	rjmp	.+4      	; 0xcc4 <vfprintf+0x34a>
 cc0:	98 2c       	mov	r9, r8
 cc2:	21 2c       	mov	r2, r1
 cc4:	a4 fe       	sbrs	r10, 4
 cc6:	0f c0       	rjmp	.+30     	; 0xce6 <vfprintf+0x36c>
 cc8:	b6 01       	movw	r22, r12
 cca:	80 e3       	ldi	r24, 0x30	; 48
 ccc:	90 e0       	ldi	r25, 0x00	; 0
 cce:	68 d0       	rcall	.+208    	; 0xda0 <fputc>
 cd0:	a2 fe       	sbrs	r10, 2
 cd2:	16 c0       	rjmp	.+44     	; 0xd00 <vfprintf+0x386>
 cd4:	a1 fc       	sbrc	r10, 1
 cd6:	03 c0       	rjmp	.+6      	; 0xcde <vfprintf+0x364>
 cd8:	88 e7       	ldi	r24, 0x78	; 120
 cda:	90 e0       	ldi	r25, 0x00	; 0
 cdc:	02 c0       	rjmp	.+4      	; 0xce2 <vfprintf+0x368>
 cde:	88 e5       	ldi	r24, 0x58	; 88
 ce0:	90 e0       	ldi	r25, 0x00	; 0
 ce2:	b6 01       	movw	r22, r12
 ce4:	0c c0       	rjmp	.+24     	; 0xcfe <vfprintf+0x384>
 ce6:	8a 2d       	mov	r24, r10
 ce8:	86 78       	andi	r24, 0x86	; 134
 cea:	51 f0       	breq	.+20     	; 0xd00 <vfprintf+0x386>
 cec:	a1 fe       	sbrs	r10, 1
 cee:	02 c0       	rjmp	.+4      	; 0xcf4 <vfprintf+0x37a>
 cf0:	8b e2       	ldi	r24, 0x2B	; 43
 cf2:	01 c0       	rjmp	.+2      	; 0xcf6 <vfprintf+0x37c>
 cf4:	80 e2       	ldi	r24, 0x20	; 32
 cf6:	a7 fc       	sbrc	r10, 7
 cf8:	8d e2       	ldi	r24, 0x2D	; 45
 cfa:	b6 01       	movw	r22, r12
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	50 d0       	rcall	.+160    	; 0xda0 <fputc>
 d00:	89 14       	cp	r8, r9
 d02:	30 f4       	brcc	.+12     	; 0xd10 <vfprintf+0x396>
 d04:	b6 01       	movw	r22, r12
 d06:	80 e3       	ldi	r24, 0x30	; 48
 d08:	90 e0       	ldi	r25, 0x00	; 0
 d0a:	4a d0       	rcall	.+148    	; 0xda0 <fputc>
 d0c:	9a 94       	dec	r9
 d0e:	f8 cf       	rjmp	.-16     	; 0xd00 <vfprintf+0x386>
 d10:	8a 94       	dec	r8
 d12:	f3 01       	movw	r30, r6
 d14:	e8 0d       	add	r30, r8
 d16:	f1 1d       	adc	r31, r1
 d18:	80 81       	ld	r24, Z
 d1a:	b6 01       	movw	r22, r12
 d1c:	90 e0       	ldi	r25, 0x00	; 0
 d1e:	40 d0       	rcall	.+128    	; 0xda0 <fputc>
 d20:	81 10       	cpse	r8, r1
 d22:	f6 cf       	rjmp	.-20     	; 0xd10 <vfprintf+0x396>
 d24:	22 20       	and	r2, r2
 d26:	09 f4       	brne	.+2      	; 0xd2a <vfprintf+0x3b0>
 d28:	4e ce       	rjmp	.-868    	; 0x9c6 <vfprintf+0x4c>
 d2a:	b6 01       	movw	r22, r12
 d2c:	80 e2       	ldi	r24, 0x20	; 32
 d2e:	90 e0       	ldi	r25, 0x00	; 0
 d30:	37 d0       	rcall	.+110    	; 0xda0 <fputc>
 d32:	2a 94       	dec	r2
 d34:	f7 cf       	rjmp	.-18     	; 0xd24 <vfprintf+0x3aa>
 d36:	f6 01       	movw	r30, r12
 d38:	86 81       	ldd	r24, Z+6	; 0x06
 d3a:	97 81       	ldd	r25, Z+7	; 0x07
 d3c:	02 c0       	rjmp	.+4      	; 0xd42 <vfprintf+0x3c8>
 d3e:	8f ef       	ldi	r24, 0xFF	; 255
 d40:	9f ef       	ldi	r25, 0xFF	; 255
 d42:	2b 96       	adiw	r28, 0x0b	; 11
 d44:	0f b6       	in	r0, 0x3f	; 63
 d46:	f8 94       	cli
 d48:	de bf       	out	0x3e, r29	; 62
 d4a:	0f be       	out	0x3f, r0	; 63
 d4c:	cd bf       	out	0x3d, r28	; 61
 d4e:	df 91       	pop	r29
 d50:	cf 91       	pop	r28
 d52:	1f 91       	pop	r17
 d54:	0f 91       	pop	r16
 d56:	ff 90       	pop	r15
 d58:	ef 90       	pop	r14
 d5a:	df 90       	pop	r13
 d5c:	cf 90       	pop	r12
 d5e:	bf 90       	pop	r11
 d60:	af 90       	pop	r10
 d62:	9f 90       	pop	r9
 d64:	8f 90       	pop	r8
 d66:	7f 90       	pop	r7
 d68:	6f 90       	pop	r6
 d6a:	5f 90       	pop	r5
 d6c:	4f 90       	pop	r4
 d6e:	3f 90       	pop	r3
 d70:	2f 90       	pop	r2
 d72:	08 95       	ret

00000d74 <strnlen_P>:
 d74:	fc 01       	movw	r30, r24
 d76:	05 90       	lpm	r0, Z+
 d78:	61 50       	subi	r22, 0x01	; 1
 d7a:	70 40       	sbci	r23, 0x00	; 0
 d7c:	01 10       	cpse	r0, r1
 d7e:	d8 f7       	brcc	.-10     	; 0xd76 <strnlen_P+0x2>
 d80:	80 95       	com	r24
 d82:	90 95       	com	r25
 d84:	8e 0f       	add	r24, r30
 d86:	9f 1f       	adc	r25, r31
 d88:	08 95       	ret

00000d8a <strnlen>:
 d8a:	fc 01       	movw	r30, r24
 d8c:	61 50       	subi	r22, 0x01	; 1
 d8e:	70 40       	sbci	r23, 0x00	; 0
 d90:	01 90       	ld	r0, Z+
 d92:	01 10       	cpse	r0, r1
 d94:	d8 f7       	brcc	.-10     	; 0xd8c <strnlen+0x2>
 d96:	80 95       	com	r24
 d98:	90 95       	com	r25
 d9a:	8e 0f       	add	r24, r30
 d9c:	9f 1f       	adc	r25, r31
 d9e:	08 95       	ret

00000da0 <fputc>:
 da0:	0f 93       	push	r16
 da2:	1f 93       	push	r17
 da4:	cf 93       	push	r28
 da6:	df 93       	push	r29
 da8:	fb 01       	movw	r30, r22
 daa:	23 81       	ldd	r18, Z+3	; 0x03
 dac:	21 fd       	sbrc	r18, 1
 dae:	03 c0       	rjmp	.+6      	; 0xdb6 <fputc+0x16>
 db0:	8f ef       	ldi	r24, 0xFF	; 255
 db2:	9f ef       	ldi	r25, 0xFF	; 255
 db4:	2c c0       	rjmp	.+88     	; 0xe0e <fputc+0x6e>
 db6:	22 ff       	sbrs	r18, 2
 db8:	16 c0       	rjmp	.+44     	; 0xde6 <fputc+0x46>
 dba:	46 81       	ldd	r20, Z+6	; 0x06
 dbc:	57 81       	ldd	r21, Z+7	; 0x07
 dbe:	24 81       	ldd	r18, Z+4	; 0x04
 dc0:	35 81       	ldd	r19, Z+5	; 0x05
 dc2:	42 17       	cp	r20, r18
 dc4:	53 07       	cpc	r21, r19
 dc6:	44 f4       	brge	.+16     	; 0xdd8 <fputc+0x38>
 dc8:	a0 81       	ld	r26, Z
 dca:	b1 81       	ldd	r27, Z+1	; 0x01
 dcc:	9d 01       	movw	r18, r26
 dce:	2f 5f       	subi	r18, 0xFF	; 255
 dd0:	3f 4f       	sbci	r19, 0xFF	; 255
 dd2:	31 83       	std	Z+1, r19	; 0x01
 dd4:	20 83       	st	Z, r18
 dd6:	8c 93       	st	X, r24
 dd8:	26 81       	ldd	r18, Z+6	; 0x06
 dda:	37 81       	ldd	r19, Z+7	; 0x07
 ddc:	2f 5f       	subi	r18, 0xFF	; 255
 dde:	3f 4f       	sbci	r19, 0xFF	; 255
 de0:	37 83       	std	Z+7, r19	; 0x07
 de2:	26 83       	std	Z+6, r18	; 0x06
 de4:	14 c0       	rjmp	.+40     	; 0xe0e <fputc+0x6e>
 de6:	8b 01       	movw	r16, r22
 de8:	ec 01       	movw	r28, r24
 dea:	fb 01       	movw	r30, r22
 dec:	00 84       	ldd	r0, Z+8	; 0x08
 dee:	f1 85       	ldd	r31, Z+9	; 0x09
 df0:	e0 2d       	mov	r30, r0
 df2:	09 95       	icall
 df4:	89 2b       	or	r24, r25
 df6:	e1 f6       	brne	.-72     	; 0xdb0 <fputc+0x10>
 df8:	d8 01       	movw	r26, r16
 dfa:	16 96       	adiw	r26, 0x06	; 6
 dfc:	8d 91       	ld	r24, X+
 dfe:	9c 91       	ld	r25, X
 e00:	17 97       	sbiw	r26, 0x07	; 7
 e02:	01 96       	adiw	r24, 0x01	; 1
 e04:	17 96       	adiw	r26, 0x07	; 7
 e06:	9c 93       	st	X, r25
 e08:	8e 93       	st	-X, r24
 e0a:	16 97       	sbiw	r26, 0x06	; 6
 e0c:	ce 01       	movw	r24, r28
 e0e:	df 91       	pop	r29
 e10:	cf 91       	pop	r28
 e12:	1f 91       	pop	r17
 e14:	0f 91       	pop	r16
 e16:	08 95       	ret

00000e18 <__ultoa_invert>:
 e18:	fa 01       	movw	r30, r20
 e1a:	aa 27       	eor	r26, r26
 e1c:	28 30       	cpi	r18, 0x08	; 8
 e1e:	51 f1       	breq	.+84     	; 0xe74 <__ultoa_invert+0x5c>
 e20:	20 31       	cpi	r18, 0x10	; 16
 e22:	81 f1       	breq	.+96     	; 0xe84 <__ultoa_invert+0x6c>
 e24:	e8 94       	clt
 e26:	6f 93       	push	r22
 e28:	6e 7f       	andi	r22, 0xFE	; 254
 e2a:	6e 5f       	subi	r22, 0xFE	; 254
 e2c:	7f 4f       	sbci	r23, 0xFF	; 255
 e2e:	8f 4f       	sbci	r24, 0xFF	; 255
 e30:	9f 4f       	sbci	r25, 0xFF	; 255
 e32:	af 4f       	sbci	r26, 0xFF	; 255
 e34:	b1 e0       	ldi	r27, 0x01	; 1
 e36:	3e d0       	rcall	.+124    	; 0xeb4 <__ultoa_invert+0x9c>
 e38:	b4 e0       	ldi	r27, 0x04	; 4
 e3a:	3c d0       	rcall	.+120    	; 0xeb4 <__ultoa_invert+0x9c>
 e3c:	67 0f       	add	r22, r23
 e3e:	78 1f       	adc	r23, r24
 e40:	89 1f       	adc	r24, r25
 e42:	9a 1f       	adc	r25, r26
 e44:	a1 1d       	adc	r26, r1
 e46:	68 0f       	add	r22, r24
 e48:	79 1f       	adc	r23, r25
 e4a:	8a 1f       	adc	r24, r26
 e4c:	91 1d       	adc	r25, r1
 e4e:	a1 1d       	adc	r26, r1
 e50:	6a 0f       	add	r22, r26
 e52:	71 1d       	adc	r23, r1
 e54:	81 1d       	adc	r24, r1
 e56:	91 1d       	adc	r25, r1
 e58:	a1 1d       	adc	r26, r1
 e5a:	20 d0       	rcall	.+64     	; 0xe9c <__ultoa_invert+0x84>
 e5c:	09 f4       	brne	.+2      	; 0xe60 <__ultoa_invert+0x48>
 e5e:	68 94       	set
 e60:	3f 91       	pop	r19
 e62:	2a e0       	ldi	r18, 0x0A	; 10
 e64:	26 9f       	mul	r18, r22
 e66:	11 24       	eor	r1, r1
 e68:	30 19       	sub	r19, r0
 e6a:	30 5d       	subi	r19, 0xD0	; 208
 e6c:	31 93       	st	Z+, r19
 e6e:	de f6       	brtc	.-74     	; 0xe26 <__ultoa_invert+0xe>
 e70:	cf 01       	movw	r24, r30
 e72:	08 95       	ret
 e74:	46 2f       	mov	r20, r22
 e76:	47 70       	andi	r20, 0x07	; 7
 e78:	40 5d       	subi	r20, 0xD0	; 208
 e7a:	41 93       	st	Z+, r20
 e7c:	b3 e0       	ldi	r27, 0x03	; 3
 e7e:	0f d0       	rcall	.+30     	; 0xe9e <__ultoa_invert+0x86>
 e80:	c9 f7       	brne	.-14     	; 0xe74 <__ultoa_invert+0x5c>
 e82:	f6 cf       	rjmp	.-20     	; 0xe70 <__ultoa_invert+0x58>
 e84:	46 2f       	mov	r20, r22
 e86:	4f 70       	andi	r20, 0x0F	; 15
 e88:	40 5d       	subi	r20, 0xD0	; 208
 e8a:	4a 33       	cpi	r20, 0x3A	; 58
 e8c:	18 f0       	brcs	.+6      	; 0xe94 <__ultoa_invert+0x7c>
 e8e:	49 5d       	subi	r20, 0xD9	; 217
 e90:	31 fd       	sbrc	r19, 1
 e92:	40 52       	subi	r20, 0x20	; 32
 e94:	41 93       	st	Z+, r20
 e96:	02 d0       	rcall	.+4      	; 0xe9c <__ultoa_invert+0x84>
 e98:	a9 f7       	brne	.-22     	; 0xe84 <__ultoa_invert+0x6c>
 e9a:	ea cf       	rjmp	.-44     	; 0xe70 <__ultoa_invert+0x58>
 e9c:	b4 e0       	ldi	r27, 0x04	; 4
 e9e:	a6 95       	lsr	r26
 ea0:	97 95       	ror	r25
 ea2:	87 95       	ror	r24
 ea4:	77 95       	ror	r23
 ea6:	67 95       	ror	r22
 ea8:	ba 95       	dec	r27
 eaa:	c9 f7       	brne	.-14     	; 0xe9e <__ultoa_invert+0x86>
 eac:	00 97       	sbiw	r24, 0x00	; 0
 eae:	61 05       	cpc	r22, r1
 eb0:	71 05       	cpc	r23, r1
 eb2:	08 95       	ret
 eb4:	9b 01       	movw	r18, r22
 eb6:	ac 01       	movw	r20, r24
 eb8:	0a 2e       	mov	r0, r26
 eba:	06 94       	lsr	r0
 ebc:	57 95       	ror	r21
 ebe:	47 95       	ror	r20
 ec0:	37 95       	ror	r19
 ec2:	27 95       	ror	r18
 ec4:	ba 95       	dec	r27
 ec6:	c9 f7       	brne	.-14     	; 0xeba <__ultoa_invert+0xa2>
 ec8:	62 0f       	add	r22, r18
 eca:	73 1f       	adc	r23, r19
 ecc:	84 1f       	adc	r24, r20
 ece:	95 1f       	adc	r25, r21
 ed0:	a0 1d       	adc	r26, r0
 ed2:	08 95       	ret

00000ed4 <_exit>:
 ed4:	f8 94       	cli

00000ed6 <__stop_program>:
 ed6:	ff cf       	rjmp	.-2      	; 0xed6 <__stop_program>
