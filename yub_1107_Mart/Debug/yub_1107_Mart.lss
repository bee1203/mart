
yub_1107_Mart.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e4  00800100  00000e5e  00000ef2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  008001e4  008001e4  00000fd6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001034  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001070  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001451  00000000  00000000  000010e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096e  00000000  00000000  00002539  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000890  00000000  00000000  00002ea7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  00003738  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ba  00000000  00000000  000038b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b63  00000000  00000000  00003e72  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000049d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	59 c1       	rjmp	.+690    	; 0x2f4 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e5       	ldi	r30, 0x5E	; 94
  a0:	fe e0       	ldi	r31, 0x0E	; 14
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 3e       	cpi	r26, 0xE4	; 228
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	a4 ee       	ldi	r26, 0xE4	; 228
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 30       	cpi	r26, 0x0C	; 12
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	7c d1       	rcall	.+760    	; 0x3bc <main>
  c4:	ca c6       	rjmp	.+3476   	; 0xe5a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <_Z10init_PORTCv>:
#define ENABLE  (PORTC |= 0x04)
#define DISABLE (PORTC &= 0xFB)

void init_PORTC(void)
{
  DDRC = 0xFF;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	84 bb       	out	0x14, r24	; 20
  PORTC = 0xFF;
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	08 95       	ret

000000d0 <_Z14instrction_outh>:
}
 
void instrction_out(unsigned char b)
{
	PORTC = b&0xF0;
  d0:	98 2f       	mov	r25, r24
  d2:	90 7f       	andi	r25, 0xF0	; 240
  d4:	95 bb       	out	0x15, r25	; 21
	ENABLE;
  d6:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
  d8:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0);
  da:	20 e1       	ldi	r18, 0x10	; 16
  dc:	82 9f       	mul	r24, r18
  de:	c0 01       	movw	r24, r0
  e0:	11 24       	eor	r1, r1
  e2:	85 bb       	out	0x15, r24	; 21
	ENABLE;
  e4:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
  e6:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e8:	8f e3       	ldi	r24, 0x3F	; 63
  ea:	9f e1       	ldi	r25, 0x1F	; 31
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <_Z14instrction_outh+0x1c>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <_Z14instrction_outh+0x22>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <_Z8char_outh>:
	_delay_ms(2);
}
void char_out(unsigned char b)
{
	PORTC=(b&0xF0)|0x01;
  f6:	98 2f       	mov	r25, r24
  f8:	90 7f       	andi	r25, 0xF0	; 240
  fa:	91 60       	ori	r25, 0x01	; 1
  fc:	95 bb       	out	0x15, r25	; 21
	ENABLE;
  fe:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
 100:	aa 98       	cbi	0x15, 2	; 21
	PORTC=((b<<4)&0xF0)|0x01;
 102:	20 e1       	ldi	r18, 0x10	; 16
 104:	82 9f       	mul	r24, r18
 106:	c0 01       	movw	r24, r0
 108:	11 24       	eor	r1, r1
 10a:	81 60       	ori	r24, 0x01	; 1
 10c:	85 bb       	out	0x15, r24	; 21
	ENABLE;
 10e:	aa 9a       	sbi	0x15, 2	; 21
	DISABLE;
 110:	aa 98       	cbi	0x15, 2	; 21
 112:	8f e3       	ldi	r24, 0x3F	; 63
 114:	9f e1       	ldi	r25, 0x1F	; 31
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <_Z8char_outh+0x20>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <_Z8char_outh+0x26>
 11c:	00 00       	nop
 11e:	08 95       	ret

00000120 <_Z10lcd_gotoxyhh>:
}
void lcd_gotoxy(unsigned char x, unsigned char y)
{
	// 16 * 2 Character LCD  
	//  Busy();
	switch(y)
 120:	66 23       	and	r22, r22
 122:	19 f0       	breq	.+6      	; 0x12a <_Z10lcd_gotoxyhh+0xa>
 124:	61 30       	cpi	r22, 0x01	; 1
 126:	21 f0       	breq	.+8      	; 0x130 <_Z10lcd_gotoxyhh+0x10>
 128:	08 95       	ret
	{
	    case 0 : instrction_out(0x80+x); break;
 12a:	80 58       	subi	r24, 0x80	; 128
 12c:	d1 cf       	rjmp	.-94     	; 0xd0 <_Z14instrction_outh>
 12e:	08 95       	ret
	    case 1 : instrction_out(0xC0+x); break;
 130:	80 54       	subi	r24, 0x40	; 64
 132:	ce cf       	rjmp	.-100    	; 0xd0 <_Z14instrction_outh>
 134:	08 95       	ret

00000136 <_Z9lcd_putsfhhPh>:
	}
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	04 2f       	mov	r16, r20
 140:	15 2f       	mov	r17, r21
	unsigned int i=0;
	lcd_gotoxy(x,y);
 142:	ee df       	rcall	.-36     	; 0x120 <_Z10lcd_gotoxyhh>
 144:	c0 2f       	mov	r28, r16
 146:	d1 2f       	mov	r29, r17
	do
	{
		char_out(str[i]);
 148:	89 91       	ld	r24, Y+
 14a:	d5 df       	rcall	.-86     	; 0xf6 <_Z8char_outh>
}
void lcd_putsf(unsigned char x, unsigned char y, unsigned char *str)
{
	unsigned int i=0;
	lcd_gotoxy(x,y);
	do
 14c:	88 81       	ld	r24, Y
 14e:	81 11       	cpse	r24, r1
 150:	fb cf       	rjmp	.-10     	; 0x148 <_Z9lcd_putsfhhPh+0x12>
	{
		char_out(str[i]);
	}
	while(str[++i]!='\0');
}
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	1f 91       	pop	r17
 158:	0f 91       	pop	r16
 15a:	08 95       	ret

0000015c <_Z8lcd_initv>:
void lcd_init(void)
{
	init_PORTC();
 15c:	b5 df       	rcall	.-150    	; 0xc8 <_Z10init_PORTCv>
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	83 ec       	ldi	r24, 0xC3	; 195
 162:	99 e0       	ldi	r25, 0x09	; 9
 164:	21 50       	subi	r18, 0x01	; 1
 166:	80 40       	sbci	r24, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <_Z8lcd_initv+0x8>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <_Z8lcd_initv+0x12>
 16e:	00 00       	nop
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 170:	8f e5       	ldi	r24, 0x5F	; 95
 172:	99 e0       	ldi	r25, 0x09	; 9
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <_Z8lcd_initv+0x18>
 178:	00 c0       	rjmp	.+0      	; 0x17a <_Z8lcd_initv+0x1e>
 17a:	00 00       	nop
	_delay_ms(200);
	_delay_us(600);
	instrction_out(0x28);
 17c:	88 e2       	ldi	r24, 0x28	; 40
 17e:	a8 df       	rcall	.-176    	; 0xd0 <_Z14instrction_outh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 180:	9f ef       	ldi	r25, 0xFF	; 255
 182:	23 ec       	ldi	r18, 0xC3	; 195
 184:	89 e0       	ldi	r24, 0x09	; 9
 186:	91 50       	subi	r25, 0x01	; 1
 188:	20 40       	sbci	r18, 0x00	; 0
 18a:	80 40       	sbci	r24, 0x00	; 0
 18c:	e1 f7       	brne	.-8      	; 0x186 <_Z8lcd_initv+0x2a>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <_Z8lcd_initv+0x34>
	_delay_ms(200);
	instrction_out(0x28);
 190:	00 00       	nop
 192:	88 e2       	ldi	r24, 0x28	; 40
 194:	9d df       	rcall	.-198    	; 0xd0 <_Z14instrction_outh>
 196:	9f ef       	ldi	r25, 0xFF	; 255
 198:	23 ec       	ldi	r18, 0xC3	; 195
 19a:	89 e0       	ldi	r24, 0x09	; 9
 19c:	91 50       	subi	r25, 0x01	; 1
 19e:	20 40       	sbci	r18, 0x00	; 0
 1a0:	80 40       	sbci	r24, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <_Z8lcd_initv+0x40>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <_Z8lcd_initv+0x4a>
	_delay_ms(200);
	instrction_out(0x0C);
 1a6:	00 00       	nop
 1a8:	8c e0       	ldi	r24, 0x0C	; 12
	instrction_out(0x06);
 1aa:	92 df       	rcall	.-220    	; 0xd0 <_Z14instrction_outh>
 1ac:	86 e0       	ldi	r24, 0x06	; 6
	instrction_out(0x02);
 1ae:	90 df       	rcall	.-224    	; 0xd0 <_Z14instrction_outh>
 1b0:	82 e0       	ldi	r24, 0x02	; 2
	instrction_out(0x01);
 1b2:	8e df       	rcall	.-228    	; 0xd0 <_Z14instrction_outh>
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	8c df       	rcall	.-232    	; 0xd0 <_Z14instrction_outh>
	instrction_out(0x01);
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	8a cf       	rjmp	.-236    	; 0xd0 <_Z14instrction_outh>
 1bc:	08 95       	ret

000001be <_Z9lcd_clearv>:
 1be:	81 e0       	ldi	r24, 0x01	; 1
}
void lcd_clear(void)
{
	instrction_out(0x01);
 1c0:	87 df       	rcall	.-242    	; 0xd0 <_Z14instrction_outh>
 1c2:	8f e3       	ldi	r24, 0x3F	; 63
 1c4:	9c e9       	ldi	r25, 0x9C	; 156
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <_Z9lcd_clearv+0x8>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <_Z9lcd_clearv+0xe>
 1cc:	00 00       	nop
 1ce:	08 95       	ret

000001d0 <_Z4initv>:
#define KEY_Menu  123
#define KEY_MONEY 183
#define KEY_LOBY  119

void init()
{
 1d0:	1f 93       	push	r17
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
	DDRA = 0xff;  // 0 1 : Moter  
 1d6:	8f ef       	ldi	r24, 0xFF	; 255
 1d8:	8a bb       	out	0x1a, r24	; 26
				  // 5 6 7 : LED
	DDRD = 0x0f;  // 0 1 2 3 : Row
 1da:	8f e0       	ldi	r24, 0x0F	; 15
 1dc:	81 bb       	out	0x11, r24	; 17
				  // 4 5 6 7 : Col
				  
	TIMSK = 0x01;
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	87 bf       	out	0x37, r24	; 55
	TCCR0 = 0x07;
 1e2:	87 e0       	ldi	r24, 0x07	; 7
 1e4:	83 bf       	out	0x33, r24	; 51
 1e6:	8f e3       	ldi	r24, 0x3F	; 63
 1e8:	9f e1       	ldi	r25, 0x1F	; 31
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <_Z4initv+0x1a>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <_Z4initv+0x20>
 1f0:	00 00       	nop
	_delay_ms(2);
	
	lcd_init();
 1f2:	b4 df       	rcall	.-152    	; 0x15c <_Z8lcd_initv>
	lcd_clear();
 1f4:	e4 df       	rcall	.-56     	; 0x1be <_Z9lcd_clearv>
 1f6:	c2 e0       	ldi	r28, 0x02	; 2
 1f8:	d0 e0       	ldi	r29, 0x00	; 0
 1fa:	1f ef       	ldi	r17, 0xFF	; 255
		lcd_putsf(0,0,(unsigned char*)"     MARKET     ");
		lcd_putsf(0,1,(unsigned char*)"     SYSTEM     ");
		PORTA = 0x00;
		_delay_ms(100);
		lcd_clear();
		PORTA = 0xff;
 1fc:	44 e1       	ldi	r20, 0x14	; 20
	lcd_clear();
	
	for (int i = 0; i < 2; i++)
	{
		
		lcd_putsf(0,0,(unsigned char*)"     MARKET     ");
 1fe:	51 e0       	ldi	r21, 0x01	; 1
 200:	60 e0       	ldi	r22, 0x00	; 0
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	98 df       	rcall	.-208    	; 0x136 <_Z9lcd_putsfhhPh>
 206:	45 e2       	ldi	r20, 0x25	; 37
		lcd_putsf(0,1,(unsigned char*)"     SYSTEM     ");
 208:	51 e0       	ldi	r21, 0x01	; 1
 20a:	61 e0       	ldi	r22, 0x01	; 1
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	93 df       	rcall	.-218    	; 0x136 <_Z9lcd_putsfhhPh>
 210:	1b ba       	out	0x1b, r1	; 27
		PORTA = 0x00;
 212:	9f ef       	ldi	r25, 0xFF	; 255
 214:	21 ee       	ldi	r18, 0xE1	; 225
 216:	84 e0       	ldi	r24, 0x04	; 4
 218:	91 50       	subi	r25, 0x01	; 1
 21a:	20 40       	sbci	r18, 0x00	; 0
 21c:	80 40       	sbci	r24, 0x00	; 0
 21e:	e1 f7       	brne	.-8      	; 0x218 <_Z4initv+0x48>
 220:	00 c0       	rjmp	.+0      	; 0x222 <_Z4initv+0x52>
 222:	00 00       	nop
		_delay_ms(100);
		lcd_clear();
 224:	cc df       	rcall	.-104    	; 0x1be <_Z9lcd_clearv>
 226:	1b bb       	out	0x1b, r17	; 27
		PORTA = 0xff;
 228:	9f ef       	ldi	r25, 0xFF	; 255
 22a:	21 ee       	ldi	r18, 0xE1	; 225
 22c:	84 e0       	ldi	r24, 0x04	; 4
 22e:	91 50       	subi	r25, 0x01	; 1
 230:	20 40       	sbci	r18, 0x00	; 0
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	e1 f7       	brne	.-8      	; 0x22e <_Z4initv+0x5e>
 236:	00 c0       	rjmp	.+0      	; 0x238 <_Z4initv+0x68>
 238:	00 00       	nop
 23a:	21 97       	sbiw	r28, 0x01	; 1
 23c:	f9 f6       	brne	.-66     	; 0x1fc <_Z4initv+0x2c>
	_delay_ms(2);
	
	lcd_init();
	lcd_clear();
	
	for (int i = 0; i < 2; i++)
 23e:	78 94       	sei
		_delay_ms(100);
		lcd_clear();
		PORTA = 0xff;
		_delay_ms(100);
	}
	sei(); // Global Interrupt Enable
 240:	df 91       	pop	r29
}
 242:	cf 91       	pop	r28
 244:	1f 91       	pop	r17
 246:	08 95       	ret

00000248 <_Z13Display_Clockjjj>:
 248:	0f 93       	push	r16

void Display_Clock(unsigned int hour, unsigned int min, unsigned int sec)
{
 24a:	1f 93       	push	r17
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	cd b7       	in	r28, 0x3d	; 61
 252:	de b7       	in	r29, 0x3e	; 62
 254:	60 97       	sbiw	r28, 0x10	; 16
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	f8 94       	cli
 25a:	de bf       	out	0x3e, r29	; 62
 25c:	0f be       	out	0x3f, r0	; 63
 25e:	cd bf       	out	0x3d, r28	; 61
	char str[16];
	sprintf(str,"    %02d:%02d:%02d    ",hour, min, sec);
 260:	5f 93       	push	r21
 262:	4f 93       	push	r20
 264:	7f 93       	push	r23
 266:	6f 93       	push	r22
 268:	9f 93       	push	r25
 26a:	8f 93       	push	r24
 26c:	86 e3       	ldi	r24, 0x36	; 54
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	9f 93       	push	r25
 272:	8f 93       	push	r24
 274:	8e 01       	movw	r16, r28
 276:	0f 5f       	subi	r16, 0xFF	; 255
 278:	1f 4f       	sbci	r17, 0xFF	; 255
 27a:	1f 93       	push	r17
 27c:	0f 93       	push	r16
 27e:	12 d3       	rcall	.+1572   	; 0x8a4 <sprintf>
	lcd_putsf(0,1,(unsigned char *)str);
 280:	a8 01       	movw	r20, r16
 282:	61 e0       	ldi	r22, 0x01	; 1
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	57 df       	rcall	.-338    	; 0x136 <_Z9lcd_putsfhhPh>
}
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
 292:	60 96       	adiw	r28, 0x10	; 16
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	f8 94       	cli
 298:	de bf       	out	0x3e, r29	; 62
 29a:	0f be       	out	0x3f, r0	; 63
 29c:	cd bf       	out	0x3d, r28	; 61
 29e:	df 91       	pop	r29
 2a0:	cf 91       	pop	r28
 2a2:	1f 91       	pop	r17
 2a4:	0f 91       	pop	r16
 2a6:	08 95       	ret

000002a8 <_Z6getkeyv>:

unsigned int getkey()
{	
	unsigned int key = 0;
	for(int i = 0; i < 4; i++)
 2a8:	20 e0       	ldi	r18, 0x00	; 0
 2aa:	30 e0       	ldi	r19, 0x00	; 0
	{
		PORTD = ~(0x00 | 1 << i); 
 2ac:	41 e0       	ldi	r20, 0x01	; 1
 2ae:	50 e0       	ldi	r21, 0x00	; 0
 2b0:	ca 01       	movw	r24, r20
 2b2:	02 2e       	mov	r0, r18
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <_Z6getkeyv+0x12>
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	0a 94       	dec	r0
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <_Z6getkeyv+0xe>
 2be:	80 95       	com	r24
 2c0:	82 bb       	out	0x12, r24	; 18
 2c2:	8f e3       	ldi	r24, 0x3F	; 63
 2c4:	9c e9       	ldi	r25, 0x9C	; 156
 2c6:	01 97       	sbiw	r24, 0x01	; 1
 2c8:	f1 f7       	brne	.-4      	; 0x2c6 <_Z6getkeyv+0x1e>
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <_Z6getkeyv+0x24>
 2cc:	00 00       	nop
		_delay_ms(10);
		key = (~PIND & 0xf0); // key가 눌리지 않았을 때 0값을 출력하도록 함
 2ce:	80 b3       	in	r24, 0x10	; 16
		
		if (key) return PIND; // key가 눌렸다면 0이 아니므로 고유값 PIND를 반환
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	80 95       	com	r24
 2d4:	90 95       	com	r25
 2d6:	80 7f       	andi	r24, 0xF0	; 240
 2d8:	99 27       	eor	r25, r25
 2da:	89 2b       	or	r24, r25
 2dc:	19 f0       	breq	.+6      	; 0x2e4 <_Z6getkeyv+0x3c>
 2de:	80 b3       	in	r24, 0x10	; 16
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	08 95       	ret
}

unsigned int getkey()
{	
	unsigned int key = 0;
	for(int i = 0; i < 4; i++)
 2e4:	2f 5f       	subi	r18, 0xFF	; 255
 2e6:	3f 4f       	sbci	r19, 0xFF	; 255
 2e8:	24 30       	cpi	r18, 0x04	; 4
 2ea:	31 05       	cpc	r19, r1
 2ec:	09 f7       	brne	.-62     	; 0x2b0 <_Z6getkeyv+0x8>
		_delay_ms(10);
		key = (~PIND & 0xf0); // key가 눌리지 않았을 때 0값을 출력하도록 함
		
		if (key) return PIND; // key가 눌렸다면 0이 아니므로 고유값 PIND를 반환
	}
	return 0;
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	90 e0       	ldi	r25, 0x00	; 0
}
 2f2:	08 95       	ret

000002f4 <__vector_16>:
char buf1[16];
int flag = 0;
int change = 0;

ISR(TIMER0_OVF_vect)
{
 2f4:	1f 92       	push	r1
 2f6:	0f 92       	push	r0
 2f8:	0f b6       	in	r0, 0x3f	; 63
 2fa:	0f 92       	push	r0
 2fc:	11 24       	eor	r1, r1
 2fe:	8f 93       	push	r24
 300:	9f 93       	push	r25
	timer++;
 302:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <timer>
 306:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <timer+0x1>
 30a:	01 96       	adiw	r24, 0x01	; 1
 30c:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <timer+0x1>
 310:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <timer>
	time_count++;
 314:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <time_count>
 318:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <time_count+0x1>
 31c:	01 96       	adiw	r24, 0x01	; 1
 31e:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <time_count+0x1>
 322:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <time_count>
	if (time_count >= 60)
 326:	cc 97       	sbiw	r24, 0x3c	; 60
 328:	08 f4       	brcc	.+2      	; 0x32c <__vector_16+0x38>
 32a:	41 c0       	rjmp	.+130    	; 0x3ae <__vector_16+0xba>
	{
		sec++;
 32c:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <sec>
 330:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <sec+0x1>
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <sec+0x1>
 33a:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <sec>
		if (sec > 59) {min++; sec = 0;}
 33e:	cc 97       	sbiw	r24, 0x3c	; 60
 340:	68 f0       	brcs	.+26     	; 0x35c <__vector_16+0x68>
 342:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <min>
 346:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <min+0x1>
 34a:	01 96       	adiw	r24, 0x01	; 1
 34c:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <min+0x1>
 350:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <min>
 354:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <sec+0x1>
 358:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <sec>
		if (min > 59) {hour++; min = 0;}
 35c:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <min>
 360:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <min+0x1>
 364:	cc 97       	sbiw	r24, 0x3c	; 60
 366:	68 f0       	brcs	.+26     	; 0x382 <__vector_16+0x8e>
 368:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <hour>
 36c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <hour+0x1>
 370:	01 96       	adiw	r24, 0x01	; 1
 372:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <hour+0x1>
 376:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <hour>
 37a:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <min+0x1>
 37e:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <min>
		if (hour > 24) {hour = min = sec = 0;}
 382:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <hour>
 386:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <hour+0x1>
 38a:	49 97       	sbiw	r24, 0x19	; 25
 38c:	60 f0       	brcs	.+24     	; 0x3a6 <__vector_16+0xb2>
 38e:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <sec+0x1>
 392:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <sec>
 396:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <min+0x1>
 39a:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <min>
 39e:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <hour+0x1>
 3a2:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <hour>
		time_count = 0;
 3a6:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <time_count+0x1>
 3aa:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <time_count>
	}
}
 3ae:	9f 91       	pop	r25
 3b0:	8f 91       	pop	r24
 3b2:	0f 90       	pop	r0
 3b4:	0f be       	out	0x3f, r0	; 63
 3b6:	0f 90       	pop	r0
 3b8:	1f 90       	pop	r1
 3ba:	18 95       	reti

000003bc <main>:

int main(void)
{
	init();
 3bc:	09 df       	rcall	.-494    	; 0x1d0 <_Z4initv>
					break;
				}
			}
			if ((input_key == KEY_Enter) && (flag == 0))
			{
				flag = 1;
 3be:	ee 24       	eor	r14, r14
 3c0:	e3 94       	inc	r14
 3c2:	f1 2c       	mov	r15, r1
			{
				if ((input_key == number[i]) && (flag == 0))
				{
					flag = 1;
					input_money = input_money * 10 + i;
					sprintf(buf1,"%d",input_money);
 3c4:	0f 2e       	mov	r0, r31
 3c6:	f1 e9       	ldi	r31, 0x91	; 145
 3c8:	cf 2e       	mov	r12, r31
 3ca:	f1 e0       	ldi	r31, 0x01	; 1
 3cc:	df 2e       	mov	r13, r31
 3ce:	f0 2d       	mov	r31, r0
 3d0:	08 ee       	ldi	r16, 0xE8	; 232
 3d2:	11 e0       	ldi	r17, 0x01	; 1
			}
			if ((input_key == KEY_MONEY) && (change == 1))
			{
				lcd_clear();
				lcd_putsf(0,0,(unsigned char *)"Changes Mode    ");
				mode = CHANGES_MODE;
 3d4:	0f 2e       	mov	r0, r31
 3d6:	f3 e0       	ldi	r31, 0x03	; 3
 3d8:	4f 2e       	mov	r4, r31
 3da:	51 2c       	mov	r5, r1
 3dc:	f0 2d       	mov	r31, r0
						total_money = 0;
					}
					else
					{
						total_money += product_price;
						sprintf(buf1,"=%11d won",total_money);
 3de:	0f 2e       	mov	r0, r31
 3e0:	f8 ec       	ldi	r31, 0xC8	; 200
 3e2:	6f 2e       	mov	r6, r31
 3e4:	f1 e0       	ldi	r31, 0x01	; 1
 3e6:	7f 2e       	mov	r7, r31
 3e8:	f0 2d       	mov	r31, r0
			}
			if (input_key == KEY_2)
			{
				lcd_clear();
				lcd_putsf(0,0,(unsigned char *)"Total Sales     ");
				mode = TOTAL_MODE;
 3ea:	68 94       	set
 3ec:	88 24       	eor	r8, r8
 3ee:	82 f8       	bld	r8, 2
 3f0:	91 2c       	mov	r9, r1
			
			if (input_key == KEY_1)
			{
				lcd_clear();
				lcd_putsf(0,0,(unsigned char *)"Calculate Mode  ");
				mode = CALC_MODE;
 3f2:	68 94       	set
 3f4:	aa 24       	eor	r10, r10
 3f6:	a1 f8       	bld	r10, 1
	init();
	char buff[16];
	unsigned int input_key = 0;
	while (1)
	{
		input_key = getkey();
 3f8:	b1 2c       	mov	r11, r1
 3fa:	56 df       	rcall	.-340    	; 0x2a8 <_Z6getkeyv>
 3fc:	ec 01       	movw	r28, r24
		if (input_key == 0) flag = 0;
 3fe:	00 97       	sbiw	r24, 0x00	; 0
 400:	59 f4       	brne	.+22     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 402:	10 92 e7 01 	sts	0x01E7, r1	; 0x8001e7 <flag+0x1>
 406:	10 92 e6 01 	sts	0x01E6, r1	; 0x8001e6 <flag>
		if (input_key == KEY_LOBY)
		{
			lcd_clear();
			mode = NORMAL_MODE;
		}
		if (mode == NORMAL_MODE)
 40a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <mode>
 40e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <mode+0x1>
 412:	00 97       	sbiw	r24, 0x00	; 0
 414:	99 f5       	brne	.+102    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 416:	38 c2       	rjmp	.+1136   	; 0x888 <__LOCK_REGION_LENGTH__+0x488>
	unsigned int input_key = 0;
	while (1)
	{
		input_key = getkey();
		if (input_key == 0) flag = 0;
		if (input_key == KEY_LOBY)
 418:	87 37       	cpi	r24, 0x77	; 119
 41a:	91 05       	cpc	r25, r1
		{
			lcd_clear();
 41c:	99 f4       	brne	.+38     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 41e:	cf de       	rcall	.-610    	; 0x1be <_Z9lcd_clearv>
			mode = NORMAL_MODE;
 420:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <mode+0x1>
 424:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <mode>
		}
		if (mode == NORMAL_MODE)
		{
			Display_Clock(hour, min, sec);
 428:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <sec>
 42c:	50 91 09 02 	lds	r21, 0x0209	; 0x800209 <sec+0x1>
 430:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <min>
 434:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <min+0x1>
 438:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <hour>
 43c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <hour+0x1>
 440:	03 df       	rcall	.-506    	; 0x248 <_Z13Display_Clockjjj>
 442:	db cf       	rjmp	.-74     	; 0x3fa <main+0x3e>
		if (input_key == KEY_LOBY)
		{
			lcd_clear();
			mode = NORMAL_MODE;
		}
		if (mode == NORMAL_MODE)
 444:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <mode>
 448:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <mode+0x1>
 44c:	00 97       	sbiw	r24, 0x00	; 0
 44e:	b1 f4       	brne	.+44     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
		{
			Display_Clock(hour, min, sec);
 450:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <sec>
 454:	50 91 09 02 	lds	r21, 0x0209	; 0x800209 <sec+0x1>
 458:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <min>
 45c:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <min+0x1>
 460:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <hour>
 464:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <hour+0x1>
			if (input_key == KEY_Menu)
 468:	ef de       	rcall	.-546    	; 0x248 <_Z13Display_Clockjjj>
 46a:	cb 37       	cpi	r28, 0x7B	; 123
 46c:	d1 05       	cpc	r29, r1
			{
				lcd_clear();
 46e:	29 f6       	brne	.-118    	; 0x3fa <main+0x3e>
 470:	a6 de       	rcall	.-692    	; 0x1be <_Z9lcd_clearv>
				mode = MENU_MODE;
 472:	f0 92 01 02 	sts	0x0201, r15	; 0x800201 <mode+0x1>
 476:	e0 92 00 02 	sts	0x0200, r14	; 0x800200 <mode>
 47a:	bf cf       	rjmp	.-130    	; 0x3fa <main+0x3e>
			}
		}
		else if (mode == MENU_MODE)
 47c:	81 30       	cpi	r24, 0x01	; 1
 47e:	91 05       	cpc	r25, r1
		{
			lcd_putsf(0,0,(unsigned char *)"1: Calculation  ");
 480:	79 f5       	brne	.+94     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 482:	4d e4       	ldi	r20, 0x4D	; 77
 484:	51 e0       	ldi	r21, 0x01	; 1
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	80 e0       	ldi	r24, 0x00	; 0
			lcd_putsf(0,1,(unsigned char *)"2: Total Sales  ");
 48a:	55 de       	rcall	.-854    	; 0x136 <_Z9lcd_putsfhhPh>
 48c:	4e e5       	ldi	r20, 0x5E	; 94
 48e:	51 e0       	ldi	r21, 0x01	; 1
 490:	61 e0       	ldi	r22, 0x01	; 1
 492:	80 e0       	ldi	r24, 0x00	; 0
			
			if (input_key == KEY_1)
 494:	50 de       	rcall	.-864    	; 0x136 <_Z9lcd_putsfhhPh>
 496:	ce 3e       	cpi	r28, 0xEE	; 238
			{
				lcd_clear();
 498:	d1 05       	cpc	r29, r1
 49a:	59 f4       	brne	.+22     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
				lcd_putsf(0,0,(unsigned char *)"Calculate Mode  ");
 49c:	90 de       	rcall	.-736    	; 0x1be <_Z9lcd_clearv>
 49e:	4f e6       	ldi	r20, 0x6F	; 111
 4a0:	51 e0       	ldi	r21, 0x01	; 1
 4a2:	60 e0       	ldi	r22, 0x00	; 0
 4a4:	80 e0       	ldi	r24, 0x00	; 0
				mode = CALC_MODE;
 4a6:	47 de       	rcall	.-882    	; 0x136 <_Z9lcd_putsfhhPh>
 4a8:	b0 92 01 02 	sts	0x0201, r11	; 0x800201 <mode+0x1>
 4ac:	a0 92 00 02 	sts	0x0200, r10	; 0x800200 <mode>
			}
			if (input_key == KEY_2)
 4b0:	0d c0       	rjmp	.+26     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4b2:	ce 3d       	cpi	r28, 0xDE	; 222
			{
				lcd_clear();
 4b4:	d1 05       	cpc	r29, r1
 4b6:	51 f4       	brne	.+20     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
				lcd_putsf(0,0,(unsigned char *)"Total Sales     ");
 4b8:	82 de       	rcall	.-764    	; 0x1be <_Z9lcd_clearv>
 4ba:	40 e8       	ldi	r20, 0x80	; 128
 4bc:	51 e0       	ldi	r21, 0x01	; 1
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	80 e0       	ldi	r24, 0x00	; 0
 4c2:	39 de       	rcall	.-910    	; 0x136 <_Z9lcd_putsfhhPh>
				mode = TOTAL_MODE;
 4c4:	90 92 01 02 	sts	0x0201, r9	; 0x800201 <mode+0x1>
 4c8:	80 92 00 02 	sts	0x0200, r8	; 0x800200 <mode>
 4cc:	2f ef       	ldi	r18, 0xFF	; 255
 4ce:	80 e7       	ldi	r24, 0x70	; 112
 4d0:	92 e0       	ldi	r25, 0x02	; 2
 4d2:	21 50       	subi	r18, 0x01	; 1
 4d4:	80 40       	sbci	r24, 0x00	; 0
 4d6:	90 40       	sbci	r25, 0x00	; 0
 4d8:	e1 f7       	brne	.-8      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4dc:	00 00       	nop
 4de:	8d cf       	rjmp	.-230    	; 0x3fa <main+0x3e>
			}
			_delay_ms(50);
		}
		else if (mode == CALC_MODE)
 4e0:	82 30       	cpi	r24, 0x02	; 2
 4e2:	91 05       	cpc	r25, r1
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e6:	25 c1       	rjmp	.+586    	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
		{		
			if (change == 0)
 4e8:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
 4ec:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <__data_end+0x1>
 4f0:	89 2b       	or	r24, r25
 4f2:	09 f0       	breq	.+2      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f4:	08 c1       	rjmp	.+528    	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
			{
				for (int i = 0; i < 10; i++)
				{
					if ((input_key == number[i]) && (flag == 0))
 4f6:	40 91 e6 01 	lds	r20, 0x01E6	; 0x8001e6 <flag>
 4fa:	50 91 e7 01 	lds	r21, 0x01E7	; 0x8001e7 <flag+0x1>
 4fe:	e0 e0       	ldi	r30, 0x00	; 0
 500:	f1 e0       	ldi	r31, 0x01	; 1
 502:	80 e0       	ldi	r24, 0x00	; 0
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	21 91       	ld	r18, Z+
 508:	31 91       	ld	r19, Z+
 50a:	c2 17       	cp	r28, r18
 50c:	d3 07       	cpc	r29, r19
 50e:	71 f5       	brne	.+92     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 510:	41 15       	cp	r20, r1
 512:	51 05       	cpc	r21, r1
 514:	59 f5       	brne	.+86     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
					{
						flag = 1;
 516:	f0 92 e7 01 	sts	0x01E7, r15	; 0x8001e7 <flag+0x1>
 51a:	e0 92 e6 01 	sts	0x01E6, r14	; 0x8001e6 <flag>
						product_price = product_price * 10 + i;
 51e:	20 91 fe 01 	lds	r18, 0x01FE	; 0x8001fe <product_price>
 522:	30 91 ff 01 	lds	r19, 0x01FF	; 0x8001ff <product_price+0x1>
 526:	a9 01       	movw	r20, r18
 528:	44 0f       	add	r20, r20
 52a:	55 1f       	adc	r21, r21
 52c:	22 0f       	add	r18, r18
 52e:	33 1f       	adc	r19, r19
 530:	22 0f       	add	r18, r18
 532:	33 1f       	adc	r19, r19
 534:	22 0f       	add	r18, r18
 536:	33 1f       	adc	r19, r19
 538:	24 0f       	add	r18, r20
 53a:	35 1f       	adc	r19, r21
 53c:	82 0f       	add	r24, r18
 53e:	93 1f       	adc	r25, r19
 540:	90 93 ff 01 	sts	0x01FF, r25	; 0x8001ff <product_price+0x1>
						sprintf(buf1,"%d",product_price);
 544:	80 93 fe 01 	sts	0x01FE, r24	; 0x8001fe <product_price>
 548:	9f 93       	push	r25
 54a:	8f 93       	push	r24
 54c:	df 92       	push	r13
 54e:	cf 92       	push	r12
 550:	1f 93       	push	r17
 552:	0f 93       	push	r16
						lcd_putsf(0,1,(unsigned char *)buf1);
 554:	a7 d1       	rcall	.+846    	; 0x8a4 <sprintf>
 556:	a8 01       	movw	r20, r16
 558:	61 e0       	ldi	r22, 0x01	; 1
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	ec dd       	rcall	.-1064   	; 0x136 <_Z9lcd_putsfhhPh>
						break;
 55e:	0f 90       	pop	r0
 560:	0f 90       	pop	r0
 562:	0f 90       	pop	r0
 564:	0f 90       	pop	r0
 566:	0f 90       	pop	r0
 568:	0f 90       	pop	r0
 56a:	04 c0       	rjmp	.+8      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
		}
		else if (mode == CALC_MODE)
		{		
			if (change == 0)
			{
				for (int i = 0; i < 10; i++)
 56c:	01 96       	adiw	r24, 0x01	; 1
 56e:	8a 30       	cpi	r24, 0x0A	; 10
 570:	91 05       	cpc	r25, r1
 572:	49 f6       	brne	.-110    	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
						sprintf(buf1,"%d",product_price);
						lcd_putsf(0,1,(unsigned char *)buf1);
						break;
					}
				}
				if ((input_key == KEY_PLUS) && (flag == 0))
 574:	ce 37       	cpi	r28, 0x7E	; 126
 576:	d1 05       	cpc	r29, r1
 578:	09 f0       	breq	.+2      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 57a:	5a c0       	rjmp	.+180    	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 57c:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <flag>
 580:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <flag+0x1>
 584:	89 2b       	or	r24, r25
 586:	09 f0       	breq	.+2      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 588:	38 cf       	rjmp	.-400    	; 0x3fa <main+0x3e>
				{
					flag = 1;
 58a:	f0 92 e7 01 	sts	0x01E7, r15	; 0x8001e7 <flag+0x1>
 58e:	e0 92 e6 01 	sts	0x01E6, r14	; 0x8001e6 <flag>
					
					if (product_price > 20000)
 592:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <product_price>
 596:	90 91 ff 01 	lds	r25, 0x01FF	; 0x8001ff <product_price+0x1>
 59a:	81 32       	cpi	r24, 0x21	; 33
 59c:	9e 44       	sbci	r25, 0x4E	; 78
					{
						sprintf(buf1,"     ERROR!      ");
 59e:	80 f1       	brcs	.+96     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5a0:	82 e1       	ldi	r24, 0x12	; 18
 5a2:	e4 e9       	ldi	r30, 0x94	; 148
 5a4:	f1 e0       	ldi	r31, 0x01	; 1
 5a6:	d8 01       	movw	r26, r16
 5a8:	01 90       	ld	r0, Z+
 5aa:	0d 92       	st	X+, r0
 5ac:	8a 95       	dec	r24
 5ae:	e1 f7       	brne	.-8      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5b0:	c3 e0       	ldi	r28, 0x03	; 3
						for (int j = 0; j < 3; j++)
						{
							lcd_putsf(0,1,(unsigned char *)buf1);
 5b2:	d0 e0       	ldi	r29, 0x00	; 0
 5b4:	a8 01       	movw	r20, r16
 5b6:	61 e0       	ldi	r22, 0x01	; 1
 5b8:	80 e0       	ldi	r24, 0x00	; 0
 5ba:	bd dd       	rcall	.-1158   	; 0x136 <_Z9lcd_putsfhhPh>
 5bc:	8f ef       	ldi	r24, 0xFF	; 255
 5be:	91 ee       	ldi	r25, 0xE1	; 225
 5c0:	24 e0       	ldi	r18, 0x04	; 4
 5c2:	81 50       	subi	r24, 0x01	; 1
 5c4:	90 40       	sbci	r25, 0x00	; 0
 5c6:	20 40       	sbci	r18, 0x00	; 0
 5c8:	e1 f7       	brne	.-8      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5ca:	00 c0       	rjmp	.+0      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
							_delay_ms(100);
							lcd_putsf(0,1,(unsigned char *)"                ");
 5cc:	00 00       	nop
 5ce:	46 ea       	ldi	r20, 0xA6	; 166
 5d0:	51 e0       	ldi	r21, 0x01	; 1
 5d2:	61 e0       	ldi	r22, 0x01	; 1
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	af dd       	rcall	.-1186   	; 0x136 <_Z9lcd_putsfhhPh>
 5d8:	8f ef       	ldi	r24, 0xFF	; 255
 5da:	91 ee       	ldi	r25, 0xE1	; 225
 5dc:	24 e0       	ldi	r18, 0x04	; 4
 5de:	81 50       	subi	r24, 0x01	; 1
 5e0:	90 40       	sbci	r25, 0x00	; 0
 5e2:	20 40       	sbci	r18, 0x00	; 0
 5e4:	e1 f7       	brne	.-8      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5e8:	00 00       	nop
					flag = 1;
					
					if (product_price > 20000)
					{
						sprintf(buf1,"     ERROR!      ");
						for (int j = 0; j < 3; j++)
 5ea:	21 97       	sbiw	r28, 0x01	; 1
							lcd_putsf(0,1,(unsigned char *)buf1);
							_delay_ms(100);
							lcd_putsf(0,1,(unsigned char *)"                ");
							_delay_ms(100);
						}
						mode = NORMAL_MODE;
 5ec:	19 f7       	brne	.-58     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5ee:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <mode+0x1>
 5f2:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <mode>
						total_money = 0;
 5f6:	10 92 fd 01 	sts	0x01FD, r1	; 0x8001fd <total_money+0x1>
 5fa:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <total_money>
					}
					else
					{
						lcd_putsf(0,1,(unsigned char *)"                ");
 5fe:	13 c0       	rjmp	.+38     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 600:	46 ea       	ldi	r20, 0xA6	; 166
 602:	51 e0       	ldi	r21, 0x01	; 1
 604:	61 e0       	ldi	r22, 0x01	; 1
 606:	80 e0       	ldi	r24, 0x00	; 0
 608:	96 dd       	rcall	.-1236   	; 0x136 <_Z9lcd_putsfhhPh>
						total_money += product_price;
 60a:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <total_money>
 60e:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <total_money+0x1>
 612:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <product_price>
 616:	90 91 ff 01 	lds	r25, 0x01FF	; 0x8001ff <product_price+0x1>
 61a:	82 0f       	add	r24, r18
 61c:	93 1f       	adc	r25, r19
 61e:	90 93 fd 01 	sts	0x01FD, r25	; 0x8001fd <total_money+0x1>
 622:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <total_money>

					}
					product_price = 0;
 626:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <product_price+0x1>
 62a:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <product_price>
 62e:	e5 ce       	rjmp	.-566    	; 0x3fa <main+0x3e>
				}
				if ((input_key == KEY_Enter) && (flag == 0))
 630:	cd 37       	cpi	r28, 0x7D	; 125
 632:	d1 05       	cpc	r29, r1
 634:	09 f0       	breq	.+2      	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 636:	67 c0       	rjmp	.+206    	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 638:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <flag>
 63c:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <flag+0x1>
 640:	89 2b       	or	r24, r25
 642:	09 f0       	breq	.+2      	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 644:	da ce       	rjmp	.-588    	; 0x3fa <main+0x3e>
				{
					flag = 1;
 646:	f0 92 e7 01 	sts	0x01E7, r15	; 0x8001e7 <flag+0x1>
 64a:	e0 92 e6 01 	sts	0x01E6, r14	; 0x8001e6 <flag>
					if (product_price > 20000)
 64e:	20 91 fe 01 	lds	r18, 0x01FE	; 0x8001fe <product_price>
 652:	30 91 ff 01 	lds	r19, 0x01FF	; 0x8001ff <product_price+0x1>
 656:	21 32       	cpi	r18, 0x21	; 33
 658:	8e e4       	ldi	r24, 0x4E	; 78
 65a:	38 07       	cpc	r19, r24
					{
						sprintf(buf1,"     ERROR!     ");
 65c:	80 f1       	brcs	.+96     	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 65e:	81 e1       	ldi	r24, 0x11	; 17
 660:	e7 eb       	ldi	r30, 0xB7	; 183
 662:	f1 e0       	ldi	r31, 0x01	; 1
 664:	d8 01       	movw	r26, r16
 666:	01 90       	ld	r0, Z+
 668:	0d 92       	st	X+, r0
 66a:	8a 95       	dec	r24
 66c:	e1 f7       	brne	.-8      	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 66e:	c3 e0       	ldi	r28, 0x03	; 3
						for (int j = 0; j < 3; j++)
						{
							lcd_putsf(0,1,(unsigned char *)buf1);
 670:	d0 e0       	ldi	r29, 0x00	; 0
 672:	a8 01       	movw	r20, r16
 674:	61 e0       	ldi	r22, 0x01	; 1
 676:	80 e0       	ldi	r24, 0x00	; 0
 678:	5e dd       	rcall	.-1348   	; 0x136 <_Z9lcd_putsfhhPh>
 67a:	9f ef       	ldi	r25, 0xFF	; 255
 67c:	21 ee       	ldi	r18, 0xE1	; 225
 67e:	84 e0       	ldi	r24, 0x04	; 4
 680:	91 50       	subi	r25, 0x01	; 1
 682:	20 40       	sbci	r18, 0x00	; 0
 684:	80 40       	sbci	r24, 0x00	; 0
 686:	e1 f7       	brne	.-8      	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 688:	00 c0       	rjmp	.+0      	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
							_delay_ms(100);
							lcd_putsf(0,1,(unsigned char *)"                ");
 68a:	00 00       	nop
 68c:	46 ea       	ldi	r20, 0xA6	; 166
 68e:	51 e0       	ldi	r21, 0x01	; 1
 690:	61 e0       	ldi	r22, 0x01	; 1
 692:	80 e0       	ldi	r24, 0x00	; 0
 694:	50 dd       	rcall	.-1376   	; 0x136 <_Z9lcd_putsfhhPh>
 696:	9f ef       	ldi	r25, 0xFF	; 255
 698:	21 ee       	ldi	r18, 0xE1	; 225
 69a:	84 e0       	ldi	r24, 0x04	; 4
 69c:	91 50       	subi	r25, 0x01	; 1
 69e:	20 40       	sbci	r18, 0x00	; 0
 6a0:	80 40       	sbci	r24, 0x00	; 0
 6a2:	e1 f7       	brne	.-8      	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 6a4:	00 c0       	rjmp	.+0      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6a6:	00 00       	nop
 6a8:	21 97       	sbiw	r28, 0x01	; 1
				{
					flag = 1;
					if (product_price > 20000)
					{
						sprintf(buf1,"     ERROR!     ");
						for (int j = 0; j < 3; j++)
 6aa:	19 f7       	brne	.-58     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
							lcd_putsf(0,1,(unsigned char *)buf1);
							_delay_ms(100);
							lcd_putsf(0,1,(unsigned char *)"                ");
							_delay_ms(100);
						}
						mode = NORMAL_MODE;
 6ac:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <mode+0x1>
 6b0:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <mode>
						total_money = 0;
 6b4:	10 92 fd 01 	sts	0x01FD, r1	; 0x8001fd <total_money+0x1>
 6b8:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <total_money>
					}
					else
					{
						total_money += product_price;
 6bc:	1f c0       	rjmp	.+62     	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6be:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <total_money>
 6c2:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <total_money+0x1>
 6c6:	82 0f       	add	r24, r18
 6c8:	93 1f       	adc	r25, r19
 6ca:	90 93 fd 01 	sts	0x01FD, r25	; 0x8001fd <total_money+0x1>
						sprintf(buf1,"=%11d won",total_money);
 6ce:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <total_money>
 6d2:	9f 93       	push	r25
 6d4:	8f 93       	push	r24
 6d6:	7f 92       	push	r7
 6d8:	6f 92       	push	r6
 6da:	1f 93       	push	r17
 6dc:	0f 93       	push	r16
						lcd_putsf(0,1,(unsigned char *)buf1);
 6de:	e2 d0       	rcall	.+452    	; 0x8a4 <sprintf>
 6e0:	a8 01       	movw	r20, r16
 6e2:	61 e0       	ldi	r22, 0x01	; 1
 6e4:	80 e0       	ldi	r24, 0x00	; 0
 6e6:	27 dd       	rcall	.-1458   	; 0x136 <_Z9lcd_putsfhhPh>
						change = 1;
 6e8:	f0 92 e5 01 	sts	0x01E5, r15	; 0x8001e5 <__data_end+0x1>
 6ec:	e0 92 e4 01 	sts	0x01E4, r14	; 0x8001e4 <__data_end>
 6f0:	0f 90       	pop	r0
 6f2:	0f 90       	pop	r0
 6f4:	0f 90       	pop	r0
 6f6:	0f 90       	pop	r0
 6f8:	0f 90       	pop	r0
					}
					product_price = 0;
 6fa:	0f 90       	pop	r0
 6fc:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <product_price+0x1>
 700:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <product_price>
				}
			}
			if ((input_key == KEY_MONEY) && (change == 1))
 704:	7a ce       	rjmp	.-780    	; 0x3fa <main+0x3e>
 706:	c7 3b       	cpi	r28, 0xB7	; 183
 708:	d1 05       	cpc	r29, r1
 70a:	09 f0       	breq	.+2      	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 70c:	76 ce       	rjmp	.-788    	; 0x3fa <main+0x3e>
 70e:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <__data_end>
 712:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <__data_end+0x1>
 716:	01 97       	sbiw	r24, 0x01	; 1
			{
				lcd_clear();
 718:	09 f0       	breq	.+2      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 71a:	6f ce       	rjmp	.-802    	; 0x3fa <main+0x3e>
				lcd_putsf(0,0,(unsigned char *)"Changes Mode    ");
 71c:	50 dd       	rcall	.-1376   	; 0x1be <_Z9lcd_clearv>
 71e:	42 ed       	ldi	r20, 0xD2	; 210
 720:	51 e0       	ldi	r21, 0x01	; 1
 722:	60 e0       	ldi	r22, 0x00	; 0
 724:	80 e0       	ldi	r24, 0x00	; 0
 726:	07 dd       	rcall	.-1522   	; 0x136 <_Z9lcd_putsfhhPh>
				mode = CHANGES_MODE;
 728:	50 92 01 02 	sts	0x0201, r5	; 0x800201 <mode+0x1>
 72c:	40 92 00 02 	sts	0x0200, r4	; 0x800200 <mode>
 730:	64 ce       	rjmp	.-824    	; 0x3fa <main+0x3e>
			}
		}
		else if (mode == CHANGES_MODE)
 732:	03 97       	sbiw	r24, 0x03	; 3
 734:	09 f0       	breq	.+2      	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 736:	61 ce       	rjmp	.-830    	; 0x3fa <main+0x3e>
		{
			change = 0;
 738:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <__data_end+0x1>
 73c:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <__data_end>
			for (int i = 0; i < 10; i++)
			{
				if ((input_key == number[i]) && (flag == 0))
 740:	40 91 e6 01 	lds	r20, 0x01E6	; 0x8001e6 <flag>
 744:	50 91 e7 01 	lds	r21, 0x01E7	; 0x8001e7 <flag+0x1>
 748:	e0 e0       	ldi	r30, 0x00	; 0
 74a:	f1 e0       	ldi	r31, 0x01	; 1
			}
		}
		else if (mode == CHANGES_MODE)
		{
			change = 0;
			for (int i = 0; i < 10; i++)
 74c:	80 e0       	ldi	r24, 0x00	; 0
 74e:	90 e0       	ldi	r25, 0x00	; 0
			{
				if ((input_key == number[i]) && (flag == 0))
 750:	21 91       	ld	r18, Z+
 752:	31 91       	ld	r19, Z+
 754:	c2 17       	cp	r28, r18
 756:	d3 07       	cpc	r29, r19
 758:	71 f5       	brne	.+92     	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
 75a:	41 15       	cp	r20, r1
 75c:	51 05       	cpc	r21, r1
 75e:	59 f5       	brne	.+86     	; 0x7b6 <__LOCK_REGION_LENGTH__+0x3b6>
				{
					flag = 1;
 760:	f0 92 e7 01 	sts	0x01E7, r15	; 0x8001e7 <flag+0x1>
 764:	e0 92 e6 01 	sts	0x01E6, r14	; 0x8001e6 <flag>
					input_money = input_money * 10 + i;
 768:	20 91 fa 01 	lds	r18, 0x01FA	; 0x8001fa <input_money>
 76c:	30 91 fb 01 	lds	r19, 0x01FB	; 0x8001fb <input_money+0x1>
 770:	a9 01       	movw	r20, r18
 772:	44 0f       	add	r20, r20
 774:	55 1f       	adc	r21, r21
 776:	22 0f       	add	r18, r18
 778:	33 1f       	adc	r19, r19
 77a:	22 0f       	add	r18, r18
 77c:	33 1f       	adc	r19, r19
 77e:	22 0f       	add	r18, r18
 780:	33 1f       	adc	r19, r19
 782:	24 0f       	add	r18, r20
 784:	35 1f       	adc	r19, r21
 786:	82 0f       	add	r24, r18
 788:	93 1f       	adc	r25, r19
 78a:	90 93 fb 01 	sts	0x01FB, r25	; 0x8001fb <input_money+0x1>
					sprintf(buf1,"%d",input_money);
 78e:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <input_money>
 792:	9f 93       	push	r25
 794:	8f 93       	push	r24
 796:	df 92       	push	r13
 798:	cf 92       	push	r12
 79a:	1f 93       	push	r17
 79c:	0f 93       	push	r16
					lcd_putsf(0,1,(unsigned char *)buf1);
 79e:	82 d0       	rcall	.+260    	; 0x8a4 <sprintf>
 7a0:	a8 01       	movw	r20, r16
 7a2:	61 e0       	ldi	r22, 0x01	; 1
 7a4:	80 e0       	ldi	r24, 0x00	; 0
 7a6:	c7 dc       	rcall	.-1650   	; 0x136 <_Z9lcd_putsfhhPh>
					break;
 7a8:	0f 90       	pop	r0
 7aa:	0f 90       	pop	r0
 7ac:	0f 90       	pop	r0
 7ae:	0f 90       	pop	r0
 7b0:	0f 90       	pop	r0
 7b2:	0f 90       	pop	r0
 7b4:	04 c0       	rjmp	.+8      	; 0x7be <__LOCK_REGION_LENGTH__+0x3be>
			}
		}
		else if (mode == CHANGES_MODE)
		{
			change = 0;
			for (int i = 0; i < 10; i++)
 7b6:	01 96       	adiw	r24, 0x01	; 1
 7b8:	8a 30       	cpi	r24, 0x0A	; 10
 7ba:	91 05       	cpc	r25, r1
 7bc:	49 f6       	brne	.-110    	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
					sprintf(buf1,"%d",input_money);
					lcd_putsf(0,1,(unsigned char *)buf1);
					break;
				}
			}
			if ((input_key == KEY_Enter) && (flag == 0))
 7be:	cd 37       	cpi	r28, 0x7D	; 125
 7c0:	d1 05       	cpc	r29, r1
 7c2:	09 f0       	breq	.+2      	; 0x7c6 <__LOCK_REGION_LENGTH__+0x3c6>
 7c4:	1a ce       	rjmp	.-972    	; 0x3fa <main+0x3e>
 7c6:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <flag>
 7ca:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <flag+0x1>
 7ce:	89 2b       	or	r24, r25
 7d0:	09 f0       	breq	.+2      	; 0x7d4 <__LOCK_REGION_LENGTH__+0x3d4>
 7d2:	13 ce       	rjmp	.-986    	; 0x3fa <main+0x3e>
			{
				flag = 1;
 7d4:	f0 92 e7 01 	sts	0x01E7, r15	; 0x8001e7 <flag+0x1>
 7d8:	e0 92 e6 01 	sts	0x01E6, r14	; 0x8001e6 <flag>
				if (input_money >= total_money)
 7dc:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <input_money>
 7e0:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <input_money+0x1>
 7e4:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <total_money>
 7e8:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <total_money+0x1>
 7ec:	82 17       	cp	r24, r18
 7ee:	93 07       	cpc	r25, r19
 7f0:	08 f4       	brcc	.+2      	; 0x7f4 <__LOCK_REGION_LENGTH__+0x3f4>
 7f2:	40 c0       	rjmp	.+128    	; 0x874 <__LOCK_REGION_LENGTH__+0x474>
				{
					int future = timer + 5000;
 7f4:	c0 91 02 02 	lds	r28, 0x0202	; 0x800202 <timer>
 7f8:	d0 91 03 02 	lds	r29, 0x0203	; 0x800203 <timer+0x1>
 7fc:	c8 57       	subi	r28, 0x78	; 120
					total_sales += total_money;					
 7fe:	dc 4e       	sbci	r29, 0xEC	; 236
 800:	40 91 f8 01 	lds	r20, 0x01F8	; 0x8001f8 <total_sales>
 804:	50 91 f9 01 	lds	r21, 0x01F9	; 0x8001f9 <total_sales+0x1>
 808:	42 0f       	add	r20, r18
 80a:	53 1f       	adc	r21, r19
 80c:	50 93 f9 01 	sts	0x01F9, r21	; 0x8001f9 <total_sales+0x1>
					sprintf(buf1,"=%11d won",input_money - total_money);
 810:	40 93 f8 01 	sts	0x01F8, r20	; 0x8001f8 <total_sales>
 814:	82 1b       	sub	r24, r18
 816:	93 0b       	sbc	r25, r19
 818:	9f 93       	push	r25
 81a:	8f 93       	push	r24
 81c:	88 ec       	ldi	r24, 0xC8	; 200
 81e:	91 e0       	ldi	r25, 0x01	; 1
 820:	9f 93       	push	r25
 822:	8f 93       	push	r24
 824:	88 ee       	ldi	r24, 0xE8	; 232
 826:	91 e0       	ldi	r25, 0x01	; 1
 828:	9f 93       	push	r25
 82a:	8f 93       	push	r24
					lcd_putsf(0,1,(unsigned char *)buf1);
 82c:	3b d0       	rcall	.+118    	; 0x8a4 <sprintf>
 82e:	48 ee       	ldi	r20, 0xE8	; 232
 830:	51 e0       	ldi	r21, 0x01	; 1
 832:	61 e0       	ldi	r22, 0x01	; 1
 834:	80 e0       	ldi	r24, 0x00	; 0
					total_money = 0;
 836:	7f dc       	rcall	.-1794   	; 0x136 <_Z9lcd_putsfhhPh>
 838:	10 92 fd 01 	sts	0x01FD, r1	; 0x8001fd <total_money+0x1>
 83c:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <total_money>
 840:	0f 90       	pop	r0
 842:	0f 90       	pop	r0
 844:	0f 90       	pop	r0
 846:	0f 90       	pop	r0
					while(1)
					{
						if (timer > future) mode = NORMAL_MODE;
 848:	0f 90       	pop	r0
 84a:	0f 90       	pop	r0
 84c:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <timer>
 850:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <timer+0x1>
 854:	c8 17       	cp	r28, r24
 856:	d9 07       	cpc	r29, r25
 858:	20 f4       	brcc	.+8      	; 0x862 <__LOCK_REGION_LENGTH__+0x462>
 85a:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <mode+0x1>
						if (getkey() == KEY_LOBY) mode = NORMAL_MODE;
 85e:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <mode>
 862:	22 dd       	rcall	.-1468   	; 0x2a8 <_Z6getkeyv>
 864:	87 37       	cpi	r24, 0x77	; 119
 866:	91 05       	cpc	r25, r1
 868:	89 f7       	brne	.-30     	; 0x84c <__LOCK_REGION_LENGTH__+0x44c>
 86a:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <mode+0x1>
 86e:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <mode>
					}					
				}
				else lcd_putsf(0,1,(unsigned char *)"                ");
 872:	ec cf       	rjmp	.-40     	; 0x84c <__LOCK_REGION_LENGTH__+0x44c>
 874:	46 ea       	ldi	r20, 0xA6	; 166
 876:	51 e0       	ldi	r21, 0x01	; 1
 878:	61 e0       	ldi	r22, 0x01	; 1
 87a:	80 e0       	ldi	r24, 0x00	; 0
				input_money = 0;
 87c:	5c dc       	rcall	.-1864   	; 0x136 <_Z9lcd_putsfhhPh>
 87e:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <input_money+0x1>
 882:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <input_money>
			lcd_clear();
			mode = NORMAL_MODE;
		}
		if (mode == NORMAL_MODE)
		{
			Display_Clock(hour, min, sec);
 886:	b9 cd       	rjmp	.-1166   	; 0x3fa <main+0x3e>
 888:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <sec>
 88c:	50 91 09 02 	lds	r21, 0x0209	; 0x800209 <sec+0x1>
 890:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <min>
 894:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <min+0x1>
 898:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <hour>
 89c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <hour+0x1>
 8a0:	d3 dc       	rcall	.-1626   	; 0x248 <_Z13Display_Clockjjj>
 8a2:	ab cd       	rjmp	.-1194   	; 0x3fa <main+0x3e>

000008a4 <sprintf>:
 8a4:	0f 93       	push	r16
 8a6:	1f 93       	push	r17
 8a8:	cf 93       	push	r28
 8aa:	df 93       	push	r29
 8ac:	cd b7       	in	r28, 0x3d	; 61
 8ae:	de b7       	in	r29, 0x3e	; 62
 8b0:	2e 97       	sbiw	r28, 0x0e	; 14
 8b2:	0f b6       	in	r0, 0x3f	; 63
 8b4:	f8 94       	cli
 8b6:	de bf       	out	0x3e, r29	; 62
 8b8:	0f be       	out	0x3f, r0	; 63
 8ba:	cd bf       	out	0x3d, r28	; 61
 8bc:	0d 89       	ldd	r16, Y+21	; 0x15
 8be:	1e 89       	ldd	r17, Y+22	; 0x16
 8c0:	86 e0       	ldi	r24, 0x06	; 6
 8c2:	8c 83       	std	Y+4, r24	; 0x04
 8c4:	1a 83       	std	Y+2, r17	; 0x02
 8c6:	09 83       	std	Y+1, r16	; 0x01
 8c8:	8f ef       	ldi	r24, 0xFF	; 255
 8ca:	9f e7       	ldi	r25, 0x7F	; 127
 8cc:	9e 83       	std	Y+6, r25	; 0x06
 8ce:	8d 83       	std	Y+5, r24	; 0x05
 8d0:	ae 01       	movw	r20, r28
 8d2:	47 5e       	subi	r20, 0xE7	; 231
 8d4:	5f 4f       	sbci	r21, 0xFF	; 255
 8d6:	6f 89       	ldd	r22, Y+23	; 0x17
 8d8:	78 8d       	ldd	r23, Y+24	; 0x18
 8da:	ce 01       	movw	r24, r28
 8dc:	01 96       	adiw	r24, 0x01	; 1
 8de:	10 d0       	rcall	.+32     	; 0x900 <vfprintf>
 8e0:	ef 81       	ldd	r30, Y+7	; 0x07
 8e2:	f8 85       	ldd	r31, Y+8	; 0x08
 8e4:	e0 0f       	add	r30, r16
 8e6:	f1 1f       	adc	r31, r17
 8e8:	10 82       	st	Z, r1
 8ea:	2e 96       	adiw	r28, 0x0e	; 14
 8ec:	0f b6       	in	r0, 0x3f	; 63
 8ee:	f8 94       	cli
 8f0:	de bf       	out	0x3e, r29	; 62
 8f2:	0f be       	out	0x3f, r0	; 63
 8f4:	cd bf       	out	0x3d, r28	; 61
 8f6:	df 91       	pop	r29
 8f8:	cf 91       	pop	r28
 8fa:	1f 91       	pop	r17
 8fc:	0f 91       	pop	r16
 8fe:	08 95       	ret

00000900 <vfprintf>:
 900:	2f 92       	push	r2
 902:	3f 92       	push	r3
 904:	4f 92       	push	r4
 906:	5f 92       	push	r5
 908:	6f 92       	push	r6
 90a:	7f 92       	push	r7
 90c:	8f 92       	push	r8
 90e:	9f 92       	push	r9
 910:	af 92       	push	r10
 912:	bf 92       	push	r11
 914:	cf 92       	push	r12
 916:	df 92       	push	r13
 918:	ef 92       	push	r14
 91a:	ff 92       	push	r15
 91c:	0f 93       	push	r16
 91e:	1f 93       	push	r17
 920:	cf 93       	push	r28
 922:	df 93       	push	r29
 924:	cd b7       	in	r28, 0x3d	; 61
 926:	de b7       	in	r29, 0x3e	; 62
 928:	2b 97       	sbiw	r28, 0x0b	; 11
 92a:	0f b6       	in	r0, 0x3f	; 63
 92c:	f8 94       	cli
 92e:	de bf       	out	0x3e, r29	; 62
 930:	0f be       	out	0x3f, r0	; 63
 932:	cd bf       	out	0x3d, r28	; 61
 934:	6c 01       	movw	r12, r24
 936:	7b 01       	movw	r14, r22
 938:	8a 01       	movw	r16, r20
 93a:	fc 01       	movw	r30, r24
 93c:	17 82       	std	Z+7, r1	; 0x07
 93e:	16 82       	std	Z+6, r1	; 0x06
 940:	83 81       	ldd	r24, Z+3	; 0x03
 942:	81 ff       	sbrs	r24, 1
 944:	bf c1       	rjmp	.+894    	; 0xcc4 <vfprintf+0x3c4>
 946:	ce 01       	movw	r24, r28
 948:	01 96       	adiw	r24, 0x01	; 1
 94a:	3c 01       	movw	r6, r24
 94c:	f6 01       	movw	r30, r12
 94e:	93 81       	ldd	r25, Z+3	; 0x03
 950:	f7 01       	movw	r30, r14
 952:	93 fd       	sbrc	r25, 3
 954:	85 91       	lpm	r24, Z+
 956:	93 ff       	sbrs	r25, 3
 958:	81 91       	ld	r24, Z+
 95a:	7f 01       	movw	r14, r30
 95c:	88 23       	and	r24, r24
 95e:	09 f4       	brne	.+2      	; 0x962 <vfprintf+0x62>
 960:	ad c1       	rjmp	.+858    	; 0xcbc <vfprintf+0x3bc>
 962:	85 32       	cpi	r24, 0x25	; 37
 964:	39 f4       	brne	.+14     	; 0x974 <vfprintf+0x74>
 966:	93 fd       	sbrc	r25, 3
 968:	85 91       	lpm	r24, Z+
 96a:	93 ff       	sbrs	r25, 3
 96c:	81 91       	ld	r24, Z+
 96e:	7f 01       	movw	r14, r30
 970:	85 32       	cpi	r24, 0x25	; 37
 972:	21 f4       	brne	.+8      	; 0x97c <vfprintf+0x7c>
 974:	b6 01       	movw	r22, r12
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	d6 d1       	rcall	.+940    	; 0xd26 <fputc>
 97a:	e8 cf       	rjmp	.-48     	; 0x94c <vfprintf+0x4c>
 97c:	91 2c       	mov	r9, r1
 97e:	21 2c       	mov	r2, r1
 980:	31 2c       	mov	r3, r1
 982:	ff e1       	ldi	r31, 0x1F	; 31
 984:	f3 15       	cp	r31, r3
 986:	d8 f0       	brcs	.+54     	; 0x9be <vfprintf+0xbe>
 988:	8b 32       	cpi	r24, 0x2B	; 43
 98a:	79 f0       	breq	.+30     	; 0x9aa <vfprintf+0xaa>
 98c:	38 f4       	brcc	.+14     	; 0x99c <vfprintf+0x9c>
 98e:	80 32       	cpi	r24, 0x20	; 32
 990:	79 f0       	breq	.+30     	; 0x9b0 <vfprintf+0xb0>
 992:	83 32       	cpi	r24, 0x23	; 35
 994:	a1 f4       	brne	.+40     	; 0x9be <vfprintf+0xbe>
 996:	23 2d       	mov	r18, r3
 998:	20 61       	ori	r18, 0x10	; 16
 99a:	1d c0       	rjmp	.+58     	; 0x9d6 <vfprintf+0xd6>
 99c:	8d 32       	cpi	r24, 0x2D	; 45
 99e:	61 f0       	breq	.+24     	; 0x9b8 <vfprintf+0xb8>
 9a0:	80 33       	cpi	r24, 0x30	; 48
 9a2:	69 f4       	brne	.+26     	; 0x9be <vfprintf+0xbe>
 9a4:	23 2d       	mov	r18, r3
 9a6:	21 60       	ori	r18, 0x01	; 1
 9a8:	16 c0       	rjmp	.+44     	; 0x9d6 <vfprintf+0xd6>
 9aa:	83 2d       	mov	r24, r3
 9ac:	82 60       	ori	r24, 0x02	; 2
 9ae:	38 2e       	mov	r3, r24
 9b0:	e3 2d       	mov	r30, r3
 9b2:	e4 60       	ori	r30, 0x04	; 4
 9b4:	3e 2e       	mov	r3, r30
 9b6:	2a c0       	rjmp	.+84     	; 0xa0c <vfprintf+0x10c>
 9b8:	f3 2d       	mov	r31, r3
 9ba:	f8 60       	ori	r31, 0x08	; 8
 9bc:	1d c0       	rjmp	.+58     	; 0x9f8 <vfprintf+0xf8>
 9be:	37 fc       	sbrc	r3, 7
 9c0:	2d c0       	rjmp	.+90     	; 0xa1c <vfprintf+0x11c>
 9c2:	20 ed       	ldi	r18, 0xD0	; 208
 9c4:	28 0f       	add	r18, r24
 9c6:	2a 30       	cpi	r18, 0x0A	; 10
 9c8:	40 f0       	brcs	.+16     	; 0x9da <vfprintf+0xda>
 9ca:	8e 32       	cpi	r24, 0x2E	; 46
 9cc:	b9 f4       	brne	.+46     	; 0x9fc <vfprintf+0xfc>
 9ce:	36 fc       	sbrc	r3, 6
 9d0:	75 c1       	rjmp	.+746    	; 0xcbc <vfprintf+0x3bc>
 9d2:	23 2d       	mov	r18, r3
 9d4:	20 64       	ori	r18, 0x40	; 64
 9d6:	32 2e       	mov	r3, r18
 9d8:	19 c0       	rjmp	.+50     	; 0xa0c <vfprintf+0x10c>
 9da:	36 fe       	sbrs	r3, 6
 9dc:	06 c0       	rjmp	.+12     	; 0x9ea <vfprintf+0xea>
 9de:	8a e0       	ldi	r24, 0x0A	; 10
 9e0:	98 9e       	mul	r9, r24
 9e2:	20 0d       	add	r18, r0
 9e4:	11 24       	eor	r1, r1
 9e6:	92 2e       	mov	r9, r18
 9e8:	11 c0       	rjmp	.+34     	; 0xa0c <vfprintf+0x10c>
 9ea:	ea e0       	ldi	r30, 0x0A	; 10
 9ec:	2e 9e       	mul	r2, r30
 9ee:	20 0d       	add	r18, r0
 9f0:	11 24       	eor	r1, r1
 9f2:	22 2e       	mov	r2, r18
 9f4:	f3 2d       	mov	r31, r3
 9f6:	f0 62       	ori	r31, 0x20	; 32
 9f8:	3f 2e       	mov	r3, r31
 9fa:	08 c0       	rjmp	.+16     	; 0xa0c <vfprintf+0x10c>
 9fc:	8c 36       	cpi	r24, 0x6C	; 108
 9fe:	21 f4       	brne	.+8      	; 0xa08 <vfprintf+0x108>
 a00:	83 2d       	mov	r24, r3
 a02:	80 68       	ori	r24, 0x80	; 128
 a04:	38 2e       	mov	r3, r24
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <vfprintf+0x10c>
 a08:	88 36       	cpi	r24, 0x68	; 104
 a0a:	41 f4       	brne	.+16     	; 0xa1c <vfprintf+0x11c>
 a0c:	f7 01       	movw	r30, r14
 a0e:	93 fd       	sbrc	r25, 3
 a10:	85 91       	lpm	r24, Z+
 a12:	93 ff       	sbrs	r25, 3
 a14:	81 91       	ld	r24, Z+
 a16:	7f 01       	movw	r14, r30
 a18:	81 11       	cpse	r24, r1
 a1a:	b3 cf       	rjmp	.-154    	; 0x982 <vfprintf+0x82>
 a1c:	98 2f       	mov	r25, r24
 a1e:	9f 7d       	andi	r25, 0xDF	; 223
 a20:	95 54       	subi	r25, 0x45	; 69
 a22:	93 30       	cpi	r25, 0x03	; 3
 a24:	28 f4       	brcc	.+10     	; 0xa30 <vfprintf+0x130>
 a26:	0c 5f       	subi	r16, 0xFC	; 252
 a28:	1f 4f       	sbci	r17, 0xFF	; 255
 a2a:	9f e3       	ldi	r25, 0x3F	; 63
 a2c:	99 83       	std	Y+1, r25	; 0x01
 a2e:	0d c0       	rjmp	.+26     	; 0xa4a <vfprintf+0x14a>
 a30:	83 36       	cpi	r24, 0x63	; 99
 a32:	31 f0       	breq	.+12     	; 0xa40 <vfprintf+0x140>
 a34:	83 37       	cpi	r24, 0x73	; 115
 a36:	71 f0       	breq	.+28     	; 0xa54 <vfprintf+0x154>
 a38:	83 35       	cpi	r24, 0x53	; 83
 a3a:	09 f0       	breq	.+2      	; 0xa3e <vfprintf+0x13e>
 a3c:	55 c0       	rjmp	.+170    	; 0xae8 <vfprintf+0x1e8>
 a3e:	20 c0       	rjmp	.+64     	; 0xa80 <vfprintf+0x180>
 a40:	f8 01       	movw	r30, r16
 a42:	80 81       	ld	r24, Z
 a44:	89 83       	std	Y+1, r24	; 0x01
 a46:	0e 5f       	subi	r16, 0xFE	; 254
 a48:	1f 4f       	sbci	r17, 0xFF	; 255
 a4a:	88 24       	eor	r8, r8
 a4c:	83 94       	inc	r8
 a4e:	91 2c       	mov	r9, r1
 a50:	53 01       	movw	r10, r6
 a52:	12 c0       	rjmp	.+36     	; 0xa78 <vfprintf+0x178>
 a54:	28 01       	movw	r4, r16
 a56:	f2 e0       	ldi	r31, 0x02	; 2
 a58:	4f 0e       	add	r4, r31
 a5a:	51 1c       	adc	r5, r1
 a5c:	f8 01       	movw	r30, r16
 a5e:	a0 80       	ld	r10, Z
 a60:	b1 80       	ldd	r11, Z+1	; 0x01
 a62:	36 fe       	sbrs	r3, 6
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <vfprintf+0x16c>
 a66:	69 2d       	mov	r22, r9
 a68:	70 e0       	ldi	r23, 0x00	; 0
 a6a:	02 c0       	rjmp	.+4      	; 0xa70 <vfprintf+0x170>
 a6c:	6f ef       	ldi	r22, 0xFF	; 255
 a6e:	7f ef       	ldi	r23, 0xFF	; 255
 a70:	c5 01       	movw	r24, r10
 a72:	4e d1       	rcall	.+668    	; 0xd10 <strnlen>
 a74:	4c 01       	movw	r8, r24
 a76:	82 01       	movw	r16, r4
 a78:	f3 2d       	mov	r31, r3
 a7a:	ff 77       	andi	r31, 0x7F	; 127
 a7c:	3f 2e       	mov	r3, r31
 a7e:	15 c0       	rjmp	.+42     	; 0xaaa <vfprintf+0x1aa>
 a80:	28 01       	movw	r4, r16
 a82:	22 e0       	ldi	r18, 0x02	; 2
 a84:	42 0e       	add	r4, r18
 a86:	51 1c       	adc	r5, r1
 a88:	f8 01       	movw	r30, r16
 a8a:	a0 80       	ld	r10, Z
 a8c:	b1 80       	ldd	r11, Z+1	; 0x01
 a8e:	36 fe       	sbrs	r3, 6
 a90:	03 c0       	rjmp	.+6      	; 0xa98 <vfprintf+0x198>
 a92:	69 2d       	mov	r22, r9
 a94:	70 e0       	ldi	r23, 0x00	; 0
 a96:	02 c0       	rjmp	.+4      	; 0xa9c <vfprintf+0x19c>
 a98:	6f ef       	ldi	r22, 0xFF	; 255
 a9a:	7f ef       	ldi	r23, 0xFF	; 255
 a9c:	c5 01       	movw	r24, r10
 a9e:	2d d1       	rcall	.+602    	; 0xcfa <strnlen_P>
 aa0:	4c 01       	movw	r8, r24
 aa2:	f3 2d       	mov	r31, r3
 aa4:	f0 68       	ori	r31, 0x80	; 128
 aa6:	3f 2e       	mov	r3, r31
 aa8:	82 01       	movw	r16, r4
 aaa:	33 fc       	sbrc	r3, 3
 aac:	19 c0       	rjmp	.+50     	; 0xae0 <vfprintf+0x1e0>
 aae:	82 2d       	mov	r24, r2
 ab0:	90 e0       	ldi	r25, 0x00	; 0
 ab2:	88 16       	cp	r8, r24
 ab4:	99 06       	cpc	r9, r25
 ab6:	a0 f4       	brcc	.+40     	; 0xae0 <vfprintf+0x1e0>
 ab8:	b6 01       	movw	r22, r12
 aba:	80 e2       	ldi	r24, 0x20	; 32
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	33 d1       	rcall	.+614    	; 0xd26 <fputc>
 ac0:	2a 94       	dec	r2
 ac2:	f5 cf       	rjmp	.-22     	; 0xaae <vfprintf+0x1ae>
 ac4:	f5 01       	movw	r30, r10
 ac6:	37 fc       	sbrc	r3, 7
 ac8:	85 91       	lpm	r24, Z+
 aca:	37 fe       	sbrs	r3, 7
 acc:	81 91       	ld	r24, Z+
 ace:	5f 01       	movw	r10, r30
 ad0:	b6 01       	movw	r22, r12
 ad2:	90 e0       	ldi	r25, 0x00	; 0
 ad4:	28 d1       	rcall	.+592    	; 0xd26 <fputc>
 ad6:	21 10       	cpse	r2, r1
 ad8:	2a 94       	dec	r2
 ada:	21 e0       	ldi	r18, 0x01	; 1
 adc:	82 1a       	sub	r8, r18
 ade:	91 08       	sbc	r9, r1
 ae0:	81 14       	cp	r8, r1
 ae2:	91 04       	cpc	r9, r1
 ae4:	79 f7       	brne	.-34     	; 0xac4 <vfprintf+0x1c4>
 ae6:	e1 c0       	rjmp	.+450    	; 0xcaa <vfprintf+0x3aa>
 ae8:	84 36       	cpi	r24, 0x64	; 100
 aea:	11 f0       	breq	.+4      	; 0xaf0 <vfprintf+0x1f0>
 aec:	89 36       	cpi	r24, 0x69	; 105
 aee:	39 f5       	brne	.+78     	; 0xb3e <vfprintf+0x23e>
 af0:	f8 01       	movw	r30, r16
 af2:	37 fe       	sbrs	r3, 7
 af4:	07 c0       	rjmp	.+14     	; 0xb04 <vfprintf+0x204>
 af6:	60 81       	ld	r22, Z
 af8:	71 81       	ldd	r23, Z+1	; 0x01
 afa:	82 81       	ldd	r24, Z+2	; 0x02
 afc:	93 81       	ldd	r25, Z+3	; 0x03
 afe:	0c 5f       	subi	r16, 0xFC	; 252
 b00:	1f 4f       	sbci	r17, 0xFF	; 255
 b02:	08 c0       	rjmp	.+16     	; 0xb14 <vfprintf+0x214>
 b04:	60 81       	ld	r22, Z
 b06:	71 81       	ldd	r23, Z+1	; 0x01
 b08:	07 2e       	mov	r0, r23
 b0a:	00 0c       	add	r0, r0
 b0c:	88 0b       	sbc	r24, r24
 b0e:	99 0b       	sbc	r25, r25
 b10:	0e 5f       	subi	r16, 0xFE	; 254
 b12:	1f 4f       	sbci	r17, 0xFF	; 255
 b14:	f3 2d       	mov	r31, r3
 b16:	ff 76       	andi	r31, 0x6F	; 111
 b18:	3f 2e       	mov	r3, r31
 b1a:	97 ff       	sbrs	r25, 7
 b1c:	09 c0       	rjmp	.+18     	; 0xb30 <vfprintf+0x230>
 b1e:	90 95       	com	r25
 b20:	80 95       	com	r24
 b22:	70 95       	com	r23
 b24:	61 95       	neg	r22
 b26:	7f 4f       	sbci	r23, 0xFF	; 255
 b28:	8f 4f       	sbci	r24, 0xFF	; 255
 b2a:	9f 4f       	sbci	r25, 0xFF	; 255
 b2c:	f0 68       	ori	r31, 0x80	; 128
 b2e:	3f 2e       	mov	r3, r31
 b30:	2a e0       	ldi	r18, 0x0A	; 10
 b32:	30 e0       	ldi	r19, 0x00	; 0
 b34:	a3 01       	movw	r20, r6
 b36:	33 d1       	rcall	.+614    	; 0xd9e <__ultoa_invert>
 b38:	88 2e       	mov	r8, r24
 b3a:	86 18       	sub	r8, r6
 b3c:	44 c0       	rjmp	.+136    	; 0xbc6 <vfprintf+0x2c6>
 b3e:	85 37       	cpi	r24, 0x75	; 117
 b40:	31 f4       	brne	.+12     	; 0xb4e <vfprintf+0x24e>
 b42:	23 2d       	mov	r18, r3
 b44:	2f 7e       	andi	r18, 0xEF	; 239
 b46:	b2 2e       	mov	r11, r18
 b48:	2a e0       	ldi	r18, 0x0A	; 10
 b4a:	30 e0       	ldi	r19, 0x00	; 0
 b4c:	25 c0       	rjmp	.+74     	; 0xb98 <vfprintf+0x298>
 b4e:	93 2d       	mov	r25, r3
 b50:	99 7f       	andi	r25, 0xF9	; 249
 b52:	b9 2e       	mov	r11, r25
 b54:	8f 36       	cpi	r24, 0x6F	; 111
 b56:	c1 f0       	breq	.+48     	; 0xb88 <vfprintf+0x288>
 b58:	18 f4       	brcc	.+6      	; 0xb60 <vfprintf+0x260>
 b5a:	88 35       	cpi	r24, 0x58	; 88
 b5c:	79 f0       	breq	.+30     	; 0xb7c <vfprintf+0x27c>
 b5e:	ae c0       	rjmp	.+348    	; 0xcbc <vfprintf+0x3bc>
 b60:	80 37       	cpi	r24, 0x70	; 112
 b62:	19 f0       	breq	.+6      	; 0xb6a <vfprintf+0x26a>
 b64:	88 37       	cpi	r24, 0x78	; 120
 b66:	21 f0       	breq	.+8      	; 0xb70 <vfprintf+0x270>
 b68:	a9 c0       	rjmp	.+338    	; 0xcbc <vfprintf+0x3bc>
 b6a:	e9 2f       	mov	r30, r25
 b6c:	e0 61       	ori	r30, 0x10	; 16
 b6e:	be 2e       	mov	r11, r30
 b70:	b4 fe       	sbrs	r11, 4
 b72:	0d c0       	rjmp	.+26     	; 0xb8e <vfprintf+0x28e>
 b74:	fb 2d       	mov	r31, r11
 b76:	f4 60       	ori	r31, 0x04	; 4
 b78:	bf 2e       	mov	r11, r31
 b7a:	09 c0       	rjmp	.+18     	; 0xb8e <vfprintf+0x28e>
 b7c:	34 fe       	sbrs	r3, 4
 b7e:	0a c0       	rjmp	.+20     	; 0xb94 <vfprintf+0x294>
 b80:	29 2f       	mov	r18, r25
 b82:	26 60       	ori	r18, 0x06	; 6
 b84:	b2 2e       	mov	r11, r18
 b86:	06 c0       	rjmp	.+12     	; 0xb94 <vfprintf+0x294>
 b88:	28 e0       	ldi	r18, 0x08	; 8
 b8a:	30 e0       	ldi	r19, 0x00	; 0
 b8c:	05 c0       	rjmp	.+10     	; 0xb98 <vfprintf+0x298>
 b8e:	20 e1       	ldi	r18, 0x10	; 16
 b90:	30 e0       	ldi	r19, 0x00	; 0
 b92:	02 c0       	rjmp	.+4      	; 0xb98 <vfprintf+0x298>
 b94:	20 e1       	ldi	r18, 0x10	; 16
 b96:	32 e0       	ldi	r19, 0x02	; 2
 b98:	f8 01       	movw	r30, r16
 b9a:	b7 fe       	sbrs	r11, 7
 b9c:	07 c0       	rjmp	.+14     	; 0xbac <vfprintf+0x2ac>
 b9e:	60 81       	ld	r22, Z
 ba0:	71 81       	ldd	r23, Z+1	; 0x01
 ba2:	82 81       	ldd	r24, Z+2	; 0x02
 ba4:	93 81       	ldd	r25, Z+3	; 0x03
 ba6:	0c 5f       	subi	r16, 0xFC	; 252
 ba8:	1f 4f       	sbci	r17, 0xFF	; 255
 baa:	06 c0       	rjmp	.+12     	; 0xbb8 <vfprintf+0x2b8>
 bac:	60 81       	ld	r22, Z
 bae:	71 81       	ldd	r23, Z+1	; 0x01
 bb0:	80 e0       	ldi	r24, 0x00	; 0
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	0e 5f       	subi	r16, 0xFE	; 254
 bb6:	1f 4f       	sbci	r17, 0xFF	; 255
 bb8:	a3 01       	movw	r20, r6
 bba:	f1 d0       	rcall	.+482    	; 0xd9e <__ultoa_invert>
 bbc:	88 2e       	mov	r8, r24
 bbe:	86 18       	sub	r8, r6
 bc0:	fb 2d       	mov	r31, r11
 bc2:	ff 77       	andi	r31, 0x7F	; 127
 bc4:	3f 2e       	mov	r3, r31
 bc6:	36 fe       	sbrs	r3, 6
 bc8:	0d c0       	rjmp	.+26     	; 0xbe4 <vfprintf+0x2e4>
 bca:	23 2d       	mov	r18, r3
 bcc:	2e 7f       	andi	r18, 0xFE	; 254
 bce:	a2 2e       	mov	r10, r18
 bd0:	89 14       	cp	r8, r9
 bd2:	58 f4       	brcc	.+22     	; 0xbea <vfprintf+0x2ea>
 bd4:	34 fe       	sbrs	r3, 4
 bd6:	0b c0       	rjmp	.+22     	; 0xbee <vfprintf+0x2ee>
 bd8:	32 fc       	sbrc	r3, 2
 bda:	09 c0       	rjmp	.+18     	; 0xbee <vfprintf+0x2ee>
 bdc:	83 2d       	mov	r24, r3
 bde:	8e 7e       	andi	r24, 0xEE	; 238
 be0:	a8 2e       	mov	r10, r24
 be2:	05 c0       	rjmp	.+10     	; 0xbee <vfprintf+0x2ee>
 be4:	b8 2c       	mov	r11, r8
 be6:	a3 2c       	mov	r10, r3
 be8:	03 c0       	rjmp	.+6      	; 0xbf0 <vfprintf+0x2f0>
 bea:	b8 2c       	mov	r11, r8
 bec:	01 c0       	rjmp	.+2      	; 0xbf0 <vfprintf+0x2f0>
 bee:	b9 2c       	mov	r11, r9
 bf0:	a4 fe       	sbrs	r10, 4
 bf2:	0f c0       	rjmp	.+30     	; 0xc12 <vfprintf+0x312>
 bf4:	fe 01       	movw	r30, r28
 bf6:	e8 0d       	add	r30, r8
 bf8:	f1 1d       	adc	r31, r1
 bfa:	80 81       	ld	r24, Z
 bfc:	80 33       	cpi	r24, 0x30	; 48
 bfe:	21 f4       	brne	.+8      	; 0xc08 <vfprintf+0x308>
 c00:	9a 2d       	mov	r25, r10
 c02:	99 7e       	andi	r25, 0xE9	; 233
 c04:	a9 2e       	mov	r10, r25
 c06:	09 c0       	rjmp	.+18     	; 0xc1a <vfprintf+0x31a>
 c08:	a2 fe       	sbrs	r10, 2
 c0a:	06 c0       	rjmp	.+12     	; 0xc18 <vfprintf+0x318>
 c0c:	b3 94       	inc	r11
 c0e:	b3 94       	inc	r11
 c10:	04 c0       	rjmp	.+8      	; 0xc1a <vfprintf+0x31a>
 c12:	8a 2d       	mov	r24, r10
 c14:	86 78       	andi	r24, 0x86	; 134
 c16:	09 f0       	breq	.+2      	; 0xc1a <vfprintf+0x31a>
 c18:	b3 94       	inc	r11
 c1a:	a3 fc       	sbrc	r10, 3
 c1c:	10 c0       	rjmp	.+32     	; 0xc3e <vfprintf+0x33e>
 c1e:	a0 fe       	sbrs	r10, 0
 c20:	06 c0       	rjmp	.+12     	; 0xc2e <vfprintf+0x32e>
 c22:	b2 14       	cp	r11, r2
 c24:	80 f4       	brcc	.+32     	; 0xc46 <vfprintf+0x346>
 c26:	28 0c       	add	r2, r8
 c28:	92 2c       	mov	r9, r2
 c2a:	9b 18       	sub	r9, r11
 c2c:	0d c0       	rjmp	.+26     	; 0xc48 <vfprintf+0x348>
 c2e:	b2 14       	cp	r11, r2
 c30:	58 f4       	brcc	.+22     	; 0xc48 <vfprintf+0x348>
 c32:	b6 01       	movw	r22, r12
 c34:	80 e2       	ldi	r24, 0x20	; 32
 c36:	90 e0       	ldi	r25, 0x00	; 0
 c38:	76 d0       	rcall	.+236    	; 0xd26 <fputc>
 c3a:	b3 94       	inc	r11
 c3c:	f8 cf       	rjmp	.-16     	; 0xc2e <vfprintf+0x32e>
 c3e:	b2 14       	cp	r11, r2
 c40:	18 f4       	brcc	.+6      	; 0xc48 <vfprintf+0x348>
 c42:	2b 18       	sub	r2, r11
 c44:	02 c0       	rjmp	.+4      	; 0xc4a <vfprintf+0x34a>
 c46:	98 2c       	mov	r9, r8
 c48:	21 2c       	mov	r2, r1
 c4a:	a4 fe       	sbrs	r10, 4
 c4c:	0f c0       	rjmp	.+30     	; 0xc6c <vfprintf+0x36c>
 c4e:	b6 01       	movw	r22, r12
 c50:	80 e3       	ldi	r24, 0x30	; 48
 c52:	90 e0       	ldi	r25, 0x00	; 0
 c54:	68 d0       	rcall	.+208    	; 0xd26 <fputc>
 c56:	a2 fe       	sbrs	r10, 2
 c58:	16 c0       	rjmp	.+44     	; 0xc86 <vfprintf+0x386>
 c5a:	a1 fc       	sbrc	r10, 1
 c5c:	03 c0       	rjmp	.+6      	; 0xc64 <vfprintf+0x364>
 c5e:	88 e7       	ldi	r24, 0x78	; 120
 c60:	90 e0       	ldi	r25, 0x00	; 0
 c62:	02 c0       	rjmp	.+4      	; 0xc68 <vfprintf+0x368>
 c64:	88 e5       	ldi	r24, 0x58	; 88
 c66:	90 e0       	ldi	r25, 0x00	; 0
 c68:	b6 01       	movw	r22, r12
 c6a:	0c c0       	rjmp	.+24     	; 0xc84 <vfprintf+0x384>
 c6c:	8a 2d       	mov	r24, r10
 c6e:	86 78       	andi	r24, 0x86	; 134
 c70:	51 f0       	breq	.+20     	; 0xc86 <vfprintf+0x386>
 c72:	a1 fe       	sbrs	r10, 1
 c74:	02 c0       	rjmp	.+4      	; 0xc7a <vfprintf+0x37a>
 c76:	8b e2       	ldi	r24, 0x2B	; 43
 c78:	01 c0       	rjmp	.+2      	; 0xc7c <vfprintf+0x37c>
 c7a:	80 e2       	ldi	r24, 0x20	; 32
 c7c:	a7 fc       	sbrc	r10, 7
 c7e:	8d e2       	ldi	r24, 0x2D	; 45
 c80:	b6 01       	movw	r22, r12
 c82:	90 e0       	ldi	r25, 0x00	; 0
 c84:	50 d0       	rcall	.+160    	; 0xd26 <fputc>
 c86:	89 14       	cp	r8, r9
 c88:	30 f4       	brcc	.+12     	; 0xc96 <vfprintf+0x396>
 c8a:	b6 01       	movw	r22, r12
 c8c:	80 e3       	ldi	r24, 0x30	; 48
 c8e:	90 e0       	ldi	r25, 0x00	; 0
 c90:	4a d0       	rcall	.+148    	; 0xd26 <fputc>
 c92:	9a 94       	dec	r9
 c94:	f8 cf       	rjmp	.-16     	; 0xc86 <vfprintf+0x386>
 c96:	8a 94       	dec	r8
 c98:	f3 01       	movw	r30, r6
 c9a:	e8 0d       	add	r30, r8
 c9c:	f1 1d       	adc	r31, r1
 c9e:	80 81       	ld	r24, Z
 ca0:	b6 01       	movw	r22, r12
 ca2:	90 e0       	ldi	r25, 0x00	; 0
 ca4:	40 d0       	rcall	.+128    	; 0xd26 <fputc>
 ca6:	81 10       	cpse	r8, r1
 ca8:	f6 cf       	rjmp	.-20     	; 0xc96 <vfprintf+0x396>
 caa:	22 20       	and	r2, r2
 cac:	09 f4       	brne	.+2      	; 0xcb0 <vfprintf+0x3b0>
 cae:	4e ce       	rjmp	.-868    	; 0x94c <vfprintf+0x4c>
 cb0:	b6 01       	movw	r22, r12
 cb2:	80 e2       	ldi	r24, 0x20	; 32
 cb4:	90 e0       	ldi	r25, 0x00	; 0
 cb6:	37 d0       	rcall	.+110    	; 0xd26 <fputc>
 cb8:	2a 94       	dec	r2
 cba:	f7 cf       	rjmp	.-18     	; 0xcaa <vfprintf+0x3aa>
 cbc:	f6 01       	movw	r30, r12
 cbe:	86 81       	ldd	r24, Z+6	; 0x06
 cc0:	97 81       	ldd	r25, Z+7	; 0x07
 cc2:	02 c0       	rjmp	.+4      	; 0xcc8 <vfprintf+0x3c8>
 cc4:	8f ef       	ldi	r24, 0xFF	; 255
 cc6:	9f ef       	ldi	r25, 0xFF	; 255
 cc8:	2b 96       	adiw	r28, 0x0b	; 11
 cca:	0f b6       	in	r0, 0x3f	; 63
 ccc:	f8 94       	cli
 cce:	de bf       	out	0x3e, r29	; 62
 cd0:	0f be       	out	0x3f, r0	; 63
 cd2:	cd bf       	out	0x3d, r28	; 61
 cd4:	df 91       	pop	r29
 cd6:	cf 91       	pop	r28
 cd8:	1f 91       	pop	r17
 cda:	0f 91       	pop	r16
 cdc:	ff 90       	pop	r15
 cde:	ef 90       	pop	r14
 ce0:	df 90       	pop	r13
 ce2:	cf 90       	pop	r12
 ce4:	bf 90       	pop	r11
 ce6:	af 90       	pop	r10
 ce8:	9f 90       	pop	r9
 cea:	8f 90       	pop	r8
 cec:	7f 90       	pop	r7
 cee:	6f 90       	pop	r6
 cf0:	5f 90       	pop	r5
 cf2:	4f 90       	pop	r4
 cf4:	3f 90       	pop	r3
 cf6:	2f 90       	pop	r2
 cf8:	08 95       	ret

00000cfa <strnlen_P>:
 cfa:	fc 01       	movw	r30, r24
 cfc:	05 90       	lpm	r0, Z+
 cfe:	61 50       	subi	r22, 0x01	; 1
 d00:	70 40       	sbci	r23, 0x00	; 0
 d02:	01 10       	cpse	r0, r1
 d04:	d8 f7       	brcc	.-10     	; 0xcfc <strnlen_P+0x2>
 d06:	80 95       	com	r24
 d08:	90 95       	com	r25
 d0a:	8e 0f       	add	r24, r30
 d0c:	9f 1f       	adc	r25, r31
 d0e:	08 95       	ret

00000d10 <strnlen>:
 d10:	fc 01       	movw	r30, r24
 d12:	61 50       	subi	r22, 0x01	; 1
 d14:	70 40       	sbci	r23, 0x00	; 0
 d16:	01 90       	ld	r0, Z+
 d18:	01 10       	cpse	r0, r1
 d1a:	d8 f7       	brcc	.-10     	; 0xd12 <strnlen+0x2>
 d1c:	80 95       	com	r24
 d1e:	90 95       	com	r25
 d20:	8e 0f       	add	r24, r30
 d22:	9f 1f       	adc	r25, r31
 d24:	08 95       	ret

00000d26 <fputc>:
 d26:	0f 93       	push	r16
 d28:	1f 93       	push	r17
 d2a:	cf 93       	push	r28
 d2c:	df 93       	push	r29
 d2e:	fb 01       	movw	r30, r22
 d30:	23 81       	ldd	r18, Z+3	; 0x03
 d32:	21 fd       	sbrc	r18, 1
 d34:	03 c0       	rjmp	.+6      	; 0xd3c <fputc+0x16>
 d36:	8f ef       	ldi	r24, 0xFF	; 255
 d38:	9f ef       	ldi	r25, 0xFF	; 255
 d3a:	2c c0       	rjmp	.+88     	; 0xd94 <fputc+0x6e>
 d3c:	22 ff       	sbrs	r18, 2
 d3e:	16 c0       	rjmp	.+44     	; 0xd6c <fputc+0x46>
 d40:	46 81       	ldd	r20, Z+6	; 0x06
 d42:	57 81       	ldd	r21, Z+7	; 0x07
 d44:	24 81       	ldd	r18, Z+4	; 0x04
 d46:	35 81       	ldd	r19, Z+5	; 0x05
 d48:	42 17       	cp	r20, r18
 d4a:	53 07       	cpc	r21, r19
 d4c:	44 f4       	brge	.+16     	; 0xd5e <fputc+0x38>
 d4e:	a0 81       	ld	r26, Z
 d50:	b1 81       	ldd	r27, Z+1	; 0x01
 d52:	9d 01       	movw	r18, r26
 d54:	2f 5f       	subi	r18, 0xFF	; 255
 d56:	3f 4f       	sbci	r19, 0xFF	; 255
 d58:	31 83       	std	Z+1, r19	; 0x01
 d5a:	20 83       	st	Z, r18
 d5c:	8c 93       	st	X, r24
 d5e:	26 81       	ldd	r18, Z+6	; 0x06
 d60:	37 81       	ldd	r19, Z+7	; 0x07
 d62:	2f 5f       	subi	r18, 0xFF	; 255
 d64:	3f 4f       	sbci	r19, 0xFF	; 255
 d66:	37 83       	std	Z+7, r19	; 0x07
 d68:	26 83       	std	Z+6, r18	; 0x06
 d6a:	14 c0       	rjmp	.+40     	; 0xd94 <fputc+0x6e>
 d6c:	8b 01       	movw	r16, r22
 d6e:	ec 01       	movw	r28, r24
 d70:	fb 01       	movw	r30, r22
 d72:	00 84       	ldd	r0, Z+8	; 0x08
 d74:	f1 85       	ldd	r31, Z+9	; 0x09
 d76:	e0 2d       	mov	r30, r0
 d78:	09 95       	icall
 d7a:	89 2b       	or	r24, r25
 d7c:	e1 f6       	brne	.-72     	; 0xd36 <fputc+0x10>
 d7e:	d8 01       	movw	r26, r16
 d80:	16 96       	adiw	r26, 0x06	; 6
 d82:	8d 91       	ld	r24, X+
 d84:	9c 91       	ld	r25, X
 d86:	17 97       	sbiw	r26, 0x07	; 7
 d88:	01 96       	adiw	r24, 0x01	; 1
 d8a:	17 96       	adiw	r26, 0x07	; 7
 d8c:	9c 93       	st	X, r25
 d8e:	8e 93       	st	-X, r24
 d90:	16 97       	sbiw	r26, 0x06	; 6
 d92:	ce 01       	movw	r24, r28
 d94:	df 91       	pop	r29
 d96:	cf 91       	pop	r28
 d98:	1f 91       	pop	r17
 d9a:	0f 91       	pop	r16
 d9c:	08 95       	ret

00000d9e <__ultoa_invert>:
 d9e:	fa 01       	movw	r30, r20
 da0:	aa 27       	eor	r26, r26
 da2:	28 30       	cpi	r18, 0x08	; 8
 da4:	51 f1       	breq	.+84     	; 0xdfa <__ultoa_invert+0x5c>
 da6:	20 31       	cpi	r18, 0x10	; 16
 da8:	81 f1       	breq	.+96     	; 0xe0a <__ultoa_invert+0x6c>
 daa:	e8 94       	clt
 dac:	6f 93       	push	r22
 dae:	6e 7f       	andi	r22, 0xFE	; 254
 db0:	6e 5f       	subi	r22, 0xFE	; 254
 db2:	7f 4f       	sbci	r23, 0xFF	; 255
 db4:	8f 4f       	sbci	r24, 0xFF	; 255
 db6:	9f 4f       	sbci	r25, 0xFF	; 255
 db8:	af 4f       	sbci	r26, 0xFF	; 255
 dba:	b1 e0       	ldi	r27, 0x01	; 1
 dbc:	3e d0       	rcall	.+124    	; 0xe3a <__ultoa_invert+0x9c>
 dbe:	b4 e0       	ldi	r27, 0x04	; 4
 dc0:	3c d0       	rcall	.+120    	; 0xe3a <__ultoa_invert+0x9c>
 dc2:	67 0f       	add	r22, r23
 dc4:	78 1f       	adc	r23, r24
 dc6:	89 1f       	adc	r24, r25
 dc8:	9a 1f       	adc	r25, r26
 dca:	a1 1d       	adc	r26, r1
 dcc:	68 0f       	add	r22, r24
 dce:	79 1f       	adc	r23, r25
 dd0:	8a 1f       	adc	r24, r26
 dd2:	91 1d       	adc	r25, r1
 dd4:	a1 1d       	adc	r26, r1
 dd6:	6a 0f       	add	r22, r26
 dd8:	71 1d       	adc	r23, r1
 dda:	81 1d       	adc	r24, r1
 ddc:	91 1d       	adc	r25, r1
 dde:	a1 1d       	adc	r26, r1
 de0:	20 d0       	rcall	.+64     	; 0xe22 <__ultoa_invert+0x84>
 de2:	09 f4       	brne	.+2      	; 0xde6 <__ultoa_invert+0x48>
 de4:	68 94       	set
 de6:	3f 91       	pop	r19
 de8:	2a e0       	ldi	r18, 0x0A	; 10
 dea:	26 9f       	mul	r18, r22
 dec:	11 24       	eor	r1, r1
 dee:	30 19       	sub	r19, r0
 df0:	30 5d       	subi	r19, 0xD0	; 208
 df2:	31 93       	st	Z+, r19
 df4:	de f6       	brtc	.-74     	; 0xdac <__ultoa_invert+0xe>
 df6:	cf 01       	movw	r24, r30
 df8:	08 95       	ret
 dfa:	46 2f       	mov	r20, r22
 dfc:	47 70       	andi	r20, 0x07	; 7
 dfe:	40 5d       	subi	r20, 0xD0	; 208
 e00:	41 93       	st	Z+, r20
 e02:	b3 e0       	ldi	r27, 0x03	; 3
 e04:	0f d0       	rcall	.+30     	; 0xe24 <__ultoa_invert+0x86>
 e06:	c9 f7       	brne	.-14     	; 0xdfa <__ultoa_invert+0x5c>
 e08:	f6 cf       	rjmp	.-20     	; 0xdf6 <__ultoa_invert+0x58>
 e0a:	46 2f       	mov	r20, r22
 e0c:	4f 70       	andi	r20, 0x0F	; 15
 e0e:	40 5d       	subi	r20, 0xD0	; 208
 e10:	4a 33       	cpi	r20, 0x3A	; 58
 e12:	18 f0       	brcs	.+6      	; 0xe1a <__ultoa_invert+0x7c>
 e14:	49 5d       	subi	r20, 0xD9	; 217
 e16:	31 fd       	sbrc	r19, 1
 e18:	40 52       	subi	r20, 0x20	; 32
 e1a:	41 93       	st	Z+, r20
 e1c:	02 d0       	rcall	.+4      	; 0xe22 <__ultoa_invert+0x84>
 e1e:	a9 f7       	brne	.-22     	; 0xe0a <__ultoa_invert+0x6c>
 e20:	ea cf       	rjmp	.-44     	; 0xdf6 <__ultoa_invert+0x58>
 e22:	b4 e0       	ldi	r27, 0x04	; 4
 e24:	a6 95       	lsr	r26
 e26:	97 95       	ror	r25
 e28:	87 95       	ror	r24
 e2a:	77 95       	ror	r23
 e2c:	67 95       	ror	r22
 e2e:	ba 95       	dec	r27
 e30:	c9 f7       	brne	.-14     	; 0xe24 <__ultoa_invert+0x86>
 e32:	00 97       	sbiw	r24, 0x00	; 0
 e34:	61 05       	cpc	r22, r1
 e36:	71 05       	cpc	r23, r1
 e38:	08 95       	ret
 e3a:	9b 01       	movw	r18, r22
 e3c:	ac 01       	movw	r20, r24
 e3e:	0a 2e       	mov	r0, r26
 e40:	06 94       	lsr	r0
 e42:	57 95       	ror	r21
 e44:	47 95       	ror	r20
 e46:	37 95       	ror	r19
 e48:	27 95       	ror	r18
 e4a:	ba 95       	dec	r27
 e4c:	c9 f7       	brne	.-14     	; 0xe40 <__ultoa_invert+0xa2>
 e4e:	62 0f       	add	r22, r18
 e50:	73 1f       	adc	r23, r19
 e52:	84 1f       	adc	r24, r20
 e54:	95 1f       	adc	r25, r21
 e56:	a0 1d       	adc	r26, r0
 e58:	08 95       	ret

00000e5a <_exit>:
 e5a:	f8 94       	cli

00000e5c <__stop_program>:
 e5c:	ff cf       	rjmp	.-2      	; 0xe5c <__stop_program>
